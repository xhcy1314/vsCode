{
	"keys": {
		"vs/code/electron-main/main": [
			"secondInstanceNoResponse",
			"secondInstanceNoResponseDetail",
			"secondInstanceAdmin",
			"secondInstanceAdminDetail",
			{
				"key": "close",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/code/node/cliProcessMain": [
			"notFound",
			"notInstalled",
			"useId",
			"successVsixInstall",
			"cancelVsixInstall",
			"alreadyInstalled",
			"foundExtension",
			"installing",
			"successInstall",
			"cancelVsixInstall",
			"uninstalling",
			"successUninstall"
		],
		"vs/code/electron-browser/issue/issueReporterMain": [
			"hide",
			"show",
			"previewOnGitHub",
			"loadingData",
			"rateLimited",
			"similarIssues",
			"open",
			"closed",
			"open",
			"closed",
			"noSimilarIssues",
			"settingsSearchIssue",
			"bugReporter",
			"featureRequest",
			"performanceIssue",
			"stepsToReproduce",
			"bugDescription",
			"stepsToReproduce",
			"performanceIssueDesciption",
			"description",
			"featureRequestDescription",
			"expectedResults",
			"settingsSearchResultsDescription",
			"pasteData",
			"disabledExtensions"
		],
		"vs/code/electron-browser/processExplorer/processExplorerMain": [
			"cpu",
			"memory",
			"pid",
			"name",
			"killProcess",
			"forceKillProcess",
			"copy",
			"copyAll",
			"copyAll"
		],
		"vs/workbench/services/configuration/common/configurationExtensionPoint": [
			"vscode.extension.contributes.configuration.title",
			"vscode.extension.contributes.configuration.properties",
			"scope.application.description",
			"scope.window.description",
			"scope.resource.description",
			"scope.description",
			"vscode.extension.contributes.defaultConfiguration",
			"vscode.extension.contributes.configuration",
			"invalid.title",
			"invalid.properties",
			"invalid.property",
			"invalid.allOf",
			"workspaceConfig.folders.description",
			"workspaceConfig.path.description",
			"workspaceConfig.name.description",
			"workspaceConfig.uri.description",
			"workspaceConfig.name.description",
			"workspaceConfig.settings.description",
			"workspaceConfig.launch.description",
			"workspaceConfig.extensions.description",
			"unknownWorkspaceProperty"
		],
		"vs/workbench/services/actions/electron-browser/menusExtensionPoint": [
			"requirearray",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.menuItem.command",
			"vscode.extension.contributes.menuItem.alt",
			"vscode.extension.contributes.menuItem.when",
			"vscode.extension.contributes.menuItem.group",
			"vscode.extension.contributes.menus",
			"menus.commandPalette",
			"menus.touchBar",
			"menus.editorTitle",
			"menus.editorContext",
			"menus.explorerContext",
			"menus.editorTabContext",
			"menus.debugCallstackContext",
			"menus.scmTitle",
			"menus.scmSourceControl",
			"menus.resourceGroupContext",
			"menus.resourceStateContext",
			"view.viewTitle",
			"view.itemContext",
			"nonempty",
			"requirestring",
			"opticon",
			"requireStringOrObject",
			"requirestring",
			"requirestrings",
			"vscode.extension.contributes.commandType.command",
			"vscode.extension.contributes.commandType.title",
			"vscode.extension.contributes.commandType.category",
			"vscode.extension.contributes.commandType.icon",
			"vscode.extension.contributes.commandType.icon.light",
			"vscode.extension.contributes.commandType.icon.dark",
			"vscode.extension.contributes.commands",
			"dup",
			"menuId.invalid",
			"missing.command",
			"missing.altCommand",
			"dupe.command"
		],
		"vs/workbench/api/browser/viewsContainersExtensionPoint": [
			{
				"key": "vscode.extension.contributes.views.containers.id",
				"comment": [
					"Contribution refers to those that an extension contributes to VS Code through an extension/contribution point. "
				]
			},
			"vscode.extension.contributes.views.containers.title",
			"vscode.extension.contributes.views.containers.icon",
			"vscode.extension.contributes.viewsContainers",
			"views.container.activitybar",
			"test",
			"requirearray",
			"requireidstring",
			"requireidstring",
			"requirestring",
			"requirestring",
			"showViewlet",
			"view"
		],
		"vs/workbench/api/browser/viewsExtensionPoint": [
			"vscode.extension.contributes.view.id",
			"vscode.extension.contributes.view.name",
			"vscode.extension.contributes.view.when",
			"vscode.extension.contributes.views",
			"views.explorer",
			"views.debug",
			"views.scm",
			"views.test",
			"views.contributed",
			"ViewContainerDoesnotExist",
			"duplicateView1",
			"duplicateView2",
			"requirearray",
			"requirestring",
			"requirestring",
			"optstring"
		],
		"vs/workbench/parts/localizations/electron-browser/localizations.contribution": [
			"updateLocale",
			"activateLanguagePack",
			"yes",
			"no",
			"neverAgain",
			"install language pack",
			"install",
			"more information",
			"neverAgain",
			"JsonSchema.locale",
			"vscode.extension.contributes.localizations",
			"vscode.extension.contributes.localizations.languageId",
			"vscode.extension.contributes.localizations.languageName",
			"vscode.extension.contributes.localizations.languageNameLocalized",
			"vscode.extension.contributes.localizations.translations",
			"vscode.extension.contributes.localizations.translations.id",
			"vscode.extension.contributes.localizations.translations.id.pattern",
			"vscode.extension.contributes.localizations.translations.path"
		],
		"vs/workbench/browser/actions/toggleActivityBarVisibility": [
			"toggleActivityBar",
			"view"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"toggleStatusbar",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"toggleSidebar",
			"view"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"toggleSidebarPosition",
			"view"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"flipLayout",
			"view"
		],
		"vs/workbench/browser/actions/toggleZenMode": [
			"toggleZenMode",
			"view"
		],
		"vs/workbench/browser/actions/toggleCenteredLayout": [
			"toggleCenteredLayout",
			"view"
		],
		"vs/workbench/browser/actions/toggleTabsVisibility": [
			"toggleTabs",
			"view"
		],
		"vs/workbench/parts/preferences/electron-browser/preferences.contribution": [
			"defaultPreferencesEditor",
			"settingsEditor2",
			"keybindingsEditor",
			"preferences"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditorContribution": [
			"defineKeybinding.start",
			"defineKeybinding.kbLayoutErrorMessage",
			{
				"key": "defineKeybinding.kbLayoutLocalAndUSMessage",
				"comment": [
					"Please translate maintaining the stars (*) around the placeholders such that they will be rendered in bold.",
					"The placeholders will contain a keyboard combination e.g. Ctrl+Shift+/"
				]
			},
			{
				"key": "defineKeybinding.kbLayoutLocalMessage",
				"comment": [
					"Please translate maintaining the stars (*) around the placeholder such that it will be rendered in bold.",
					"The placeholder will contain a keyboard combination e.g. Ctrl+Shift+/"
				]
			}
		],
		"vs/workbench/parts/logs/electron-browser/logs.contribution": [
			"mainLog",
			"sharedLog",
			"rendererLog",
			"extensionsLog",
			"developer"
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"view",
			"commandsHandlerDescriptionDefault",
			"gotoLineDescriptionMac",
			"gotoLineDescriptionWin",
			"gotoSymbolDescription",
			"gotoSymbolDescriptionScoped",
			"helpDescription",
			"viewPickerDescription"
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"entryAriaLabel",
			"noResultsFoundInGroup",
			"noOpenedEditors",
			"noResultsFound",
			"noOpenedEditorsAllGroups"
		],
		"vs/workbench/parts/files/electron-browser/fileActions.contribution": [
			"filesCategory",
			"revealInSideBar",
			"acceptLocalChanges",
			"revertLocalChanges",
			"copyPathOfActive",
			"saveAllInGroup",
			"saveFiles",
			"revert",
			"compareActiveWithSaved",
			"closeEditor",
			"view",
			"openToSide",
			"revealInWindows",
			"revealInMac",
			"openContainer",
			"copyPath",
			"revert",
			"saveAll",
			"compareWithSaved",
			"compareWithSelected",
			"compareSource",
			"compareSelected",
			"close",
			"closeOthers",
			"closeSaved",
			"closeAll",
			"deleteFile",
			"newFile",
			"openFile"
		],
		"vs/workbench/parts/files/electron-browser/explorerViewlet": [
			"folders"
		],
		"vs/workbench/parts/files/electron-browser/files.contribution": [
			"showExplorerViewlet",
			"explore",
			"view",
			"textFileEditor",
			"binaryFileEditor",
			"filesConfigurationTitle",
			"exclude",
			"files.exclude.boolean",
			"files.exclude.when",
			"associations",
			"encoding",
			"autoGuessEncoding",
			"eol",
			"trimTrailingWhitespace",
			"insertFinalNewline",
			"trimFinalNewlines",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.off"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.afterDelay"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.onFocusChange"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "files.autoSave.onWindowChange"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "autoSave"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "autoSaveDelay"
			},
			"watcherExclude",
			"hotExit.off",
			"hotExit.onExit",
			"hotExit.onExitAndWindowClose",
			"hotExit",
			"useExperimentalFileWatcher",
			"defaultLanguage",
			"maxMemoryForLargeFilesMB",
			"editorConfigurationTitle",
			"formatOnSave",
			"formatOnSaveTimeout",
			"explorerConfigurationTitle",
			{
				"key": "openEditorsVisible",
				"comment": [
					"Open is an adjective"
				]
			},
			"autoReveal",
			"enableDragAndDrop",
			"confirmDragAndDrop",
			"confirmDelete",
			"sortOrder.default",
			"sortOrder.mixed",
			"sortOrder.filesFirst",
			"sortOrder.type",
			"sortOrder.modified",
			{
				"key": "sortOrder",
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				]
			},
			"explorer.decorations.colors",
			"explorer.decorations.badges"
		],
		"vs/workbench/parts/search/electron-browser/search.contribution": [
			"search",
			"copyMatchLabel",
			"copyPathLabel",
			"copyAllLabel",
			"clearSearchHistoryLabel",
			"toggleSearchViewPositionLabel",
			"findInFolder",
			"findInWorkspace",
			"showTriggerActions",
			"name",
			"name",
			"showSearchViewl",
			"view",
			"findInFiles",
			"openAnythingHandlerDescription",
			"openSymbolDescriptionNormal",
			"searchConfigurationTitle",
			"exclude",
			"exclude.boolean",
			"exclude.when",
			"useRipgrep",
			"useIgnoreFiles",
			"search.quickOpen.includeSymbols",
			"search.followSymlinks",
			"search.smartCase",
			"search.globalFindClipboard",
			"search.location"
		],
		"vs/workbench/parts/search/browser/searchView": [
			"moreSearch",
			"searchScope.includes",
			"label.includes",
			"searchScope.excludes",
			"label.excludes",
			"replaceAll.confirmation.title",
			"replaceAll.confirm.button",
			"replaceAll.occurrence.file.message",
			"removeAll.occurrence.file.message",
			"replaceAll.occurrence.files.message",
			"removeAll.occurrence.files.message",
			"replaceAll.occurrences.file.message",
			"removeAll.occurrences.file.message",
			"replaceAll.occurrences.files.message",
			"removeAll.occurrences.files.message",
			"removeAll.occurrence.file.confirmation.message",
			"replaceAll.occurrence.file.confirmation.message",
			"removeAll.occurrence.files.confirmation.message",
			"replaceAll.occurrence.files.confirmation.message",
			"removeAll.occurrences.file.confirmation.message",
			"replaceAll.occurrences.file.confirmation.message",
			"removeAll.occurrences.files.confirmation.message",
			"replaceAll.occurrences.files.confirmation.message",
			"treeAriaLabel",
			"searchPathNotFoundError",
			"searchMaxResultsWarning",
			"searchCanceled",
			"noResultsIncludesExcludes",
			"noResultsIncludes",
			"noResultsExcludes",
			"noResultsFound",
			"rerunSearch.message",
			"rerunSearchInAll.message",
			"openSettings.message",
			"openSettings.learnMore",
			"ariaSearchResultsStatus",
			"search.file.result",
			"search.files.result",
			"search.file.results",
			"search.files.results",
			"searchWithoutFolder",
			"openFolder"
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"fileAndTypeResults",
			"fileResults"
		],
		"vs/workbench/parts/scm/electron-browser/scm.contribution": [
			"toggleGitViewlet",
			"source control",
			"toggleSCMViewlet",
			"view",
			"scmConfigurationTitle",
			"alwaysShowProviders",
			"diffDecorations",
			"diffGutterWidth"
		],
		"vs/workbench/parts/scm/electron-browser/scmViewlet": [
			"scm providers",
			"hideRepository",
			"no open repo",
			"source control",
			"viewletTitle",
			"hideView"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"toggleDebugViewlet",
			"toggleDebugPanel",
			"debug",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugPanel"
			},
			"variables",
			"watch",
			"callStack",
			"breakpoints",
			"view",
			"view",
			"debugCategory",
			"debugCommands",
			"debugConfigurationTitle",
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "allowBreakpointsEverywhere"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "openExplorerOnEnd"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "inlineValues"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "toolBarLocation"
			},
			"never",
			"always",
			"onFirstSessionStart",
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "showInStatusBar"
			},
			"openDebug",
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "enableAllHovers"
			},
			{
				"comment": [
					"This is the description for a setting"
				],
				"key": "launch"
			}
		],
		"vs/workbench/parts/debug/browser/debugQuickOpen": [
			"entryAriaLabel",
			"entryAriaLabel",
			"debugAriaLabel",
			"addConfigTo",
			"addConfiguration",
			"noConfigurationsMatching",
			"noConfigurationsFound"
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"replAriaLabel",
			{
				"key": "actions.repl.acceptInput",
				"comment": [
					"Apply input from the debug console input box"
				]
			},
			"actions.repl.copyAll"
		],
		"vs/workbench/parts/debug/browser/debugEditorActions": [
			"toggleBreakpointAction",
			"conditionalBreakpointEditorAction",
			"logPointEditorAction",
			"runToCursor",
			"debugEvaluate",
			"debugAddToWatch",
			"showDebugHover",
			"goToNextBreakpoint",
			"goToPreviousBreakpoint"
		],
		"vs/workbench/parts/debug/browser/debugViewlet": [
			"startAdditionalSession",
			"debugFocusVariablesView",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusWatchView"
			},
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusCallStackView"
			},
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusBreakpointsView"
			}
		],
		"vs/workbench/parts/markers/electron-browser/markers.contribution": [
			"copyMarker",
			"copyMessage",
			"copyMessage"
		],
		"vs/workbench/parts/html/electron-browser/html.contribution": [
			"html.editor.label"
		],
		"vs/workbench/parts/url/electron-browser/url.contribution": [
			"openUrl",
			"developer"
		],
		"vs/workbench/parts/webview/electron-browser/webview.contribution": [
			"webview.editor.label",
			"developer"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution": [
			"walkThrough.editor.label",
			"help"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"extensionsCommands",
			"galleryExtensionsCommands",
			"extension",
			"runtimeExtension",
			"extensions",
			"view",
			"developer",
			"developer",
			"extensionsConfigurationTitle",
			"extensionsAutoUpdate",
			"extensionsIgnoreRecommendations",
			"extensionsShowRecommendationsOnlyOnDemand",
			"extensionsCloseExtensionDetailsOnViewChange"
		],
		"vs/workbench/parts/extensions/browser/extensionsQuickOpen": [
			"manage",
			"notfound",
			"install",
			"searchFor",
			"noExtensionsToInstall"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"marketPlace",
			"enabledExtensions",
			"disabledExtensions",
			"searchInstalledExtensions",
			"recommendedExtensions",
			"otherRecommendedExtensions",
			"workspaceRecommendedExtensions",
			"builtInExtensions",
			"builtInThemesExtensions",
			"builtInBasicsExtensions",
			"searchExtensions",
			"group by servers",
			"sort by installs",
			"sort by rating",
			"sort by name",
			"suggestProxyError",
			"extensions",
			"outdatedExtensions",
			"malicious warning",
			"reloadNow"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution": [
			"workbenchConfigurationTitle",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "workbench.startupEditor.none"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "workbench.startupEditor.welcomePage"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "workbench.startupEditor.newUntitledFile"
			},
			"workbench.startupEditor",
			"help"
		],
		"vs/workbench/parts/output/electron-browser/output.contribution": [
			"output",
			"logViewer",
			"viewCategory",
			"viewCategory",
			"clearOutput.label",
			"openActiveLogOutputFile"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"output",
			"outputPanelWithInputAriaLabel",
			"outputPanelAriaLabel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"quickOpen.terminal",
			"terminal",
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.shell.linux",
			"terminal.integrated.shellArgs.linux",
			"terminal.integrated.shell.osx",
			"terminal.integrated.shellArgs.osx",
			"terminal.integrated.shell.windows",
			"terminal.integrated.shellArgs.windows",
			"terminal.integrated.macOptionIsMeta",
			"terminal.integrated.copyOnSelection",
			"terminal.integrated.drawBoldTextInBrightColors",
			"terminal.integrated.fontFamily",
			"terminal.integrated.fontSize",
			"terminal.integrated.letterSpacing",
			"terminal.integrated.lineHeight",
			"terminal.integrated.fontWeight",
			"terminal.integrated.fontWeightBold",
			"terminal.integrated.cursorBlinking",
			"terminal.integrated.cursorStyle",
			"terminal.integrated.scrollback",
			"terminal.integrated.setLocaleVariables",
			"terminal.integrated.rendererType",
			"terminal.integrated.rightClickBehavior",
			"terminal.integrated.cwd",
			"terminal.integrated.confirmOnExit",
			"terminal.integrated.enableBell",
			"terminal.integrated.commandsToSkipShell",
			"terminal.integrated.env.osx",
			"terminal.integrated.env.linux",
			"terminal.integrated.env.windows",
			"terminal.integrated.showExitAlert",
			"terminal.integrated.experimentalRestore",
			"terminal.integrated.experimentalTextureCachingStrategy",
			"terminal",
			"terminalCategory",
			"viewCategory"
		],
		"vs/workbench/parts/terminal/browser/terminalQuickOpen": [
			"termEntryAriaLabel",
			"termCreateEntryAriaLabel",
			"workbench.action.terminal.newplus",
			"noTerminalsMatching",
			"noTerminalsFound"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"terminal.useMonospace",
			"terminal.monospaceOnly",
			"copy",
			"split",
			"paste",
			"selectAll",
			"clear"
		],
		"vs/workbench/electron-browser/workbench": [
			"developer",
			"file"
		],
		"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution": [
			"relaunchSettingMessage",
			"relaunchSettingDetail",
			"restart"
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"tasksCategory",
			"ConfigureTaskRunnerAction.label",
			"totalErrors",
			"totalWarnings",
			"totalInfos",
			"problems",
			"building",
			"manyProblems",
			"runningTasks",
			"tasks",
			"TaskSystem.noHotSwap",
			"reloadWindow",
			"TaskServer.folderIgnored",
			"TaskService.noBuildTask1",
			"TaskService.noBuildTask2",
			"TaskService.noTestTask1",
			"TaskService.noTestTask2",
			"TaskServer.noTask",
			"TaskService.associate",
			"TaskService.attachProblemMatcher.continueWithout",
			"TaskService.attachProblemMatcher.never",
			"TaskService.attachProblemMatcher.learnMoreAbout",
			"selectProblemMatcher",
			"customizeParseErrors",
			"moreThanOneBuildTask",
			"TaskSystem.activeSame.background",
			"TaskSystem.activeSame.noBackground",
			"terminateTask",
			"restartTask",
			"TaskSystem.active",
			"TaskSystem.restartFailed",
			"TaskService.noConfiguration",
			"TaskSystem.configurationErrors",
			"taskService.ignoreingFolder",
			"TaskSystem.invalidTaskJson",
			"TaskSystem.runningTask",
			{
				"key": "TaskSystem.terminateTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TaskSystem.noProcess",
			{
				"key": "TaskSystem.exitAnyways",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"TerminateAction.label",
			"TaskSystem.unknownError",
			"TaskService.noWorkspace",
			"recentlyUsed",
			"configured",
			"detected",
			"TaskService.ignoredFolder",
			"TaskService.notAgain",
			"TaskService.pickRunTask",
			"TaslService.noEntryToRun",
			"TaskService.fetchingBuildTasks",
			"TaskService.pickBuildTask",
			"TaskService.noBuildTask",
			"TaskService.fetchingTestTasks",
			"TaskService.pickTestTask",
			"TaskService.noTestTaskTerminal",
			"TaskService.tastToTerminate",
			"TaskService.noTaskRunning",
			"TerminateAction.noProcess",
			"TerminateAction.failed",
			"TaskService.tastToRestart",
			"TaskService.noTaskToRestart",
			"TaskService.template",
			"TaskService.createJsonFile",
			"TaskService.openJsonFile",
			"TaskService.pickTask",
			"TaskService.defaultBuildTaskExists",
			"TaskService.pickDefaultBuildTask",
			"TaskService.defaultTestTaskExists",
			"TaskService.pickDefaultTestTask",
			"TaskService.pickShowTask",
			"TaskService.noTaskIsRunning",
			"ShowLogAction.label",
			"RunTaskAction.label",
			"RestartTaskAction.label",
			"ShowTasksAction.label",
			"TerminateAction.label",
			"BuildAction.label",
			"TestAction.label",
			"ConfigureDefaultBuildTask.label",
			"ConfigureDefaultTestTask.label",
			"quickOpen.task"
		],
		"vs/workbench/parts/execution/electron-browser/execution.contribution": [
			"terminalConfigurationTitle",
			"explorer.openInTerminalKind",
			"terminal.external.windowsExec",
			"terminal.external.osxExec",
			"terminal.external.linuxExec",
			"globalConsoleActionWin",
			"globalConsoleActionMacLinux",
			"scopedConsoleActionWin",
			"scopedConsoleActionMacLinux"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"snippetSchema.json.default",
			"snippetSchema.json",
			"snippetSchema.json.prefix",
			"snippetSchema.json.body",
			"snippetSchema.json.description",
			"snippetSchema.json.default",
			"snippetSchema.json",
			"snippetSchema.json.prefix",
			"snippetSchema.json.scope",
			"snippetSchema.json.body",
			"snippetSchema.json.description"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsService": [
			"invalid.path.0",
			"invalid.language.0",
			"invalid.language",
			"invalid.path.1",
			"vscode.extension.contributes.snippets",
			"vscode.extension.contributes.snippets-language",
			"vscode.extension.contributes.snippets-path",
			"badVariableUse",
			"badFile",
			"detail.snippet",
			"snippetSuggest.longLabel",
			"snippetSuggest.longLabel"
		],
		"vs/workbench/parts/snippets/electron-browser/insertSnippet": [
			"snippet.suggestions.label",
			"sep.userSnippet",
			"sep.extSnippet"
		],
		"vs/workbench/parts/snippets/electron-browser/configureSnippets": [
			"global.scope",
			"global.1",
			"new.global",
			"group.global",
			"new.global.sep",
			"new.global.sep",
			"openSnippet.pickLanguage",
			"openSnippet.label",
			"preferences"
		],
		"vs/workbench/parts/snippets/electron-browser/tabCompletion": [
			"tabCompletion"
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"selectTheme.label",
			"themes.category.light",
			"themes.category.dark",
			"themes.category.hc",
			"installColorThemes",
			"themes.selectTheme",
			"selectIconTheme.label",
			"noIconThemeLabel",
			"noIconThemeDesc",
			"installIconThemes",
			"themes.selectIconTheme",
			"generateColorTheme.label",
			"preferences",
			"developer"
		],
		"vs/workbench/parts/feedback/electron-browser/feedback.contribution": [
			"workbenchConfigurationTitle",
			"feedbackVisibility"
		],
		"vs/workbench/parts/surveys/electron-browser/nps.contribution": [
			"surveyQuestion",
			"takeSurvey",
			"remindLater",
			"neverAgain"
		],
		"vs/workbench/parts/surveys/electron-browser/languageSurveys.contribution": [
			"helpUs",
			"takeShortSurvey",
			"remindLater",
			"neverAgain"
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"install",
			"not available",
			"successIn",
			"ok",
			"cancel2",
			"warnEscalation",
			"cantCreateBinFolder",
			"aborted",
			"uninstall",
			"not available",
			"successFrom",
			"shellCommand"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"view",
			"help",
			"file",
			"workspaces",
			"developer",
			"workbenchConfigurationTitle",
			"showEditorTabs",
			"workbench.editor.labelFormat.default",
			"workbench.editor.labelFormat.short",
			"workbench.editor.labelFormat.medium",
			"workbench.editor.labelFormat.long",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by parenthesis are not to be translated."
				],
				"key": "tabDescription"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "editorTabCloseButton"
			},
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "tabSizing"
			},
			"showIcons",
			"enablePreview",
			"enablePreviewFromQuickOpen",
			"closeOnFileDelete",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by single quotes are not to be translated."
				],
				"key": "editorOpenPositioning"
			},
			"sideBySideDirection",
			"closeEmptyGroups",
			"revealIfOpen",
			"swipeToNavigate",
			"commandHistory",
			"preserveInput",
			"closeOnFocusLost",
			"openDefaultSettings",
			"sideBarLocation",
			"panelDefaultLocation",
			"statusBarVisibility",
			"activityBarVisibility",
			"viewVisibility",
			"fontAliasing",
			"workbench.fontAliasing.default",
			"workbench.fontAliasing.antialiased",
			"workbench.fontAliasing.none",
			"workbench.fontAliasing.auto",
			"enableNaturalLanguageSettingsSearch",
			"settingsSearchTocBehavior",
			"settingsTocVisible",
			"windowConfigurationTitle",
			"window.openFilesInNewWindow.on",
			"window.openFilesInNewWindow.off",
			"window.openFilesInNewWindow.defaultMac",
			"window.openFilesInNewWindow.default",
			"openFilesInNewWindowMac",
			"openFilesInNewWindow",
			"window.openFoldersInNewWindow.on",
			"window.openFoldersInNewWindow.off",
			"window.openFoldersInNewWindow.default",
			"openFoldersInNewWindow",
			"window.openWithoutArgumentsInNewWindow.on",
			"window.openWithoutArgumentsInNewWindow.off",
			"openWithoutArgumentsInNewWindow",
			"window.reopenFolders.all",
			"window.reopenFolders.folders",
			"window.reopenFolders.one",
			"window.reopenFolders.none",
			"restoreWindows",
			"restoreFullscreen",
			"zoomLevel",
			{
				"comment": [
					"This is the description for a setting. Values surrounded by parenthesis are not to be translated."
				],
				"key": "title"
			},
			"window.newWindowDimensions.default",
			"window.newWindowDimensions.inherit",
			"window.newWindowDimensions.maximized",
			"window.newWindowDimensions.fullscreen",
			"newWindowDimensions",
			"closeWhenEmpty",
			"window.menuBarVisibility.default",
			"window.menuBarVisibility.visible",
			"window.menuBarVisibility.toggle",
			"window.menuBarVisibility.hidden",
			"menuBarVisibility",
			"enableMenuBarMnemonics",
			"autoDetectHighContrast",
			"titleBarStyle",
			"window.nativeTabs",
			"window.smoothScrollingWorkaround",
			"window.clickThroughInactive",
			"zenModeConfigurationTitle",
			"zenMode.fullScreen",
			"zenMode.centerLayout",
			"zenMode.hideTabs",
			"zenMode.hideStatusBar",
			"zenMode.hideActivityBar",
			"zenMode.restore"
		],
		"vs/workbench/electron-browser/main": [
			"loaderError",
			"loaderErrorNative"
		],
		"vs/workbench/parts/watermark/electron-browser/watermark": [
			"watermark.showCommands",
			"watermark.quickOpen",
			"watermark.openFile",
			"watermark.openFolder",
			"watermark.openFileFolder",
			"watermark.openRecent",
			"watermark.newUntitledFile",
			{
				"key": "watermark.toggleTerminal",
				"comment": [
					"toggle is a verb here"
				]
			},
			"watermark.findInFiles",
			"watermark.startDebugging",
			"watermark.unboundCommand",
			"workbenchConfigurationTitle",
			"tips.enabled"
		],
		"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay": [
			"welcomeOverlay.explorer",
			"welcomeOverlay.search",
			"welcomeOverlay.git",
			"welcomeOverlay.debug",
			"welcomeOverlay.extensions",
			"welcomeOverlay.problems",
			"welcomeOverlay.commandPalette",
			"welcomeOverlay.notifications",
			"welcomeOverlay",
			"hideWelcomeOverlay",
			"help",
			"help"
		],
		"vs/workbench/parts/outline/electron-browser/outline.contribution": [
			"name",
			"category.focus",
			"label.focus",
			"outlineConfigurationTitle",
			"outline.showIcons",
			"outline.showProblem",
			"outline.showProblem",
			"outline.problem.colors",
			"outline.problems.badges"
		],
		"vs/workbench/services/bulkEdit/electron-browser/bulkEditService": [
			"summary.0",
			"summary.nm",
			"summary.n0",
			"conflict"
		],
		"vs/workbench/node/extensionHostMain": [
			"extensionTestError"
		],
		"vs/platform/environment/node/argv": [
			"gotoValidation",
			"diff",
			"add",
			"goto",
			"newWindow",
			"reuseWindow",
			"wait",
			"locale",
			"userDataDir",
			"version",
			"help",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"installExtension",
			"uninstallExtension",
			"experimentalApis",
			"verbose",
			"log",
			"status",
			"performance",
			"prof-startup",
			"disableExtensions",
			"inspect-extensions",
			"inspect-brk-extensions",
			"disableGPU",
			"uploadLogs",
			"maxMemory",
			"usage",
			"options",
			"paths",
			"stdinWindows",
			"stdinUnix",
			"optionsUpperCase",
			"extensionsManagement",
			"troubleshooting"
		],
		"vs/platform/request/node/request": [
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyAuthorization"
		],
		"vs/platform/history/electron-main/historyMainService": [
			"newWindow",
			"newWindowDesc",
			"recentFolders",
			"folderDesc",
			"codeWorkspace"
		],
		"vs/platform/workspaces/common/workspaces": [
			"codeWorkspace",
			"untitledWorkspace",
			"workspaceNameVerbose",
			"workspaceName"
		],
		"vs/code/electron-main/logUploader": [
			"invalidEndpoint",
			"beginUploading",
			"didUploadLogs",
			"logUploadPromptHeader",
			"logUploadPromptBody",
			"logUploadPromptBodyDetails",
			"logUploadPromptAcceptInstructions",
			"postError",
			"responseError",
			"parseError",
			"zipError"
		],
		"vs/platform/dialogs/common/dialogs": [
			"moreFile",
			"moreFiles"
		],
		"vs/platform/dialogs/node/dialogService": [
			"cancel"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions",
			"preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"invalidManifest",
			"incompatible",
			"restartCode",
			"installingOutdatedExtension",
			"override",
			"cancel",
			"errorInstallingDependencies",
			"MarketPlaceDisabled",
			"removeError",
			"Not a Marketplace extension",
			"notFoundCompatible",
			"malicious extension",
			"notFoundCompatibleDependency",
			"quitCode",
			"exitCode",
			"errorDeleting",
			"renameError",
			"uninstallDependeciesConfirmation",
			"uninstallOnly",
			"uninstallAll",
			"cancel",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"notExists"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"notCompatibleDownload"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry"
		],
		"vs/code/electron-browser/issue/issueReporterPage": [
			"completeInEnglish",
			"issueTypeLabel",
			"issueSourceLabel",
			"vscode",
			"extension",
			"disableExtensionsLabelText",
			"disableExtensions",
			"chooseExtension",
			"issueTitleLabel",
			"issueTitleRequired",
			"titleLengthValidation",
			"details",
			{
				"key": "sendSystemInfo",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the system information"
				]
			},
			"show",
			{
				"key": "sendProcessInfo",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the process info"
				]
			},
			"show",
			{
				"key": "sendWorkspaceInfo",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the workspace information"
				]
			},
			"show",
			{
				"key": "sendExtensions",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the enabled extensions list"
				]
			},
			"show",
			{
				"key": "sendSearchedExtensions",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the searched extensions"
				]
			},
			"show",
			{
				"key": "sendSettingsSearchDetails",
				"comment": [
					"{0} is either \"show\" or \"hide\" and is a button to toggle the visibililty of the search details"
				]
			},
			"show"
		],
		"vs/editor/browser/widget/codeEditorWidget": [
			"cursors.maximum"
		],
		"vs/editor/browser/widget/diffEditorWidget": [
			"diff.tooLarge"
		],
		"vs/editor/contrib/bracketMatching/bracketMatching": [
			"overviewRulerBracketMatchForeground",
			"smartSelect.jumpBracket",
			"smartSelect.selectToBracket"
		],
		"vs/editor/contrib/caretOperations/caretOperations": [
			"caret.moveLeft",
			"caret.moveRight"
		],
		"vs/editor/contrib/caretOperations/transpose": [
			"transposeLetters.label"
		],
		"vs/editor/contrib/clipboard/clipboard": [
			"actions.clipboard.cutLabel",
			"actions.clipboard.copyLabel",
			"actions.clipboard.pasteLabel",
			"actions.clipboard.copyWithSyntaxHighlightingLabel"
		],
		"vs/editor/contrib/comment/comment": [
			"comment.line",
			"comment.line.add",
			"comment.line.remove",
			"comment.block"
		],
		"vs/editor/contrib/contextmenu/contextmenu": [
			"action.showContextMenu.label"
		],
		"vs/editor/contrib/cursorUndo/cursorUndo": [
			"cursor.undo"
		],
		"vs/editor/contrib/find/findController": [
			"startFindAction",
			"startFindWithSelectionAction",
			"findNextMatchAction",
			"findPreviousMatchAction",
			"nextSelectionMatchFindAction",
			"previousSelectionMatchFindAction",
			"startReplace"
		],
		"vs/editor/contrib/folding/folding": [
			"unfoldAction.label",
			"unFoldRecursivelyAction.label",
			"foldAction.label",
			"foldRecursivelyAction.label",
			"foldAllBlockComments.label",
			"foldAllMarkerRegions.label",
			"unfoldAllMarkerRegions.label",
			"foldAllAction.label",
			"unfoldAllAction.label",
			"foldLevelAction.label"
		],
		"vs/editor/contrib/fontZoom/fontZoom": [
			"EditorFontZoomIn.label",
			"EditorFontZoomOut.label",
			"EditorFontZoomReset.label"
		],
		"vs/editor/contrib/format/formatActions": [
			"hint11",
			"hintn1",
			"hint1n",
			"hintnn",
			"no.provider",
			"formatDocument.label",
			"no.documentprovider",
			"formatSelection.label",
			"no.selectionprovider"
		],
		"vs/editor/contrib/goToDefinition/goToDefinitionCommands": [
			"noResultWord",
			"generic.noResults",
			"meta.title",
			"actions.goToDecl.label",
			"actions.goToDeclToSide.label",
			"actions.previewDecl.label",
			"goToImplementation.noResultWord",
			"goToImplementation.generic.noResults",
			"meta.implementations.title",
			"actions.goToImplementation.label",
			"actions.peekImplementation.label",
			"goToTypeDefinition.noResultWord",
			"goToTypeDefinition.generic.noResults",
			"meta.typeDefinitions.title",
			"actions.goToTypeDefinition.label",
			"actions.peekTypeDefinition.label"
		],
		"vs/editor/contrib/goToDefinition/goToDefinitionMouse": [
			"multipleResults"
		],
		"vs/editor/contrib/gotoError/gotoError": [
			"markerAction.next.label",
			"markerAction.previous.label",
			"markerAction.nextInFiles.label",
			"markerAction.previousInFiles.label"
		],
		"vs/editor/contrib/hover/hover": [
			{
				"key": "showHover",
				"comment": [
					"Label for action that will trigger the showing of a hover in the editor.",
					"This allows for users to show the hover without using the mouse."
				]
			}
		],
		"vs/editor/contrib/inPlaceReplace/inPlaceReplace": [
			"InPlaceReplaceAction.previous.label",
			"InPlaceReplaceAction.next.label"
		],
		"vs/editor/contrib/linesOperations/linesOperations": [
			"lines.copyUp",
			"lines.copyDown",
			"lines.moveUp",
			"lines.moveDown",
			"lines.sortAscending",
			"lines.sortDescending",
			"lines.trimTrailingWhitespace",
			"lines.delete",
			"lines.indent",
			"lines.outdent",
			"lines.insertBefore",
			"lines.insertAfter",
			"lines.deleteAllLeft",
			"lines.deleteAllRight",
			"lines.joinLines",
			"editor.transpose",
			"editor.transformToUppercase",
			"editor.transformToLowercase"
		],
		"vs/editor/contrib/links/links": [
			"links.navigate.mac",
			"links.navigate",
			"links.command.mac",
			"links.command",
			"links.navigate.al.mac",
			"links.navigate.al",
			"links.command.al.mac",
			"links.command.al",
			"invalid.url",
			"missing.url",
			"label"
		],
		"vs/editor/contrib/multicursor/multicursor": [
			"mutlicursor.insertAbove",
			"mutlicursor.insertBelow",
			"mutlicursor.insertAtEndOfEachLineSelected",
			"addSelectionToNextFindMatch",
			"addSelectionToPreviousFindMatch",
			"moveSelectionToNextFindMatch",
			"moveSelectionToPreviousFindMatch",
			"selectAllOccurrencesOfFindMatch",
			"changeAll.label"
		],
		"vs/editor/contrib/parameterHints/parameterHints": [
			"parameterHints.trigger.label"
		],
		"vs/editor/contrib/referenceSearch/referenceSearch": [
			"meta.titleReference",
			"references.action.label"
		],
		"vs/editor/contrib/rename/rename": [
			"no result",
			"aria",
			"rename.failed",
			"rename.label"
		],
		"vs/editor/contrib/smartSelect/smartSelect": [
			"smartSelect.grow",
			"smartSelect.shrink"
		],
		"vs/editor/contrib/suggest/suggestController": [
			"arai.alert.snippet",
			"suggest.trigger.label"
		],
		"vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode": [
			{
				"key": "toggle.tabMovesFocus",
				"comment": [
					"Turn on/off use of tab key for moving focus around VS Code"
				]
			}
		],
		"vs/editor/contrib/wordHighlighter/wordHighlighter": [
			"wordHighlight",
			"wordHighlightStrong",
			"wordHighlightBorder",
			"wordHighlightStrongBorder",
			"overviewRulerWordHighlightForeground",
			"overviewRulerWordHighlightStrongForeground",
			"wordHighlight.next.label",
			"wordHighlight.previous.label"
		],
		"vs/workbench/services/extensions/common/extensionsRegistry": [
			"vscode.extension.engines",
			"vscode.extension.engines.vscode",
			"vscode.extension.publisher",
			"vscode.extension.displayName",
			"vscode.extension.categories",
			"vscode.extension.category.languages.deprecated",
			"vscode.extension.galleryBanner",
			"vscode.extension.galleryBanner.color",
			"vscode.extension.galleryBanner.theme",
			"vscode.extension.contributes",
			"vscode.extension.preview",
			"vscode.extension.activationEvents",
			"vscode.extension.activationEvents.onLanguage",
			"vscode.extension.activationEvents.onCommand",
			"vscode.extension.activationEvents.onDebug",
			"vscode.extension.activationEvents.onDebugInitialConfigurations",
			"vscode.extension.activationEvents.onDebugResolve",
			"vscode.extension.activationEvents.workspaceContains",
			"vscode.extension.activationEvents.onView",
			"vscode.extension.activationEvents.onUri",
			"vscode.extension.activationEvents.star",
			"vscode.extension.badges",
			"vscode.extension.badges.url",
			"vscode.extension.badges.href",
			"vscode.extension.badges.description",
			"vscode.extension.markdown",
			"vscode.extension.qna",
			"vscode.extension.extensionDependencies",
			"vscode.extension.scripts.prepublish",
			"vscode.extension.scripts.uninstall",
			"vscode.extension.icon"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultConfigurations.title",
			"overrideSettings.description",
			"overrideSettings.defaultDescription",
			"config.property.languageDefault",
			"config.property.duplicate"
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"defaultLabel"
		],
		"vs/workbench/browser/viewlet": [
			"compositePart.hideSideBarLabel",
			"collapse"
		],
		"vs/workbench/common/views": [
			"duplicateId"
		],
		"vs/workbench/browser/parts/views/viewsViewlet": [
			"hideView"
		],
		"vs/workbench/parts/debug/common/debug": [
			"internalConsoleOptions"
		],
		"vs/workbench/parts/localizations/electron-browser/localizationsActions": [
			"configureLocale",
			"displayLanguage",
			"doc",
			"restart",
			"fail.createSettings"
		],
		"vs/base/common/severity": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/platform/node/minimalTranslations": [
			"showLanguagePackExtensions",
			"searchMarketplace",
			"installAndRestartMessage",
			"installAndRestart"
		],
		"vs/workbench/parts/preferences/browser/preferencesEditor": [
			"advertisementLabel",
			"openSettings2Label",
			"SearchSettingsWidget.AriaLabel",
			"SearchSettingsWidget.Placeholder",
			"noSettingsFound",
			"oneSettingFound",
			"settingsFound",
			"totalSettingsMessage",
			"nlpResult",
			"filterResult",
			"defaultSettings",
			"defaultUserSettings",
			"defaultWorkspaceSettings",
			"defaultFolderSettings",
			"defaultEditorReadonly",
			"preferencesAriaLabel"
		],
		"vs/workbench/parts/preferences/browser/settingsEditor2": [
			"previewWarning",
			"previewLabel",
			"SearchSettings.AriaLabel",
			"SearchSettings.Placeholder",
			"advancedCustomizationLabel",
			"openSettingsLabel",
			"showOverriddenOnly",
			"treeAriaLabel",
			"feedbackButtonLabel"
		],
		"vs/workbench/services/preferences/common/preferencesEditorInput": [
			"settingsEditorName",
			"keybindingsInputName",
			"settingsEditor2InputName"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditor": [
			"showDefaultKeybindings",
			"showUserKeybindings",
			"SearchKeybindings.AriaLabel",
			"SearchKeybindings.Placeholder",
			"sortByPrecedene",
			"header-message",
			"keybindings-file-name",
			"keybindingsLabel",
			"changeLabel",
			"addLabel",
			"removeLabel",
			"resetLabel",
			"showSameKeybindings",
			"copyLabel",
			"copyCommandLabel",
			"error",
			"command",
			"keybinding",
			"source",
			"when",
			"editKeybindingLabelWithKey",
			"editKeybindingLabel",
			"addKeybindingLabelWithKey",
			"addKeybindingLabel",
			"title",
			"commandAriaLabel",
			"keybindingAriaLabel",
			"noKeybinding",
			"sourceAriaLabel",
			"whenAriaLabel",
			"noWhen"
		],
		"vs/workbench/parts/preferences/browser/preferencesActions": [
			"openRawDefaultSettings",
			"openSettings2",
			"openSettings",
			"openGlobalSettings",
			"openGlobalKeybindings",
			"openGlobalKeybindingsFile",
			"openWorkspaceSettings",
			"openFolderSettings",
			"configureLanguageBasedSettings",
			"languageDescriptionConfigured",
			"pickLanguage"
		],
		"vs/workbench/services/preferences/common/preferences": [
			"userSettingsTarget",
			"workspaceSettingsTarget"
		],
		"vs/workbench/parts/preferences/browser/keybindingWidgets": [
			"defineKeybinding.oneExists",
			"defineKeybinding.existing",
			"defineKeybinding.initial",
			"defineKeybinding.chordsTo"
		],
		"vs/workbench/parts/preferences/browser/preferencesWidgets": [
			"defaultSettings",
			"noSettingsFound",
			"settingsSwitcherBarAriaLabel",
			"userSettings",
			"workspaceSettings",
			"folderSettings",
			"workspaceSettings",
			"userSettings"
		],
		"vs/editor/common/view/editorColorRegistry": [
			"lineHighlight",
			"lineHighlightBorderBox",
			"rangeHighlight",
			"rangeHighlightBorder",
			"caret",
			"editorCursorBackground",
			"editorWhitespaces",
			"editorIndentGuides",
			"editorActiveIndentGuide",
			"editorLineNumbers",
			"editorActiveLineNumber",
			"deprecatedEditorActiveLineNumber",
			"editorActiveLineNumber",
			"editorRuler",
			"editorCodeLensForeground",
			"editorBracketMatchBackground",
			"editorBracketMatchBorder",
			"editorOverviewRulerBorder",
			"editorGutter",
			"errorForeground",
			"errorBorder",
			"warningForeground",
			"warningBorder",
			"infoForeground",
			"infoBorder",
			"hintForeground",
			"hintBorder",
			"unnecessaryCodeBorder",
			"unnecessaryCodeOpacity",
			"overviewRulerRangeHighlight",
			"overviewRuleError",
			"overviewRuleWarning",
			"overviewRuleInfo"
		],
		"vs/workbench/parts/logs/electron-browser/logsActions": [
			"openLogsFolder",
			"showLogs",
			"rendererProcess",
			"emptyWindow",
			"extensionHost",
			"sharedProcess",
			"mainProcess",
			"selectProcess",
			"openLogFile",
			"rendererProcess",
			"emptyWindow",
			"extensionHost",
			"sharedProcess",
			"mainProcess",
			"selectProcess",
			"setLogLevel",
			"trace",
			"debug",
			"info",
			"warn",
			"err",
			"critical",
			"off",
			"selectLogLevel",
			"default and current",
			"default",
			"current"
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"emptyPicks",
			"quickOpenInput",
			"historyMatches",
			"historyMatches",
			"noResultsFound1",
			"canNotRunPlaceholder",
			"entryAriaLabel",
			"removeFromEditorHistory",
			"pickHistory"
		],
		"vs/workbench/browser/parts/quickopen/quickopen": [
			"quickOpen",
			"quickNavigateNext",
			"quickNavigatePrevious",
			"quickSelectNext",
			"quickSelectPrevious"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"gotoSymbol",
			"symbols",
			"method",
			"function",
			"_constructor",
			"variable",
			"class",
			"interface",
			"namespace",
			"package",
			"modules",
			"property",
			"enum",
			"string",
			"rule",
			"file",
			"array",
			"number",
			"boolean",
			"object",
			"key",
			"entryAriaLabel",
			"noSymbolsMatching",
			"noSymbolsFound",
			"gotoSymbolHandlerAriaLabel",
			"cannotRunGotoSymbolInFile",
			"cannotRunGotoSymbol"
		],
		"vs/workbench/browser/quickopen": [
			"noResultsMatching",
			"noResultsFound2"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"showTriggerActions",
			"clearCommandHistory",
			"showCommands.label",
			"entryAriaLabelWithKey",
			"entryAriaLabel",
			"actionNotEnabled",
			"canNotRun",
			"recentlyUsed",
			"morecCommands",
			"cat.title",
			"noCommandsMatching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"gotoLine",
			"gotoLineLabelEmptyWithLimit",
			"gotoLineLabelEmpty",
			"gotoLineColumnLabel",
			"gotoLineLabel",
			"gotoLineHandlerAriaLabel",
			"cannotRunGotoLine"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"entryAriaLabel",
			"globalCommands",
			"editorCommands"
		],
		"vs/workbench/parts/quickopen/browser/viewPickerHandler": [
			"entryAriaLabel",
			"views",
			"panels",
			"terminals",
			"terminalTitle",
			"channels",
			"openView",
			"quickOpenView"
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"quickOpenAriaLabelEntry",
			"quickOpenAriaLabel"
		],
		"vs/workbench/browser/parts/quickinput/quickInput": [
			"quickInput.back",
			"quickInput.steps",
			"inputModeEntry",
			"inputModeEntryDescription",
			{
				"key": "quickInput.countSelected",
				"comment": [
					"This tells the user how many items are selected in a list of items to select from. The items can be anything."
				]
			},
			"ok",
			"quickInput.backWithKeybinding",
			"quickInput.back",
			"back"
		],
		"vs/workbench/parts/files/electron-browser/fileActions": [
			"newFile",
			"newFolder",
			"rename",
			"delete",
			"copyFile",
			"pasteFile",
			"retry",
			"renameWhenSourcePathIsParentOfTargetError",
			"rename",
			"newUntitledFile",
			"createNewFile",
			"createNewFolder",
			"deleteButtonLabelRecycleBin",
			{
				"key": "deleteButtonLabelTrash",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "deleteButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"dirtyMessageFilesDelete",
			"dirtyMessageFolderOneDelete",
			"dirtyMessageFolderDelete",
			"dirtyMessageFileDelete",
			"dirtyWarning",
			"undoBin",
			"undoTrash",
			"doNotAskAgain",
			"irreversible",
			"binFailed",
			"trashFailed",
			"irreversible",
			{
				"key": "deletePermanentlyButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "retryButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmMoveTrashMessageFilesAndDirectories",
			"confirmMoveTrashMessageMultipleDirectories",
			"confirmMoveTrashMessageMultiple",
			"confirmMoveTrashMessageFolder",
			"confirmMoveTrashMessageFile",
			"confirmDeleteMessageFilesAndDirectories",
			"confirmDeleteMessageMultipleDirectories",
			"confirmDeleteMessageMultiple",
			"confirmDeleteMessageFolder",
			"confirmDeleteMessageFile",
			"addFiles",
			"confirmOverwrite",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"fileIsAncestor",
			"fileDeleted",
			"duplicateFile",
			"globalCompareFile",
			"openFileToCompare",
			"refresh",
			"toggleAutoSave",
			"saveAllInGroup",
			"closeGroup",
			{
				"key": "focusOpenEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			"focusFilesExplorer",
			"showInExplorer",
			"openFileToShow",
			"collapseExplorerFolders",
			"refreshExplorer",
			"openFileInNewWindow",
			"openFileToShowInNewWindow",
			"copyPath",
			"emptyFileNameError",
			"fileNameStartsWithSlashError",
			"fileNameExistsError",
			"invalidFileNameError",
			"filePathTooLongError",
			"compareWithClipboard",
			"clipboardComparisonLabel"
		],
		"vs/workbench/parts/files/electron-browser/saveErrorHandler": [
			"userGuide",
			"staleSaveError",
			"retry",
			"discard",
			"readonlySaveErrorAdmin",
			"readonlySaveError",
			"permissionDeniedSaveError",
			"genericSaveError",
			"learnMore",
			"dontShowAgain",
			"compareChanges",
			"saveConflictDiffLabel",
			"overwriteElevated",
			"saveElevated",
			"overwrite"
		],
		"vs/workbench/parts/files/electron-browser/fileCommands": [
			"revealInWindows",
			"revealInMac",
			"openContainer",
			"saveAs",
			"save",
			"saveAll",
			"removeFolderFromWorkspace",
			"genericRevertError",
			"modifiedLabel",
			"openFileToReveal",
			"openFileToCopy"
		],
		"vs/workbench/browser/actions/workspaceCommands": [
			"addFolderToWorkspace",
			{
				"key": "add",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"addFolderToWorkspaceTitle",
			"workspaceFolderPickerPlaceholder"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"editorCommand.activeEditorMove.description",
			"editorCommand.activeEditorMove.arg.name",
			"editorCommand.activeEditorMove.arg.description"
		],
		"vs/platform/list/browser/listService": [
			"workbenchConfigurationTitle",
			"multiSelectModifier.ctrlCmd",
			"multiSelectModifier.alt",
			{
				"key": "multiSelectModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"openMode.singleClick",
			"openMode.doubleClick",
			{
				"key": "openModeModifier",
				"comment": [
					"`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized."
				]
			},
			"horizontalScrolling setting"
		],
		"vs/workbench/parts/files/electron-browser/views/explorerViewer": [
			"fileInputAriaLabel",
			"createFileFromExplorerInfoMessage",
			"renameFileFromExplorerInfoMessage",
			"createFolderFromExplorerInfoMessage",
			"whitespace",
			"filesExplorerViewerAriaLabel",
			"dropFolders",
			"dropFolder",
			"addFolders",
			"addFolder",
			"confirmRootsMove",
			"confirmMultiMove",
			"confirmRootMove",
			"confirmMove",
			"doNotAskAgain",
			{
				"key": "moveButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"confirmOverwriteMessage",
			"irreversible",
			{
				"key": "replaceButtonLabel",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/workbench/parts/files/electron-browser/views/explorerView": [
			"explorerSection",
			"treeAriaLabel"
		],
		"vs/workbench/parts/files/electron-browser/views/emptyView": [
			"noWorkspace",
			"explorerSection",
			"noWorkspaceHelp",
			"addFolder",
			"noFolderHelp",
			"openFolder"
		],
		"vs/workbench/parts/files/electron-browser/views/openEditorsView": [
			{
				"key": "openEditors",
				"comment": [
					"Open is an adjective"
				]
			},
			{
				"key": "openEditosrSection",
				"comment": [
					"Open is an adjective"
				]
			},
			"dirtyCounter"
		],
		"vs/workbench/services/editor/browser/editorService": [
			"compareLabels"
		],
		"vs/workbench/parts/files/common/editors/fileEditorInput": [
			"orphanedFile"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"textFileEditor",
			"createFile",
			"relaunchWithIncreasedMemoryLimit",
			"configureMemoryLimit",
			"fileEditorWithInputAriaLabel",
			"fileEditorAriaLabel"
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"binaryFileEditor"
		],
		"vs/workbench/parts/files/common/dirtyFilesTracker": [
			"dirtyFile",
			"dirtyFiles"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"search.action.replaceAll.disabled.label",
			"search.action.replaceAll.enabled.label",
			"search.replace.toggle.button.title",
			"label.Search",
			"search.placeHolder",
			"label.Replace",
			"search.replace.placeHolder",
			"regexp.validationFailure",
			"regexp.backreferenceValidationFailure"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"entryAriaLabel",
			"symbols",
			"noSymbolsMatching",
			"noSymbolsWithoutInput"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"findInFiles",
			"replaceInFiles",
			"RefreshAction.label",
			"CollapseDeepestExpandedLevelAction.label",
			"ClearSearchResultsAction.label",
			"CancelSearchAction.label",
			"FocusNextSearchResult.label",
			"FocusPreviousSearchResult.label",
			"RemoveAction.label",
			"file.replaceAll.label",
			"file.replaceAll.label",
			"match.replace.label"
		],
		"vs/base/browser/ui/aria/aria": [
			"repeated"
		],
		"vs/platform/theme/common/colorRegistry": [
			"schema.colors",
			"foreground",
			"errorForeground",
			"descriptionForeground",
			"focusBorder",
			"contrastBorder",
			"activeContrastBorder",
			"selectionBackground",
			"textSeparatorForeground",
			"textLinkForeground",
			"textLinkActiveForeground",
			"textPreformatForeground",
			"textBlockQuoteBackground",
			"textBlockQuoteBorder",
			"textCodeBlockBackground",
			"widgetShadow",
			"inputBoxBackground",
			"inputBoxForeground",
			"inputBoxBorder",
			"inputBoxActiveOptionBorder",
			"inputPlaceholderForeground",
			"inputValidationInfoBackground",
			"inputValidationInfoBorder",
			"inputValidationWarningBackground",
			"inputValidationWarningBorder",
			"inputValidationErrorBackground",
			"inputValidationErrorBorder",
			"dropdownBackground",
			"dropdownListBackground",
			"dropdownForeground",
			"dropdownBorder",
			"listFocusBackground",
			"listFocusForeground",
			"listActiveSelectionBackground",
			"listActiveSelectionForeground",
			"listInactiveSelectionBackground",
			"listInactiveSelectionForeground",
			"listInactiveSelectionBackground",
			"listHoverBackground",
			"listHoverForeground",
			"listDropBackground",
			"highlight",
			"invalidItemForeground",
			"listErrorForeground",
			"listWarningForeground",
			"pickerGroupForeground",
			"pickerGroupBorder",
			"buttonForeground",
			"buttonBackground",
			"buttonHoverBackground",
			"badgeBackground",
			"badgeForeground",
			"scrollbarShadow",
			"scrollbarSliderBackground",
			"scrollbarSliderHoverBackground",
			"scrollbarSliderActiveBackground",
			"progressBarBackground",
			"editorBackground",
			"editorForeground",
			"editorWidgetBackground",
			"editorWidgetBorder",
			"editorWidgetResizeBorder",
			"editorSelectionBackground",
			"editorSelectionForeground",
			"editorInactiveSelection",
			"editorSelectionHighlight",
			"editorSelectionHighlightBorder",
			"editorFindMatch",
			"findMatchHighlight",
			"findRangeHighlight",
			"editorFindMatchBorder",
			"findMatchHighlightBorder",
			"findRangeHighlightBorder",
			"hoverHighlight",
			"hoverBackground",
			"hoverBorder",
			"activeLinkForeground",
			"diffEditorInserted",
			"diffEditorRemoved",
			"diffEditorInsertedOutline",
			"diffEditorRemovedOutline",
			"mergeCurrentHeaderBackground",
			"mergeCurrentContentBackground",
			"mergeIncomingHeaderBackground",
			"mergeIncomingContentBackground",
			"mergeCommonHeaderBackground",
			"mergeCommonContentBackground",
			"mergeBorder",
			"overviewRulerCurrentContentForeground",
			"overviewRulerIncomingContentForeground",
			"overviewRulerCommonContentForeground",
			"overviewRulerFindMatchForeground",
			"overviewRulerSelectionHighlightForeground"
		],
		"vs/workbench/browser/actions/workspaceActions": [
			"openFile",
			"openFolder",
			"openFileFolder",
			"globalRemoveFolderFromWorkspace",
			"saveWorkspaceAsAction",
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"saveWorkspace",
			"openWorkspaceAction",
			"openWorkspaceConfigFile",
			"duplicateWorkspaceInNewWindow"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"defaultLabel",
			"useExcludesAndIgnoreFilesDescription"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"searchFolderMatch.other.label",
			"searchFileMatches",
			"searchFileMatch",
			"searchMatches",
			"searchMatch",
			"folderMatchAriaLabel",
			"fileMatchAriaLabel",
			"replacePreviewResultAria",
			"searchResultAria"
		],
		"vs/workbench/parts/search/common/queryBuilder": [
			"search.noWorkspaceWithName"
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"entryAriaLabel",
			"searchResults"
		],
		"vs/workbench/parts/scm/electron-browser/dirtydiffDecorator": [
			"changes",
			"change",
			"show previous change",
			"show next change",
			"move to previous change",
			"move to next change",
			"editorGutterModifiedBackground",
			"editorGutterAddedBackground",
			"editorGutterDeletedBackground",
			"overviewRulerModifiedForeground",
			"overviewRulerAddedForeground",
			"overviewRulerDeletedForeground"
		],
		"vs/workbench/parts/scm/electron-browser/scmActivity": [
			"scmPendingChangesBadge"
		],
		"vs/workbench/browser/parts/views/panelViewlet": [
			"viewToolbarAriaLabel"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"titleAndKb"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			{
				"key": "titleLabel",
				"comment": [
					"action title",
					"action keybinding"
				]
			}
		],
		"vs/workbench/parts/debug/electron-browser/variablesView": [
			"variablesSection",
			"variablesAriaTreeLabel",
			"variableValueAriaLabel",
			"variableScopeAriaLabel",
			"variableAriaLabel"
		],
		"vs/workbench/parts/debug/browser/breakpointsView": [
			"Logpoint",
			"Breakpoint",
			"editBreakpoint",
			"removeBreakpoint",
			"functionBreakpointsNotSupported",
			"functionBreakpointPlaceholder",
			"functionBreakPointInputAriaLabel",
			"disabledLogpoint",
			"disabledBreakpoint",
			"unverifiedLogpoint",
			"unverifiedBreakopint",
			"functionBreakpointUnsupported",
			"breakpointDirtydHover",
			"logBreakpointUnsupported",
			"logMessage",
			"conditionalBreakpointUnsupported",
			"hitBreakpointUnsupported",
			"expression",
			"hitCount"
		],
		"vs/workbench/parts/debug/electron-browser/watchExpressionsView": [
			"expressionsSection",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "watchAriaTreeLabel"
			},
			"watchExpressionPlaceholder",
			"watchExpressionInputAriaLabel",
			"watchExpressionAriaLabel",
			"watchVariableAriaLabel"
		],
		"vs/workbench/parts/debug/electron-browser/callStackView": [
			"callstackSection",
			"debugStopped",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "callStackAriaLabel"
			},
			{
				"key": "session",
				"comment": [
					"Session is a noun"
				]
			},
			"paused",
			{
				"key": "running",
				"comment": [
					"indicates state"
				]
			},
			"thread",
			{
				"key": "pausedOn",
				"comment": [
					"indicates reason for program being paused"
				]
			},
			"paused",
			{
				"key": "running",
				"comment": [
					"indicates state"
				]
			},
			"loadMoreStackFrames",
			"threadAriaLabel",
			"stackFrameAriaLabel"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"openLaunchJson",
			"launchJsonNeedsConfigurtion",
			"noFolderDebugConfig",
			"startDebug",
			"startWithoutDebugging",
			"selectAndStartDebugging",
			"restartDebug",
			"reconnectDebug",
			"stepOverDebug",
			"stepIntoDebug",
			"stepOutDebug",
			"stopDebug",
			"disconnectDebug",
			"continueDebug",
			"pauseDebug",
			"terminateThread",
			"restartFrame",
			"removeBreakpoint",
			"removeAllBreakpoints",
			"enableAllBreakpoints",
			"disableAllBreakpoints",
			"activateBreakpoints",
			"deactivateBreakpoints",
			"reapplyAllBreakpoints",
			"addFunctionBreakpoint",
			"setValue",
			"addWatchExpression",
			"editWatchExpression",
			"addToWatchExpressions",
			"removeWatchExpression",
			"removeAllWatchExpressions",
			"clearRepl",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugConsoleAction"
			},
			"unreadOutput",
			{
				"comment": [
					"Debug is a noun in this context, not a verb."
				],
				"key": "debugFocusConsole"
			},
			"focusSession",
			"stepBackDebug",
			"reverseContinue"
		],
		"vs/workbench/parts/debug/browser/debugActionsWidget": [
			"debugToolBarBackground",
			"debugToolBarBorder"
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"snapshotObj",
			"debuggingPaused",
			"debuggingStarted",
			"debuggingStopped",
			"breakpointAdded",
			"breakpointRemoved",
			"consoleCleared",
			"configurationAlreadyRunning",
			{
				"key": "compoundMustHaveConfigurations",
				"comment": [
					"compound indicates a \"compounds\" configuration item",
					"\"configurations\" is an attribute and should not be localized"
				]
			},
			"noConfigurationNameInWorkspace",
			"multipleConfigurationNamesInWorkspace",
			"noFolderWithName",
			"configMissing",
			"launchJsonDoesNotExist",
			"debugRequestNotSupported",
			"debugRequesMissing",
			"debugTypeNotSupported",
			"debugTypeMissing",
			"noFolderWorkspaceDebugError",
			"cancel",
			"debugAnyway",
			"preLaunchTaskErrors",
			"preLaunchTaskError",
			"preLaunchTaskExitCode",
			"showErrors",
			"DebugTaskNotFoundWithTaskId",
			"DebugTaskNotFound",
			"taskNotTrackedWithTaskId",
			"taskNotTracked"
		],
		"vs/workbench/parts/debug/browser/debugContentProvider": [
			"unable",
			"canNotResolveSource"
		],
		"vs/workbench/parts/debug/browser/debugCommands": [
			"noFolderDebugConfig",
			"inlineBreakpoint",
			"debug",
			"addInlineBreakpoint"
		],
		"vs/workbench/parts/debug/browser/statusbarColorProvider": [
			"statusBarDebuggingBackground",
			"statusBarDebuggingForeground",
			"statusBarDebuggingBorder"
		],
		"vs/workbench/parts/debug/browser/debugStatus": [
			"selectAndStartDebug"
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"logPoint",
			"breakpoint",
			"removeBreakpoint",
			"editBreakpoint",
			"disableBreakpoint",
			"enableBreakpoint",
			"removeBreakpoints",
			"removeInlineBreakpointOnColumn",
			"removeLineBreakpoint",
			"editBreakpoints",
			"editInlineBreakpointOnColumn",
			"editLineBrekapoint",
			"enableDisableBreakpoints",
			"disableInlineColumnBreakpoint",
			"disableBreakpointOnLine",
			"enableBreakpoints",
			"enableBreakpointOnLine",
			"addBreakpoint",
			"addConditionalBreakpoint",
			"addLogPoint",
			"logPoint",
			"breakpoint",
			"breakpointHasCondition",
			"message",
			"condition",
			"removeLogPoint",
			"disableLogPoint",
			"cancel",
			"addConfiguration"
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"stateCapture",
			"replVariableAriaLabel",
			"replExpressionAriaLabel",
			"replValueOutputAriaLabel",
			"replRawObjectAriaLabel"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"collapse"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"noConfigurations",
			"addConfigTo",
			"addConfiguration"
		],
		"vs/workbench/parts/markers/electron-browser/markersPanel": [
			"disableFilesExclude",
			"clearFilter"
		],
		"vs/workbench/parts/markers/electron-browser/markersPanelActions": [
			"showing filtered problems"
		],
		"vs/workbench/parts/markers/electron-browser/messages": [
			"viewCategory",
			"problems.view.toggle.label",
			"problems.view.focus.label",
			"problems.panel.configuration.title",
			"problems.panel.configuration.autoreveal",
			"markers.panel.title.problems",
			"markers.panel.aria.label.problems.tree",
			"markers.panel.no.problems.build",
			"markers.panel.no.problems.filters",
			"markers.panel.no.problems.file.exclusions",
			"markers.panel.action.useFilesExclude",
			"markers.panel.action.donotUseFilesExclude",
			"markers.panel.action.filter",
			"markers.panel.filter.ariaLabel",
			"markers.panel.filter.placeholder",
			"markers.panel.filter.errors",
			"markers.panel.filter.warnings",
			"markers.panel.filter.infos",
			"markers.panel.single.error.label",
			"markers.panel.multiple.errors.label",
			"markers.panel.single.warning.label",
			"markers.panel.multiple.warnings.label",
			"markers.panel.single.info.label",
			"markers.panel.multiple.infos.label",
			"markers.panel.single.unknown.label",
			"markers.panel.multiple.unknowns.label",
			"markers.panel.at.ln.col.number",
			"problems.tree.aria.label.resource",
			"problems.tree.aria.label.marker.relatedInformation",
			"problems.tree.aria.label.error.marker",
			"problems.tree.aria.label.error.marker.nosource",
			"problems.tree.aria.label.warning.marker",
			"problems.tree.aria.label.warning.marker.nosource",
			"problems.tree.aria.label.info.marker",
			"problems.tree.aria.label.info.marker.nosource",
			"problems.tree.aria.label.marker",
			"problems.tree.aria.label.marker.nosource",
			"problems.tree.aria.label.relatedinfo.message",
			"errors.warnings.show.label"
		],
		"vs/workbench/parts/markers/electron-browser/markers": [
			"totalProblems"
		],
		"vs/workbench/parts/markers/electron-browser/markersFileDecorations": [
			"label",
			"tooltip.1",
			"tooltip.N",
			"markers.showOnFile"
		],
		"vs/workbench/parts/html/electron-browser/htmlPreviewPart": [
			"html.voidInput"
		],
		"vs/workbench/parts/webview/electron-browser/webviewCommands": [
			"openToolsLabel",
			"refreshWebviewLabel"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart": [
			"walkThrough.unboundCommand",
			"walkThrough.gitNotFound",
			"walkThrough.embeddedEditorBackground"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough": [
			"editorWalkThrough.title",
			"editorWalkThrough"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"neverShowAgain",
			"searchMarketplace",
			"dynamicWorkspaceRecommendation",
			"exeBasedRecommendation",
			"fileBasedRecommendation",
			"workspaceRecommendation",
			"reallyRecommended2",
			"reallyRecommendedExtensionPack",
			"install",
			"showRecommendations",
			"showRecommendations",
			"showLanguageExtensions",
			"workspaceRecommended",
			"installAll",
			"installAll",
			"showRecommendations",
			"showRecommendations",
			"ignoreExtensionRecommendations",
			"ignoreAll",
			"no"
		],
		"vs/workbench/parts/extensions/node/extensionsWorkbenchService": [
			"installingVSIXExtension",
			"malicious",
			"installingMarketPlaceExtension",
			"uninstallingExtension",
			"enableDependeciesConfirmation",
			"enable",
			"doNotEnable",
			"disableDependeciesConfirmation",
			"yes",
			"no",
			"cancel",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"installConfirmation",
			"install"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"download",
			"install vsix",
			"install",
			"installing",
			"failedToInstall",
			"uninstallAction",
			"Uninstalling",
			"failedToUpdate",
			"updateTo",
			"updateAction",
			"failedToInstall",
			"updateToInServer",
			"updateLabelInServer",
			"failedToInstall",
			"installAction",
			"installing",
			"installInServer",
			"installInServer",
			"installInRecommendedServer",
			"update",
			"installInServer",
			"uninstallAction",
			"Uninstalling",
			"ManageExtensionAction.uninstallingTooltip",
			"enableForWorkspaceAction",
			"enableGloballyAction",
			"enableAction",
			"disableForWorkspaceAction",
			"disableGloballyAction",
			"disableAction",
			"checkForUpdates",
			"enableAutoUpdate",
			"disableAutoUpdate",
			"updateAll",
			"failedToUpdate",
			"reloadAction",
			"postUpdateTooltip",
			"postUpdateMessage",
			"postDisableTooltip",
			"postDisableMessage",
			"postEnableTooltip",
			"postEnableMessage",
			"postUninstallTooltip",
			"postUninstallMessage",
			"toggleExtensionsViewlet",
			"installExtensions",
			"showEnabledExtensions",
			"showInstalledExtensions",
			"showDisabledExtensions",
			"clearExtensionsInput",
			"showBuiltInExtensions",
			"showOutdatedExtensions",
			"showPopularExtensions",
			"showRecommendedExtensions",
			"installWorkspaceRecommendedExtensions",
			"extensionInstalled",
			"failedToInstall",
			"installRecommendedExtension",
			"ignoreExtensionRecommendation",
			"undo",
			"showRecommendedKeymapExtensionsShort",
			"showLanguageExtensionsShort",
			"showAzureExtensionsShort",
			"OpenExtensionsFile.failed",
			"configureWorkspaceRecommendedExtensions",
			"configureWorkspaceFolderRecommendedExtensions",
			"addToWorkspaceFolderRecommendations",
			"addToWorkspaceFolderIgnoredRecommendations",
			"AddToWorkspaceFolderRecommendations.noWorkspace",
			"AddToWorkspaceFolderRecommendations.alreadyExists",
			"AddToWorkspaceFolderRecommendations.success",
			"AddToWorkspaceFolderRecommendations.failure",
			"AddToWorkspaceFolderIgnoredRecommendations.alreadyExists",
			"AddToWorkspaceFolderIgnoredRecommendations.success",
			"AddToWorkspaceFolderRecommendations.failure",
			"addToWorkspaceRecommendations",
			"addToWorkspaceIgnoredRecommendations",
			"AddToWorkspaceRecommendations.alreadyExists",
			"AddToWorkspaceRecommendations.success",
			"AddToWorkspaceRecommendations.failure",
			"AddToWorkspaceUnwantedRecommendations.alreadyExists",
			"AddToWorkspaceUnwantedRecommendations.success",
			"AddToWorkspaceRecommendations.failure",
			"malicious tooltip",
			"malicious",
			"malicious tooltip",
			"disabled",
			"disabled globally",
			"disabled workspace",
			"disableAll",
			"disableAllWorkspace",
			"enableAll",
			"enableAllWorkspace",
			"openExtensionsFolder",
			"installVSIX",
			"installFromVSIX",
			{
				"key": "installButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"InstallVSIXAction.success",
			"InstallVSIXAction.reloadNow",
			"reinstall",
			"selectExtension",
			"ReinstallAction.success",
			"ReinstallAction.reloadNow",
			"extensionButtonProminentBackground",
			"extensionButtonProminentForeground",
			"extensionButtonProminentHoverBackground"
		],
		"vs/workbench/parts/extensions/common/extensionsInput": [
			"extensionsInputName"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionEditor": [
			"name",
			"extension id",
			"preview",
			"preview",
			"builtin",
			"publisher",
			"install count",
			"rating",
			"repository",
			"license",
			"recommendationHasBeenIgnored",
			"recommendationHasBeenIgnored",
			"details",
			"detailstooltip",
			"contributions",
			"contributionstooltip",
			"changelog",
			"changelogtooltip",
			"dependencies",
			"dependenciestooltip",
			"noReadme",
			"noChangelog",
			"noContributions",
			"noContributions",
			"noDependencies",
			"settings",
			"setting name",
			"description",
			"default",
			"debuggers",
			"debugger name",
			"debugger type",
			"viewContainers",
			"view container id",
			"view container title",
			"view container location",
			"views",
			"view id",
			"view name",
			"view location",
			"localizations",
			"localizations language id",
			"localizations language name",
			"localizations localized language name",
			"colorThemes",
			"iconThemes",
			"colors",
			"colorId",
			"description",
			"defaultDark",
			"defaultLight",
			"defaultHC",
			"JSON Validation",
			"fileMatch",
			"schema",
			"commands",
			"command name",
			"description",
			"keyboard shortcuts",
			"menuContexts",
			"languages",
			"language id",
			"language name",
			"file extensions",
			"grammar",
			"snippets"
		],
		"vs/workbench/parts/extensions/common/extensionsFileTemplate": [
			"app.extensions.json.title",
			"app.extensions.json.recommendations",
			"app.extension.identifier.errorMessage",
			"app.extensions.json.unwantedRecommendations",
			"app.extension.identifier.errorMessage"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsUtils": [
			"disableOtherKeymapsConfirmation",
			"yes",
			"no"
		],
		"vs/workbench/parts/extensions/electron-browser/runtimeExtensionsEditor": [
			"starActivation",
			{
				"key": "workspaceContainsGlobActivation",
				"comment": [
					"{0} will be a glob pattern"
				]
			},
			{
				"key": "workspaceContainsFileActivation",
				"comment": [
					"{0} will be a file name"
				]
			},
			"languageActivation",
			{
				"key": "workspaceGenericActivation",
				"comment": [
					"The {0} placeholder will be an activation event, like e.g. 'language:typescript', 'debug', etc."
				]
			},
			"errors",
			"extensionsInputName",
			"showRuntimeExtensions",
			"reportExtensionIssue",
			"extensionHostProfileStart",
			"extensionHostProfileStop",
			"saveExtensionHostProfile"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionProfileService": [
			"restart1",
			"restart2",
			"restart3",
			"cancel",
			"selectAndStartDebug"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViews": [
			"extensions",
			"no extensions found",
			"suggestProxyError"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage": [
			"welcomePage",
			"welcomePage.javaScript",
			"welcomePage.typeScript",
			"welcomePage.python",
			"welcomePage.php",
			"welcomePage.azure",
			"welcomePage.showAzureExtensions",
			"welcomePage.docker",
			"welcomePage.vim",
			"welcomePage.sublime",
			"welcomePage.atom",
			"welcomePage.extensionPackAlreadyInstalled",
			"welcomePage.willReloadAfterInstallingExtensionPack",
			"welcomePage.installingExtensionPack",
			"welcomePage.extensionPackNotFound",
			"welcomePage.keymapAlreadyInstalled",
			"welcomePage.willReloadAfterInstallingKeymap",
			"welcomePage.installingKeymap",
			"welcomePage.keymapNotFound",
			"welcome.title",
			"welcomePage.openFolderWithPath",
			"welcomePage.extensionListSeparator",
			"welcomePage.installKeymap",
			"welcomePage.installExtensionPack",
			"welcomePage.installedKeymap",
			"welcomePage.installedExtensionPack",
			"ok",
			"details",
			"welcomePage.buttonBackground",
			"welcomePage.buttonHoverBackground"
		],
		"vs/editor/common/modes/modesRegistry": [
			"plainText.alias"
		],
		"vs/workbench/parts/output/electron-browser/outputServices": [
			"output",
			"channel"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"toggleOutput",
			"clearOutput",
			{
				"key": "toggleOutputScrollLock",
				"comment": [
					"Turn on / off automatic output scrolling"
				]
			},
			"switchToOutput.label",
			"openInLogViewer"
		],
		"vs/workbench/browser/parts/editor/textResourceEditor": [
			"textEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"untitledFileEditorWithInputAriaLabel",
			"untitledFileEditorAriaLabel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"workbench.action.terminal.toggleTerminal",
			"workbench.action.terminal.kill",
			"workbench.action.terminal.kill.short",
			"workbench.action.terminal.quickKill",
			"workbench.action.terminal.copySelection",
			"workbench.action.terminal.selectAll",
			"workbench.action.terminal.deleteWordLeft",
			"workbench.action.terminal.deleteWordRight",
			"workbench.action.terminal.moveToLineStart",
			"workbench.action.terminal.moveToLineEnd",
			"workbench.action.terminal.new",
			"workbench.action.terminal.new.short",
			"workbench.action.terminal.newWorkspacePlaceholder",
			"workbench.action.terminal.newInActiveWorkspace",
			"workbench.action.terminal.split",
			"workbench.action.terminal.newWorkspacePlaceholder",
			"workbench.action.terminal.splitInActiveWorkspace",
			"workbench.action.terminal.focusPreviousPane",
			"workbench.action.terminal.focusNextPane",
			"workbench.action.terminal.resizePaneLeft",
			"workbench.action.terminal.resizePaneRight",
			"workbench.action.terminal.resizePaneUp",
			"workbench.action.terminal.resizePaneDown",
			"workbench.action.terminal.focus",
			"workbench.action.terminal.focusNext",
			"workbench.action.terminal.focusPrevious",
			"workbench.action.terminal.paste",
			"workbench.action.terminal.DefaultShell",
			"workbench.action.terminal.runSelectedText",
			"workbench.action.terminal.runActiveFile",
			"workbench.action.terminal.runActiveFile.noFile",
			"workbench.action.terminal.switchTerminal",
			"workbench.action.terminal.scrollDown",
			"workbench.action.terminal.scrollDownPage",
			"workbench.action.terminal.scrollToBottom",
			"workbench.action.terminal.scrollUp",
			"workbench.action.terminal.scrollUpPage",
			"workbench.action.terminal.scrollToTop",
			"workbench.action.terminal.clear",
			"workbench.action.terminal.clearSelection",
			"workbench.action.terminal.allowWorkspaceShell",
			"workbench.action.terminal.disallowWorkspaceShell",
			"workbench.action.terminal.rename",
			"workbench.action.terminal.rename.prompt",
			"workbench.action.terminal.focusFindWidget",
			"workbench.action.terminal.hideFindWidget",
			"quickOpenTerm",
			"workbench.action.terminal.scrollToPreviousCommand",
			"workbench.action.terminal.scrollToNextCommand",
			"workbench.action.terminal.selectToPreviousCommand",
			"workbench.action.terminal.selectToNextCommand",
			"workbench.action.terminal.selectToPreviousLine",
			"workbench.action.terminal.selectToNextLine"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalService": [
			"terminal.integrated.chooseWindowsShellInfo",
			"customize",
			"never again",
			"terminal.integrated.chooseWindowsShell",
			"terminalService.terminalCloseConfirmationSingular",
			"terminalService.terminalCloseConfirmationPlural"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"splitEditor",
			"splitEditorOrthogonal",
			"splitEditorGroupLeft",
			"splitEditorGroupRight",
			"splitEditorGroupUp",
			"splitEditorGroupDown",
			"joinTwoGroups",
			"joinAllGroups",
			"navigateEditorGroups",
			"focusActiveEditorGroup",
			"focusFirstEditorGroup",
			"focusLastEditorGroup",
			"focusNextGroup",
			"focusPreviousGroup",
			"focusLeftGroup",
			"focusRightGroup",
			"focusAboveGroup",
			"focusBelowGroup",
			"openToSide",
			"closeEditor",
			"closeOneEditor",
			"revertAndCloseActiveEditor",
			"closeEditorsToTheLeft",
			"closeAllEditors",
			"closeAllGroups",
			"closeEditorsInOtherGroups",
			"moveActiveGroupLeft",
			"moveActiveGroupRight",
			"moveActiveGroupUp",
			"moveActiveGroupDown",
			"minimizeOtherEditorGroups",
			"evenEditorGroups",
			"maximizeEditor",
			"openNextEditor",
			"openPreviousEditor",
			"nextEditorInGroup",
			"openPreviousEditorInGroup",
			"firstEditorInGroup",
			"lastEditorInGroup",
			"navigateNext",
			"navigatePrevious",
			"navigateLast",
			"reopenClosedEditor",
			"clearRecentFiles",
			"showEditorsInActiveGroup",
			"showAllEditors",
			"openPreviousRecentlyUsedEditorInGroup",
			"openNextRecentlyUsedEditorInGroup",
			"navigateEditorHistoryByInput",
			"openNextRecentlyUsedEditor",
			"openPreviousRecentlyUsedEditor",
			"clearEditorHistory",
			"moveEditorLeft",
			"moveEditorRight",
			"moveEditorToPreviousGroup",
			"moveEditorToNextGroup",
			"moveEditorToAboveGroup",
			"moveEditorToBelowGroup",
			"moveEditorToLeftGroup",
			"moveEditorToRightGroup",
			"moveEditorToFirstGroup",
			"moveEditorToLastGroup",
			"editorLayoutSingle",
			"editorLayoutTwoColumns",
			"editorLayoutThreeColumns",
			"editorLayoutTwoRows",
			"editorLayoutThreeRows",
			"editorLayoutTwoByTwoGrid",
			"editorLayoutTwoColumnsBottom",
			"editorLayoutTwoColumnsRight",
			"newEditorLeft",
			"newEditorRight",
			"newEditorAbove",
			"newEditorBelow"
		],
		"vs/editor/common/config/editorOptions": [
			"accessibilityOffAriaLabel",
			"editorViewAccessibleLabel"
		],
		"vs/workbench/parts/terminal/common/terminalColorRegistry": [
			"terminal.background",
			"terminal.foreground",
			"terminalCursor.foreground",
			"terminalCursor.background",
			"terminal.selectionBackground",
			"terminal.border",
			"terminal.ansiColor"
		],
		"vs/workbench/electron-browser/actions": [
			"closeWindow",
			"closeWorkspace",
			"noWorkspaceOpened",
			"newWindow",
			"toggleFullScreen",
			"toggleMenuBar",
			"toggleDevTools",
			"zoomIn",
			"zoomOut",
			"zoomReset",
			"appPerf",
			"reloadWindow",
			"reloadWindowWithExntesionsDisabled",
			"switchWindowPlaceHolder",
			"current",
			"close",
			"switchWindow",
			"quickSwitchWindow",
			"workspaces",
			"files",
			"openRecentPlaceHolderMac",
			"openRecentPlaceHolder",
			"remove",
			"openRecent",
			"quickOpenRecent",
			{
				"key": "reportIssueInEnglish",
				"comment": [
					"Translate this to \"Report Issue in English\" in all languages please!"
				]
			},
			"openProcessExplorer",
			"reportPerformanceIssue",
			"reportPerformanceIssue",
			"keybindingsReference",
			"openDocumentationUrl",
			"openIntroductoryVideosUrl",
			"openTipsAndTricksUrl",
			"toggleSharedProcess",
			"navigateLeft",
			"navigateRight",
			"navigateUp",
			"navigateDown",
			"increaseViewSize",
			"decreaseViewSize",
			"showPreviousTab",
			"showNextWindowTab",
			"moveWindowTabToNewWindow",
			"mergeAllWindowTabs",
			"toggleWindowTabsBar",
			"openTwitterUrl",
			"openUserVoiceUrl",
			"openLicenseUrl",
			"openPrivacyStatement",
			"accessibilityOptions",
			"about",
			"inspect context keys"
		],
		"vs/workbench/browser/parts/panel/panelActions": [
			"closePanel",
			"togglePanel",
			"focusPanel",
			"toggledPanelPosition",
			"moveToRight",
			"moveToBottom",
			"toggleMaximizedPanel",
			"maximizePanel",
			"minimizePanel",
			"view",
			"view",
			"view",
			"view",
			"view",
			"view"
		],
		"vs/workbench/common/theme": [
			"tabActiveBackground",
			"tabInactiveBackground",
			"tabHoverBackground",
			"tabUnfocusedHoverBackground",
			"tabBorder",
			"tabActiveBorder",
			"tabActiveBorderTop",
			"tabActiveUnfocusedBorder",
			"tabActiveUnfocusedBorderTop",
			"tabHoverBorder",
			"tabUnfocusedHoverBorder",
			"tabActiveForeground",
			"tabInactiveForeground",
			"tabUnfocusedActiveForeground",
			"tabUnfocusedInactiveForeground",
			"editorGroupBackground",
			"deprecatedEditorGroupBackground",
			"editorGroupEmptyBackground",
			"editorGroupFocusedEmptyBorder",
			"tabsContainerBackground",
			"tabsContainerBorder",
			"editorGroupHeaderBackground",
			"editorGroupBorder",
			"editorDragAndDropBackground",
			"panelBackground",
			"panelBorder",
			"panelActiveTitleForeground",
			"panelInactiveTitleForeground",
			"panelActiveTitleBorder",
			"panelDragAndDropBackground",
			"statusBarForeground",
			"statusBarNoFolderForeground",
			"statusBarBackground",
			"statusBarNoFolderBackground",
			"statusBarBorder",
			"statusBarNoFolderBorder",
			"statusBarItemActiveBackground",
			"statusBarItemHoverBackground",
			"statusBarProminentItemBackground",
			"statusBarProminentItemHoverBackground",
			"activityBarBackground",
			"activityBarForeground",
			"activityBarBorder",
			"activityBarDragAndDropBackground",
			"activityBarBadgeBackground",
			"activityBarBadgeForeground",
			"sideBarBackground",
			"sideBarForeground",
			"sideBarBorder",
			"sideBarTitleForeground",
			"sideBarDragAndDropBackground",
			"sideBarSectionHeaderBackground",
			"sideBarSectionHeaderForeground",
			"titleBarActiveForeground",
			"titleBarInactiveForeground",
			"titleBarActiveBackground",
			"titleBarInactiveBackground",
			"titleBarBorder",
			"notificationCenterBorder",
			"notificationToastBorder",
			"notificationsForeground",
			"notificationsBackground",
			"notificationsLink",
			"notificationCenterHeaderForeground",
			"notificationCenterHeaderBackground",
			"notificationsBorder"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper": [
			"terminal.integrated.allowWorkspaceShell",
			"allow",
			"disallow"
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"hideActivitBar",
			"globalActions"
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"focusSideBar",
			"viewCategory"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"hidePanel"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"manageExtension"
		],
		"vs/workbench/browser/parts/titlebar/titlebarPart": [
			"patchedWindowTitle",
			"userIsAdmin",
			"userIsSudo",
			"devExtensionWindowTitlePrefix"
		],
		"vs/workbench/browser/parts/menubar/menubarPart": [
			{
				"key": "mFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mEdit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mSelection",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mGoto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mTasks",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mHelp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miMultiCursorAlt",
			"miMultiCursorCmd",
			"miMultiCursorCtrl",
			{
				"key": "miMoveSidebarRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"editorPaneBackground",
			"groupLabel"
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"nonempty",
			"requirestring",
			"requirestring",
			"optstring",
			"optstring",
			"optstring",
			"optstring",
			"vscode.extension.contributes.keybindings.command",
			"vscode.extension.contributes.keybindings.key",
			"vscode.extension.contributes.keybindings.mac",
			"vscode.extension.contributes.keybindings.linux",
			"vscode.extension.contributes.keybindings.win",
			"vscode.extension.contributes.keybindings.when",
			"vscode.extension.contributes.keybindings",
			"invalid.keybindings",
			"unboundCommands",
			"keybindings.json.title",
			"keybindings.json.key",
			"keybindings.json.command",
			"keybindings.json.when",
			"keybindings.json.args",
			"keyboardConfigurationTitle",
			"dispatch",
			"touchbar.enabled"
		],
		"vs/workbench/services/configuration/node/configurationService": [
			"unsupportedApplicationSetting",
			"unsupportedWindowSetting"
		],
		"vs/workbench/services/configuration/node/jsonEditingService": [
			"errorInvalidFile",
			"errorFileDirty"
		],
		"vs/workbench/services/keybinding/common/keybindingEditing": [
			"errorKeybindingsFileDirty",
			"parseErrors",
			"errorInvalidConfiguration",
			"emptyKeybindingsHeader"
		],
		"vs/workbench/services/files/electron-browser/remoteFileService": [
			"invalidPath",
			"fileNotFoundError",
			"fileIsDirectoryError",
			"fileNotModifiedError",
			"fileBinaryError",
			"err.readonly",
			"err.create",
			"fileMoveConflict",
			"fileMoveConflict",
			"fileMoveConflict"
		],
		"vs/workbench/services/configurationResolver/electron-browser/configurationResolverService": [
			"stringsOnlySupported"
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"saveChangesMessage",
			"saveChangesMessages",
			{
				"key": "saveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "dontSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancel",
			"saveChangesDetail",
			"allFiles",
			"noExt"
		],
		"vs/workbench/services/progress/browser/progressService2": [
			"progress.text2",
			"progress.title3",
			"progress.title2",
			"progress.title2",
			"cancel"
		],
		"vs/workbench/services/workspace/node/workspaceEditingService": [
			"errorInvalidTaskConfiguration",
			"errorWorkspaceConfigurationFileDirty",
			"openWorkspaceConfigurationFile"
		],
		"vs/workbench/services/decorations/browser/decorationsService": [
			"bubbleTitle"
		],
		"vs/workbench/browser/parts/notifications/notificationsCenter": [
			"notificationsEmpty",
			"notifications",
			"notificationsToolbar",
			"notificationsList"
		],
		"vs/workbench/browser/parts/notifications/notificationsAlerts": [
			"alertErrorMessage",
			"alertWarningMessage",
			"alertInfoMessage"
		],
		"vs/workbench/browser/parts/notifications/notificationsStatus": [
			"hideNotifications",
			"zeroNotifications",
			"noNotifications",
			"oneNotification",
			"notifications"
		],
		"vs/workbench/browser/parts/notifications/notificationsCommands": [
			"notifications",
			"showNotifications",
			"hideNotifications",
			"clearAllNotifications"
		],
		"vs/workbench/browser/parts/notifications/notificationsToasts": [
			"notificationsToast"
		],
		"vs/workbench/services/preferences/browser/preferencesService": [
			"openFolderFirst",
			"emptyKeybindingsHeader",
			"defaultKeybindings",
			"folderSettingsName",
			"fail.createSettings"
		],
		"vs/platform/url/electron-browser/inactiveExtensionUrlHandler": [
			"confirmUrl"
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"tasksAriaLabel",
			"noTasksMatching",
			"noTasksFound"
		],
		"vs/platform/markers/common/markers": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/workbench/parts/tasks/common/problemMatcher": [
			"ProblemPatternParser.loopProperty.notLast",
			"ProblemPatternParser.problemPattern.kindProperty.notFirst",
			"ProblemPatternParser.problemPattern.missingRegExp",
			"ProblemPatternParser.problemPattern.missingProperty",
			"ProblemPatternParser.problemPattern.missingLocation",
			"ProblemPatternParser.invalidRegexp",
			"ProblemPatternSchema.regexp",
			"ProblemPatternSchema.kind",
			"ProblemPatternSchema.file",
			"ProblemPatternSchema.location",
			"ProblemPatternSchema.line",
			"ProblemPatternSchema.column",
			"ProblemPatternSchema.endLine",
			"ProblemPatternSchema.endColumn",
			"ProblemPatternSchema.severity",
			"ProblemPatternSchema.code",
			"ProblemPatternSchema.message",
			"ProblemPatternSchema.loop",
			"NamedProblemPatternSchema.name",
			"NamedMultiLineProblemPatternSchema.name",
			"NamedMultiLineProblemPatternSchema.patterns",
			"ProblemPatternExtPoint",
			"ProblemPatternRegistry.error",
			"ProblemPatternRegistry.error",
			"ProblemMatcherParser.noProblemMatcher",
			"ProblemMatcherParser.noProblemPattern",
			"ProblemMatcherParser.noOwner",
			"ProblemMatcherParser.noFileLocation",
			"ProblemMatcherParser.unknownSeverity",
			"ProblemMatcherParser.noDefinedPatter",
			"ProblemMatcherParser.noIdentifier",
			"ProblemMatcherParser.noValidIdentifier",
			"ProblemMatcherParser.problemPattern.watchingMatcher",
			"ProblemMatcherParser.invalidRegexp",
			"WatchingPatternSchema.regexp",
			"WatchingPatternSchema.file",
			"PatternTypeSchema.name",
			"PatternTypeSchema.description",
			"ProblemMatcherSchema.base",
			"ProblemMatcherSchema.owner",
			"ProblemMatcherSchema.source",
			"ProblemMatcherSchema.severity",
			"ProblemMatcherSchema.applyTo",
			"ProblemMatcherSchema.fileLocation",
			"ProblemMatcherSchema.background",
			"ProblemMatcherSchema.background.activeOnStart",
			"ProblemMatcherSchema.background.beginsPattern",
			"ProblemMatcherSchema.background.endsPattern",
			"ProblemMatcherSchema.watching.deprecated",
			"ProblemMatcherSchema.watching",
			"ProblemMatcherSchema.watching.activeOnStart",
			"ProblemMatcherSchema.watching.beginsPattern",
			"ProblemMatcherSchema.watching.endsPattern",
			"LegacyProblemMatcherSchema.watchedBegin.deprecated",
			"LegacyProblemMatcherSchema.watchedBegin",
			"LegacyProblemMatcherSchema.watchedEnd.deprecated",
			"LegacyProblemMatcherSchema.watchedEnd",
			"NamedProblemMatcherSchema.name",
			"NamedProblemMatcherSchema.label",
			"ProblemMatcherExtPoint",
			"msCompile",
			"lessCompile",
			"gulp-tsc",
			"jshint",
			"jshint-stylish",
			"eslint-compact",
			"eslint-stylish",
			"go"
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"dotnetCore",
			"msbuild",
			"externalCommand",
			"Maven"
		],
		"vs/workbench/parts/tasks/node/tasks": [
			"TaskDefinition.missingRequiredProperty"
		],
		"vs/workbench/parts/tasks/node/taskConfiguration": [
			"ConfigurationParser.invalidCWD",
			"ConfigurationParser.inValidArg",
			"ConfigurationParser.noargs",
			"ConfigurationParser.noShell",
			"ConfigurationParser.noName",
			"ConfigurationParser.unknownMatcherKind",
			"ConfigurationParser.invalidVaraibleReference",
			"ConfigurationParser.noTaskType",
			"ConfigurationParser.noTypeDefinition",
			"ConfigurationParser.missingType",
			"ConfigurationParser.incorrectType",
			"ConfigurationParser.notCustom",
			"ConfigurationParser.noTaskName",
			"taskConfiguration.noCommandOrDependsOn",
			"taskConfiguration.noCommand",
			"TaskParse.noOsSpecificGlobalTasks"
		],
		"vs/workbench/parts/tasks/node/processTaskSystem": [
			"TaskRunnerSystem.unknownError",
			"TaskRunnerSystem.watchingBuildTaskFinished",
			"TaskRunnerSystem.childProcessError",
			"TaskRunnerSystem.cancelRequested",
			"unkownProblemMatcher"
		],
		"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem": [
			"TerminalTaskSystem.unknownError",
			"dependencyFailed",
			"TerminalTaskSystem.terminalName",
			"closeTerminal",
			"reuseTerminal",
			"TerminalTaskSystem",
			"unkownProblemMatcher"
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"TaskSystemDetector.noGulpTasks",
			"TaskSystemDetector.noJakeTasks",
			"TaskSystemDetector.noGulpProgram",
			"TaskSystemDetector.noJakeProgram",
			"TaskSystemDetector.noGruntProgram",
			"TaskSystemDetector.noProgram",
			"TaskSystemDetector.buildTaskDetected",
			"TaskSystemDetector.testTaskDetected"
		],
		"vs/workbench/parts/tasks/browser/quickOpen": [
			"entryAriaLabel",
			"recentlyUsed",
			"configured",
			"detected",
			"customizeTask"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1": [
			"JsonSchema.version",
			"JsonSchema._runner",
			"JsonSchema.runner",
			"JsonSchema.windows",
			"JsonSchema.mac",
			"JsonSchema.linux",
			"JsonSchema.shell"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2": [
			"JsonSchema.shell",
			"JsonSchema.tasks.isShellCommand.deprecated",
			"JsonSchema.tasks.dependsOn.identifier",
			"JsonSchema.tasks.dependsOn.string",
			"JsonSchema.tasks.dependsOn.array",
			"JsonSchema.tasks.presentation",
			"JsonSchema.tasks.presentation.echo",
			"JsonSchema.tasks.presentation.focus",
			"JsonSchema.tasks.presentation.reveal.always",
			"JsonSchema.tasks.presentation.reveal.silent",
			"JsonSchema.tasks.presentation.reveal.never",
			"JsonSchema.tasks.presentation.reveals",
			"JsonSchema.tasks.presentation.instance",
			"JsonSchema.tasks.presentation.showReuseMessage",
			"JsonSchema.tasks.terminal",
			"JsonSchema.tasks.group.kind",
			"JsonSchema.tasks.group.isDefault",
			"JsonSchema.tasks.group.defaultBuild",
			"JsonSchema.tasks.group.defaultTest",
			"JsonSchema.tasks.group.build",
			"JsonSchema.tasks.group.test",
			"JsonSchema.tasks.group.none",
			"JsonSchema.tasks.group",
			"JsonSchema.tasks.type",
			"JsonSchema.commandArray",
			"JsonSchema.commandArray",
			"JsonSchema.command.quotedString.value",
			"JsonSchema.tasks.quoting.escape",
			"JsonSchema.tasks.quoting.strong",
			"JsonSchema.tasks.quoting.weak",
			"JsonSchema.command.quotesString.quote",
			"JsonSchema.command",
			"JsonSchema.args.quotedString.value",
			"JsonSchema.tasks.quoting.escape",
			"JsonSchema.tasks.quoting.strong",
			"JsonSchema.tasks.quoting.weak",
			"JsonSchema.args.quotesString.quote",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.label",
			"JsonSchema.version",
			"JsonSchema.tasks.identifier",
			"JsonSchema.tasks.taskLabel",
			"JsonSchema.tasks.taskName",
			"JsonSchema.tasks.taskName.deprecated",
			"JsonSchema.tasks.background",
			"JsonSchema.tasks.promptOnClose",
			"JsonSchema.tasks.matchers",
			"JsonSchema.customizations.customizes.type",
			"JsonSchema.tasks.customize.deprecated",
			"JsonSchema.tasks.taskName.deprecated",
			"JsonSchema.tasks.showOputput.deprecated",
			"JsonSchema.tasks.echoCommand.deprecated",
			"JsonSchema.tasks.suppressTaskName.deprecated",
			"JsonSchema.tasks.isBuildCommand.deprecated",
			"JsonSchema.tasks.isTestCommand.deprecated",
			"JsonSchema.tasks.suppressTaskName.deprecated",
			"JsonSchema.tasks.taskSelector.deprecated",
			"JsonSchema.windows",
			"JsonSchema.mac",
			"JsonSchema.linux"
		],
		"vs/workbench/parts/emmet/browser/actions/showEmmetCommands": [
			"showEmmetCommands"
		],
		"vs/workbench/parts/emmet/electron-browser/actions/expandAbbreviation": [
			"expandAbbreviationAction"
		],
		"vs/workbench/parts/codeEditor/electron-browser/accessibility": [
			"emergencyConfOn",
			"openingDocs",
			"introMsg",
			"status",
			"changeConfigToOnMac",
			"changeConfigToOnWinLinux",
			"auto_unknown",
			"auto_on",
			"auto_off",
			"configuredOn",
			"configuredOff",
			"tabFocusModeOnMsg",
			"tabFocusModeOnMsgNoKb",
			"tabFocusModeOffMsg",
			"tabFocusModeOffMsgNoKb",
			"openDocMac",
			"openDocWinLinux",
			"outroMsg",
			"ShowAccessibilityHelpAction"
		],
		"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings": [
			"workbench.action.inspectKeyMap"
		],
		"vs/workbench/parts/codeEditor/electron-browser/largeFileOptimizations": [
			{
				"key": "largeFile",
				"comment": [
					"Variable 0 will be a file name."
				]
			},
			"neverShowAgain",
			"removeOptimizations",
			"reopenFilePrompt"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleMinimap": [
			"toggleMinimap"
		],
		"vs/workbench/parts/codeEditor/electron-browser/textMate/inspectTMScopes": [
			"inspectTMScopes",
			"inspectTMScopesWidget.loading"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleMultiCursorModifier": [
			"toggleLocation"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter": [
			"toggleRenderControlCharacters"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace": [
			"toggleRenderWhitespace"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap": [
			"toggle.wordwrap",
			"wordWrap.notInDiffEditor",
			"unwrapMinified",
			"wrapMinified"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsFile": [
			"source.snippetGlobal",
			"source.snippet"
		],
		"vs/workbench/services/mode/common/workbenchModeService": [
			"vscode.extension.contributes.languages",
			"vscode.extension.contributes.languages.id",
			"vscode.extension.contributes.languages.aliases",
			"vscode.extension.contributes.languages.extensions",
			"vscode.extension.contributes.languages.filenames",
			"vscode.extension.contributes.languages.filenamePatterns",
			"vscode.extension.contributes.languages.mimetypes",
			"vscode.extension.contributes.languages.firstLine",
			"vscode.extension.contributes.languages.configuration",
			"invalid",
			"invalid.empty",
			"require.id",
			"opt.extensions",
			"opt.filenames",
			"opt.firstLine",
			"opt.configuration",
			"opt.aliases",
			"opt.mimetypes"
		],
		"vs/workbench/services/themes/common/colorThemeSchema": [
			"schema.token.settings",
			"schema.token.foreground",
			"schema.token.background.warning",
			"schema.token.fontStyle",
			"schema.fontStyle.error",
			"schema.token.fontStyle.none",
			"schema.properties.name",
			"schema.properties.scope",
			"schema.tokenColors.path",
			"schema.colors"
		],
		"vs/workbench/parts/feedback/electron-browser/feedbackStatusbarItem": [
			"hide"
		],
		"vs/workbench/parts/welcome/gettingStarted/electron-browser/telemetryOptOut": [
			"telemetryOptOut.optOutNotice",
			"telemetryOptOut.optInNotice",
			"telemetryOptOut.readMore"
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"releaseNotes",
			"releaseNotes",
			"showReleaseNotes",
			"read the release notes",
			"releaseNotes",
			"licenseChanged",
			"neveragain",
			"64bitisavailable",
			"neveragain",
			"updateIsReady",
			"updateIsReady",
			"noUpdatesAvailable",
			"ok",
			"thereIsUpdateAvailable",
			"download now",
			"later",
			"releaseNotes",
			"updateAvailable",
			"installUpdate",
			"later",
			"releaseNotes",
			"updateInstalling",
			"neveragain",
			"updateAvailableAfterRestart",
			"updateNow",
			"later",
			"releaseNotes",
			"commandPalette",
			"settings",
			"keyboardShortcuts",
			"showExtensions",
			"userSnippets",
			"selectTheme.label",
			"themes.selectIconTheme.label",
			"checkForUpdates",
			"checkingForUpdates",
			"download now",
			"DownloadingUpdate",
			"installUpdate...",
			"installingUpdate",
			"restartToUpdate"
		],
		"vs/platform/update/node/update.config.contribution": [
			"updateConfigurationTitle",
			"updateChannel",
			"enableWindowsBackgroundUpdates",
			"showReleaseNotes"
		],
		"vs/workbench/services/jsonschemas/common/jsonValidationExtensionPoint": [
			"contributes.jsonValidation",
			"contributes.jsonValidation.fileMatch",
			"contributes.jsonValidation.url",
			"invalid.jsonValidation",
			"invalid.fileMatch",
			"invalid.url",
			"invalid.path.1",
			"invalid.url.fileschema",
			"invalid.url.schema"
		],
		"vs/workbench/services/themes/common/colorExtensionPoint": [
			"contributes.color",
			"contributes.color.id",
			"contributes.color.id.format",
			"contributes.color.description",
			"contributes.defaults.light",
			"contributes.defaults.dark",
			"contributes.defaults.highContrast",
			"invalid.colorConfiguration",
			"invalid.default.colorType",
			"invalid.id",
			"invalid.id.format",
			"invalid.description",
			"invalid.defaults"
		],
		"vs/workbench/parts/codeEditor/electron-browser/languageConfiguration/languageConfigurationExtensionPoint": [
			"parseErrors",
			"schema.openBracket",
			"schema.closeBracket",
			"schema.comments",
			"schema.blockComments",
			"schema.blockComment.begin",
			"schema.blockComment.end",
			"schema.lineComment",
			"schema.brackets",
			"schema.autoClosingPairs",
			"schema.autoClosingPairs.notIn",
			"schema.surroundingPairs",
			"schema.wordPattern",
			"schema.wordPattern.pattern",
			"schema.wordPattern.flags",
			"schema.wordPattern.flags.errorMessage",
			"schema.indentationRules",
			"schema.indentationRules.increaseIndentPattern",
			"schema.indentationRules.increaseIndentPattern.pattern",
			"schema.indentationRules.increaseIndentPattern.flags",
			"schema.indentationRules.increaseIndentPattern.errorMessage",
			"schema.indentationRules.decreaseIndentPattern",
			"schema.indentationRules.decreaseIndentPattern.pattern",
			"schema.indentationRules.decreaseIndentPattern.flags",
			"schema.indentationRules.decreaseIndentPattern.errorMessage",
			"schema.indentationRules.indentNextLinePattern",
			"schema.indentationRules.indentNextLinePattern.pattern",
			"schema.indentationRules.indentNextLinePattern.flags",
			"schema.indentationRules.indentNextLinePattern.errorMessage",
			"schema.indentationRules.unIndentedLinePattern",
			"schema.indentationRules.unIndentedLinePattern.pattern",
			"schema.indentationRules.unIndentedLinePattern.flags",
			"schema.indentationRules.unIndentedLinePattern.errorMessage",
			"schema.folding",
			"schema.folding.offSide",
			"schema.folding.markers",
			"schema.folding.markers.start",
			"schema.folding.markers.end"
		],
		"vs/workbench/api/electron-browser/mainThreadEditors": [
			"diffLeftRightLabel"
		],
		"vs/workbench/api/electron-browser/mainThreadMessageService": [
			"extensionSource",
			"defaultSource",
			"manageExtension",
			"cancel",
			"ok"
		],
		"vs/workbench/api/electron-browser/mainThreadSaveParticipant": [
			"timeout.formatOnSave",
			"codeActionsOnSave.didTimeout",
			"timeout.onWillSave",
			"saveParticipants"
		],
		"vs/workbench/api/electron-browser/mainThreadTask": [
			"task.label"
		],
		"vs/workbench/api/electron-browser/mainThreadWebview": [
			"errorMessage"
		],
		"vs/workbench/api/electron-browser/mainThreadWorkspace": [
			"folderStatusMessageAddSingleFolder",
			"folderStatusMessageAddMultipleFolders",
			"folderStatusMessageRemoveSingleFolder",
			"folderStatusMessageRemoveMultipleFolders",
			"folderStatusChangeFolder"
		],
		"vs/workbench/parts/performance/electron-browser/startupProfiler": [
			"prof.message",
			"prof.detail",
			"prof.restartAndFileIssue",
			"prof.restart",
			"prof.thanks",
			"prof.detail.restart",
			"prof.restart"
		],
		"vs/workbench/electron-browser/removedKeybindingsContribution": [
			"showDeprecatedWarningMessage",
			"Open Keybindings",
			"more information",
			"Do not show again"
		],
		"vs/workbench/parts/outline/electron-browser/outlinePanel": [
			"filter.placeholder",
			"find.placeholder",
			"collapse",
			"sortByPosition",
			"sortByName",
			"sortByKind",
			"followCur",
			"filterOnType",
			"no-editor",
			"loading",
			"too-many-symbols",
			"filter",
			"find"
		],
		"vs/base/node/processes": [
			"TaskRunner.UNC"
		],
		"vs/workbench/api/node/extHostWorkspace": [
			"updateerror"
		],
		"vs/workbench/api/node/extHostExtensionActivator": [
			"unknownDep",
			"failedDep1",
			"failedDep2",
			"activationError"
		],
		"vs/code/electron-main/windows": [
			"ok",
			"pathNotExistTitle",
			"pathNotExistDetail",
			{
				"key": "reopen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "wait",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "close",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"appStalled",
			"appStalledDetail",
			{
				"key": "reopen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "close",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"appCrashed",
			"appCrashedDetail",
			"open",
			"openFolder",
			"openFile",
			"ok",
			"workspaceOpenedMessage",
			"workspaceOpenedDetail",
			{
				"key": "openWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"openWorkspaceTitle",
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "doNotSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancel",
			"saveWorkspaceMessage",
			"saveWorkspaceDetail",
			{
				"key": "save",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"saveWorkspace"
		],
		"vs/platform/windows/electron-main/windowsService": [
			"accessibilityOptionsWindowTitle",
			"aboutDetail",
			"okButton",
			{
				"key": "copy",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/code/electron-main/auth": [
			"authRequire",
			"proxyauth"
		],
		"vs/code/electron-main/window": [
			"hiddenMenuBar"
		],
		"vs/platform/issue/electron-main/issueService": [
			"issueReporter",
			"processExplorer"
		],
		"vs/code/electron-main/menus": [
			{
				"key": "mFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mEdit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mSelection",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mGoto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mWindow",
			{
				"key": "mHelp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mAbout",
			"mServices",
			"mHide",
			"mHideOthers",
			"mShowAll",
			"miQuit",
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenRecent",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miSaveWorkspaceAs",
			{
				"key": "miAddFolderToWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAs",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miAutoSave",
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRevert",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miExit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSettings",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymapExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSnippets",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectColorTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectIconTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreferences",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReopenClosedEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMore",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miClearRecentOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFind",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFindInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplaceInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEmmetExpandAbbreviation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowEmmetCommands",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleLineComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBlockComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miMultiCursorAlt",
			"miMultiCursorCmd",
			"miMultiCursorCtrl",
			{
				"key": "miInsertCursorAbove",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorBelow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorAtEndOfEachLineSelected",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToNextFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToPreviousFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectHighlights",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectGrow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectShrink",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCommandPalette",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExplorer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSearch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSCM",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleOutput",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleDebugConsole",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleIntegratedTerminal",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMarker",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleFullScreen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miToggleZenMode",
			"miToggleCenteredLayout",
			{
				"key": "miToggleMenuBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSingleColumnEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miThreeColumnsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoRowsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miThreeRowsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoByTwoGridEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsRightEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsBottomEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleSidebar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTogglePanel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miHideActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleWordWrap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleMinimap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderWhitespace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderControlCharacters",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomIn",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomReset",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBack",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miForward",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusFirstGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusSecondGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusThirdGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusFourthGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusFifthGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusLeftGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusRightGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusAboveGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusBelowGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSwitchGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoTypeDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoImplementation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoLine",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartWithoutDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStopDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRestart Debugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenConfigurations",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddConfiguration",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOver",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepInto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miContinue",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConditionalBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInlineBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFunctionBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miLogPoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEnableAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDisableAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRemoveAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInstallAdditionalDebuggers",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mMinimize",
			"mZoom",
			"mBringToFront",
			{
				"key": "miSwitchWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mShowPreviousTab",
			"mShowNextTab",
			"mMoveTabToNewWindow",
			"mMergeAllWindows",
			{
				"key": "miToggleDevTools",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAccessibilityOptions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenProcessExplorerer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReportIssue",
				"comment": [
					"&& denotes a mnemonic",
					"Translate this to \"Report Issue in English\" in all languages please!"
				]
			},
			{
				"key": "miWelcome",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInteractivePlayground",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDocumentation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReleaseNotes",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miKeyboardShortcuts",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miIntroductoryVideos",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTipsAndTricks",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwitter",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUserVoice",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miLicense",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPrivacyStatement",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAbout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRunTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBuildTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRunningTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRestartTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTerminateTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConfigureTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConfigureBuildTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"accessibilityOptionsWindowTitle",
			"miCheckForUpdates",
			"miCheckingForUpdates",
			"miDownloadUpdate",
			"miDownloadingUpdate",
			"miInstallUpdate",
			"miInstallingUpdate",
			"miRestartToUpdate"
		],
		"vs/base/node/zip": [
			"invalid file",
			"incompleteExtract",
			"notFound"
		],
		"vs/base/common/errorMessage": [
			"stackTrace.format",
			"error.defaultMessage",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/platform/extensions/node/extensionValidator": [
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch"
		],
		"vs/editor/common/controller/cursor": [
			"corrupt.commands"
		],
		"vs/editor/browser/widget/diffReview": [
			"label.close",
			"no_lines",
			"one_line",
			"more_lines",
			{
				"key": "header",
				"comment": [
					"This is the ARIA label for a git diff header.",
					"A git diff header looks like this: @@ -154,12 +159,39 @@.",
					"That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.",
					"Variables 0 and 1 refer to the diff index out of total number of diffs.",
					"Variables 2 and 4 will be numbers (a line number).",
					"Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately."
				]
			},
			"blankLine",
			"equalLine",
			"insertLine",
			"deleteLine",
			"editor.action.diffReview.next",
			"editor.action.diffReview.prev"
		],
		"vs/editor/contrib/find/findWidget": [
			"label.find",
			"placeholder.find",
			"label.previousMatchButton",
			"label.nextMatchButton",
			"label.toggleSelectionFind",
			"label.closeButton",
			"label.replace",
			"placeholder.replace",
			"label.replaceButton",
			"label.replaceAllButton",
			"label.toggleReplaceButton",
			"title.matchesCountLimit",
			"label.matchesLocation",
			"label.noResults"
		],
		"vs/editor/contrib/referenceSearch/referencesController": [
			"labelLoading"
		],
		"vs/editor/contrib/referenceSearch/referencesModel": [
			"aria.oneReference",
			"aria.fileReferences.1",
			"aria.fileReferences.N",
			"aria.result.0",
			"aria.result.1",
			"aria.result.n1",
			"aria.result.nm"
		],
		"vs/editor/contrib/message/messageController": [
			"editor.readonly"
		],
		"vs/editor/contrib/referenceSearch/peekViewWidget": [
			"label.close"
		],
		"vs/editor/contrib/gotoError/gotoErrorWidget": [
			"title.wo_source",
			"editorMarkerNavigationError",
			"editorMarkerNavigationWarning",
			"editorMarkerNavigationInfo",
			"editorMarkerNavigationBackground"
		],
		"vs/editor/contrib/hover/modesContentHover": [
			"modesContentHover.loading"
		],
		"vs/editor/contrib/parameterHints/parameterHintsWidget": [
			"hint"
		],
		"vs/editor/contrib/codeAction/codeActionCommands": [
			"quickFixWithKb",
			"quickFix",
			"quickfix.trigger.label",
			"editor.action.quickFix.noneMessage",
			"editor.action.quickFix.noneMessage",
			"refactor.label",
			"editor.action.refactor.noneMessage",
			"source.label",
			"editor.action.source.noneMessage",
			"organizeImports.label",
			"editor.action.organize.noneMessage"
		],
		"vs/editor/contrib/referenceSearch/referencesWidget": [
			"referencesFailre",
			"referencesCount",
			"referenceCount",
			"missingPreviewMessage",
			"treeAriaLabel",
			"noResults",
			"peekView.alternateTitle",
			"peekViewTitleBackground",
			"peekViewTitleForeground",
			"peekViewTitleInfoForeground",
			"peekViewBorder",
			"peekViewResultsBackground",
			"peekViewResultsMatchForeground",
			"peekViewResultsFileForeground",
			"peekViewResultsSelectionBackground",
			"peekViewResultsSelectionForeground",
			"peekViewEditorBackground",
			"peekViewEditorGutterBackground",
			"peekViewResultsMatchHighlight",
			"peekViewEditorMatchHighlight",
			"peekViewEditorMatchHighlightBorder"
		],
		"vs/editor/contrib/rename/renameInputField": [
			"renameAriaLabel"
		],
		"vs/editor/contrib/suggest/suggestWidget": [
			"editorSuggestWidgetBackground",
			"editorSuggestWidgetBorder",
			"editorSuggestWidgetForeground",
			"editorSuggestWidgetSelectedBackground",
			"editorSuggestWidgetHighlightForeground",
			"readMore",
			"suggestionWithDetailsAriaLabel",
			"suggestionAriaLabel",
			"readLess",
			"suggestWidget.loading",
			"suggestWidget.noSuggestions",
			"suggestionAriaAccepted",
			"ariaCurrentSuggestionWithDetails",
			"ariaCurrentSuggestion"
		],
		"vs/editor/common/config/commonEditorConfig": [
			"editorConfigurationTitle",
			"fontFamily",
			"fontWeight",
			"fontSize",
			"lineHeight",
			"letterSpacing",
			"lineNumbers.off",
			"lineNumbers.on",
			"lineNumbers.relative",
			"lineNumbers.interval",
			"lineNumbers",
			"rulers",
			"wordSeparators",
			"tabSize",
			"tabSize.errorMessage",
			"insertSpaces",
			"insertSpaces.errorMessage",
			"detectIndentation",
			"roundedSelection",
			"scrollBeyondLastLine",
			"scrollBeyondLastColumn",
			"smoothScrolling",
			"minimap.enabled",
			"minimap.side",
			"minimap.showSlider",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"hover.enabled",
			"hover.delay",
			"hover.sticky",
			"find.seedSearchStringFromSelection",
			"find.autoFindInSelection",
			"find.globalFindClipboard",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"wrappingIndent",
			"mouseWheelScrollSensitivity",
			"multiCursorModifier.ctrlCmd",
			"multiCursorModifier.alt",
			{
				"key": "multiCursorModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"multiCursorMergeOverlapping",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"quickSuggestionsDelay",
			"parameterHints",
			"autoClosingBrackets",
			"formatOnType",
			"formatOnPaste",
			"autoIndent",
			"suggestOnTriggerCharacters",
			"acceptSuggestionOnEnter",
			"acceptSuggestionOnCommitCharacter",
			"snippetSuggestions.top",
			"snippetSuggestions.bottom",
			"snippetSuggestions.inline",
			"snippetSuggestions.none",
			"snippetSuggestions",
			"emptySelectionClipboard",
			"wordBasedSuggestions",
			"suggestSelection.first",
			"suggestSelection.recentlyUsed",
			"suggestSelection.recentlyUsedByPrefix",
			"suggestSelection",
			"suggestFontSize",
			"suggestLineHeight",
			"selectionHighlight",
			"occurrencesHighlight",
			"overviewRulerLanes",
			"overviewRulerBorder",
			"cursorBlinking",
			"mouseWheelZoom",
			"cursorStyle",
			"cursorWidth",
			"fontLigatures",
			"hideCursorInOverviewRuler",
			"renderWhitespace",
			"renderControlCharacters",
			"renderIndentGuides",
			"highlightActiveIndentGuide",
			"renderLineHighlight",
			"codeLens",
			"folding",
			"foldingStrategyAuto",
			"foldingStrategyIndentation",
			"foldingStrategy",
			"showFoldingControls",
			"matchBrackets",
			"glyphMargin",
			"useTabStops",
			"trimAutoWhitespace",
			"stablePeek",
			"dragAndDrop",
			"accessibilitySupport.auto",
			"accessibilitySupport.on",
			"accessibilitySupport.off",
			"accessibilitySupport",
			"showUnused",
			"links",
			"colorDecorators",
			"codeActions",
			"codeActionsOnSave.organizeImports",
			"codeActionsOnSave",
			"codeActionsOnSaveTimeout",
			"selectionClipboard",
			"sideBySide",
			"ignoreTrimWhitespace",
			"largeFileOptimizations",
			"renderIndicators"
		],
		"vs/base/browser/ui/findinput/findInputCheckboxes": [
			"caseDescription",
			"wordsDescription",
			"regexDescription"
		],
		"vs/workbench/browser/parts/editor/textEditor": [
			"editorLabelWithGroup"
		],
		"vs/workbench/parts/preferences/browser/preferencesRenderers": [
			"emptyUserSettingsHeader",
			"emptyWorkspaceSettingsHeader",
			"emptyFolderSettingsHeader",
			"reportSettingsSearchIssue",
			"newExtensionLabel",
			"editTtile",
			"replaceDefaultValue",
			"copyDefaultValue"
		],
		"vs/workbench/services/preferences/common/preferencesModels": [
			"commonlyUsed",
			"defaultKeybindingsHeader"
		],
		"vs/workbench/parts/preferences/browser/settingsLayout": [
			"commonlyUsed",
			"textEditor",
			"cursor",
			"find",
			"font",
			"format",
			"diffEditor",
			"minimap",
			"suggestions",
			"files",
			"textEditor",
			"workbench",
			"appearance",
			"editorManagement",
			"settings",
			"zenMode",
			"workbench",
			"window",
			"newWindow",
			"window",
			"features",
			"fileExplorer",
			"search",
			"debug",
			"scm",
			"extensionViewlet",
			"terminal",
			"problems",
			"application",
			"proxy",
			"keyboard",
			"update",
			"telemetry"
		],
		"vs/workbench/parts/preferences/browser/settingsTree": [
			"modifiedItemForeground",
			"workspace",
			"user",
			"extensions",
			"configured",
			"alsoConfiguredIn",
			"configuredIn",
			"editInSettingsJson",
			"settingRowAriaLabel",
			"groupRowAriaLabel"
		],
		"vs/workbench/services/preferences/common/keybindingsEditorModel": [
			"default",
			"user",
			"meta",
			"option"
		],
		"vs/base/common/keybindingLabels": [
			{
				"key": "ctrlKey",
				"comment": [
					"This is the short form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey",
				"comment": [
					"This is the short form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey",
				"comment": [
					"This is the short form for the Alt key on the keyboard"
				]
			},
			{
				"key": "windowsKey",
				"comment": [
					"This is the short form for the Windows key on the keyboard"
				]
			},
			{
				"key": "ctrlKey.long",
				"comment": [
					"This is the long form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey.long",
				"comment": [
					"This is the long form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey.long",
				"comment": [
					"This is the long form for the Alt key on the keyboard"
				]
			},
			{
				"key": "cmdKey.long",
				"comment": [
					"This is the long form for the Command key on the keyboard"
				]
			},
			{
				"key": "ctrlKey.long",
				"comment": [
					"This is the long form for the Control key on the keyboard"
				]
			},
			{
				"key": "shiftKey.long",
				"comment": [
					"This is the long form for the Shift key on the keyboard"
				]
			},
			{
				"key": "altKey.long",
				"comment": [
					"This is the long form for the Alt key on the keyboard"
				]
			},
			{
				"key": "windowsKey.long",
				"comment": [
					"This is the long form for the Windows key on the keyboard"
				]
			}
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"quickOpenAriaLabel",
			"treeAriaLabel"
		],
		"vs/workbench/browser/parts/quickinput/quickInputBox": [
			"quickInputBox.ariaLabel"
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"saveFileFirst",
			"genericSaveError"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"textDiffEditor",
			"readonlyEditorWithInputAriaLabel",
			"readonlyEditorAriaLabel",
			"editableEditorWithInputAriaLabel",
			"editableEditorAriaLabel",
			"navigate.next.label",
			"navigate.prev.label",
			"toggleIgnoreTrimWhitespace.label"
		],
		"vs/workbench/parts/files/electron-browser/views/explorerDecorationsProvider": [
			"label",
			"canNotResolve",
			"symbolicLlink"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"binaryEditor"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"fileReplaceChanges"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"more"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"notAvailable",
			"startDebugFirst"
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"copyValue",
			"copyAsExpression",
			"copy",
			"copyAll",
			"copyStackTrace"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"moreInfo",
			"debugAdapterCrash"
		],
		"vs/workbench/parts/debug/electron-browser/debugConfigurationManager": [
			"debugNoType",
			"selectDebug",
			"DebugConfig.failed",
			"workspace",
			"user settings"
		],
		"vs/workbench/parts/debug/common/debugSource": [
			"unknownSource"
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"treeAriaLabel"
		],
		"vs/workbench/parts/debug/electron-browser/breakpointWidget": [
			"breakpointWidgetLogMessagePlaceholder",
			"breakpointWidgetHitCountPlaceholder",
			"breakpointWidgetExpressionPlaceholder",
			"expression",
			"hitCount",
			"logMessage"
		],
		"vs/workbench/parts/debug/browser/exceptionWidget": [
			"debugExceptionWidgetBorder",
			"debugExceptionWidgetBackground",
			"exceptionThrownWithId",
			"exceptionThrown"
		],
		"vs/workbench/parts/debug/browser/linkDetector": [
			"fileLinkMac",
			"fileLink"
		],
		"vs/workbench/parts/comments/common/commentModel": [
			"noComments"
		],
		"vs/workbench/parts/comments/electron-browser/commentThreadWidget": [
			"label.expand"
		],
		"vs/workbench/parts/extensions/browser/dependenciesViewer": [
			"error",
			"Unknown Dependency"
		],
		"vs/workbench/parts/extensions/browser/extensionsWidgets": [
			"ratedByUsers",
			"ratedBySingleUser"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsList": [
			"viewExtensionDetailsAria"
		],
		"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page": [
			"welcomePage.vscode",
			{
				"key": "welcomePage.editingEvolved",
				"comment": [
					"Shown as subtitle on the Welcome page."
				]
			},
			"welcomePage.start",
			"welcomePage.newFile",
			"welcomePage.openFolder",
			"welcomePage.openFolder",
			"welcomePage.addWorkspaceFolder",
			"welcomePage.recent",
			"welcomePage.moreRecent",
			"welcomePage.noRecentFolders",
			"welcomePage.help",
			"welcomePage.keybindingsCheatsheet",
			"welcomePage.introductoryVideos",
			"welcomePage.tipsAndTricks",
			"welcomePage.productDocumentation",
			"welcomePage.gitHubRepository",
			"welcomePage.stackOverflow",
			"welcomePage.showOnStartup",
			"welcomePage.customize",
			"welcomePage.installExtensionPacks",
			"welcomePage.installExtensionPacksDescription",
			"welcomePage.moreExtensions",
			"welcomePage.installKeymapDescription",
			"welcomePage.installKeymapExtension",
			"welcomePage.others",
			"welcomePage.colorTheme",
			"welcomePage.colorThemeDescription",
			"welcomePage.learn",
			"welcomePage.showCommands",
			"welcomePage.showCommandsDescription",
			"welcomePage.interfaceOverview",
			"welcomePage.interfaceOverviewDescription",
			"welcomePage.interactivePlayground",
			"welcomePage.interactivePlaygroundDescription"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"terminal.integrated.a11yBlankLine",
			"terminal.integrated.a11yPromptLabel",
			"terminal.integrated.a11yTooMuchOutput",
			"yes",
			"terminal.rendererInAllNewTerminals",
			"no",
			"dontShowAgain",
			"terminal.slowRendering",
			"terminal.integrated.copySelection.noSelection",
			"terminal.integrated.exitedWithCode",
			"terminal.integrated.waitOnExit",
			"terminal.integrated.launchFailed",
			"terminal.integrated.launchFailedExtHost"
		],
		"vs/workbench/browser/parts/compositebar/compositeBarActions": [
			"largeNumberBadge",
			"badgeTitle",
			"additionalViews",
			"numberBadge",
			"manageExtension",
			"titleKeybinding",
			"hide",
			"keep",
			"toggle"
		],
		"vs/editor/contrib/find/simpleFindWidget": [
			"label.find",
			"placeholder.find",
			"label.previousMatchButton",
			"label.nextMatchButton",
			"label.closeButton"
		],
		"vs/workbench/browser/parts/compositebar/compositeBar": [
			"activityBarAriaLabel"
		],
		"vs/workbench/browser/parts/compositePart": [
			"ariaCompositeToolbarLabel",
			"titleTooltip"
		],
		"vs/workbench/browser/parts/menubar/menubar.contribution": [
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenRecent",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddFolderToWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miSaveWorkspaceAs",
			{
				"key": "miSave",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAs",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSaveAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miAutoSave",
			{
				"key": "miPreferences",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRevert",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseFolder",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCloseWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miExit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUndo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRedo",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopy",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPaste",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFind",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFindInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReplaceInFiles",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleLineComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBlockComment",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEmmetExpandAbbreviation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miShowEmmetCommands",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectAll",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectGrow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSmartSelectShrink",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCopyLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveLinesDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miMultiCursorAlt",
			{
				"key": "miInsertCursorAbove",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorBelow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInsertCursorAtEndOfEachLineSelected",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToNextFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddSelectionToPreviousFindMatch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectHighlights",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReopenClosedEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMore",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miClearRecentOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCommandPalette",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExplorer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSearch",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewSCM",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miViewExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleOutput",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleDebugConsole",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleIntegratedTerminal",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMarker",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleFullScreen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"miToggleZenMode",
			"miToggleCenteredLayout",
			{
				"key": "miToggleMenuBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleSidebar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMoveSidebarLeftRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleStatusbar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleActivityBar",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTogglePanel",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleWordWrap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleMinimap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderWhitespace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleRenderControlCharacters",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomIn",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miZoomReset",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorUp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorDown",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorLeft",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSplitEditorRight",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSingleColumnEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miCenteredEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miThreeColumnsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoRowsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miThreeRowsEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoByTwoGridEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsRightEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwoColumnsBottomEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleEditorLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBack",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miForward",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousEditorInGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNextGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPreviousGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusLeftGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusRightGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusAboveGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFocusBelowGroup",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoSymbolInWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoDefinition",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoImplementation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miGotoLine",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStartWithoutDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStopDebugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRestart Debugging",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenConfigurations",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAddConfiguration",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOver",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepInto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miStepOut",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miContinue",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConditionalBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInlineBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miFunctionBreakpoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miLogPoint",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miEnableAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDisableAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRemoveAllBreakpoints",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRunTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miBuildTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRunningTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRestartTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTerminateTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConfigureTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miConfigureBuildTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSettings",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymap",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenKeymapExtensions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenSnippets",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectColorTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miSelectIconTheme",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miWelcome",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miInteractivePlayground",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miDocumentation",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReleaseNotes",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miKeyboardShortcuts",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miIntroductoryVideos",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTipsAndTricks",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwitter",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUserVoice",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReportIssue",
				"comment": [
					"&& denotes a mnemonic",
					"Translate this to \"Report Issue in English\" in all languages please!"
				]
			},
			{
				"key": "miLicense",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPrivacyStatement",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miToggleDevTools",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenProcessExplorerer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAccessibilityOptions",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miAbout",
				"comment": [
					"&& denotes a mnemonic"
				]
			}
		],
		"vs/workbench/browser/parts/editor/editorGroupView": [
			"araLabelGroupActions",
			"closeGroupAction",
			"emptyEditorGroup",
			"editorOpenError"
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"textEditor",
			"textDiffEditor",
			"binaryDiffEditor",
			"sideBySideEditor",
			"groupOnePicker",
			"allEditorsPicker",
			"view",
			"file",
			"splitUp",
			"splitDown",
			"splitLeft",
			"splitRight",
			"close",
			"close",
			"closeOthers",
			"closeRight",
			"closeAllSaved",
			"closeAll",
			"keepOpen",
			"splitUp",
			"splitDown",
			"splitLeft",
			"splitRight",
			"toggleInlineView",
			"showOpenedEditors",
			"closeAll",
			"closeAllSaved",
			"splitEditorRight",
			"splitEditorDown",
			"splitEditorDown",
			"splitEditorRight",
			"close",
			"closeAll",
			"close",
			"closeAll",
			"keepEditor",
			"closeEditorsInGroup",
			"closeSavedEditors",
			"closeOtherEditors",
			"closeRightEditors"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"first.chord",
			"missing.chord"
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"openTasksConfiguration",
			"openLaunchConfiguration",
			"open",
			"openTasksConfiguration",
			"openLaunchConfiguration",
			"saveAndRetry",
			"saveAndRetry",
			"open",
			"errorUnknownKey",
			"errorInvalidWorkspaceConfigurationApplication",
			"errorInvalidFolderConfiguration",
			"errorInvalidUserTarget",
			"errorInvalidWorkspaceTarget",
			"errorInvalidFolderTarget",
			"errorNoWorkspaceOpened",
			"errorInvalidTaskConfiguration",
			"errorInvalidLaunchConfiguration",
			"errorInvalidConfiguration",
			"errorInvalidConfigurationWorkspace",
			"errorInvalidConfigurationFolder",
			"errorTasksConfigurationFileDirty",
			"errorLaunchConfigurationFileDirty",
			"errorConfigurationFileDirty",
			"errorConfigurationFileDirtyWorkspace",
			"errorConfigurationFileDirtyFolder",
			"userTarget",
			"workspaceTarget",
			"folderTarget"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"netVersionError",
			"installNet",
			"neverShowAgain",
			"enospcError",
			"learnMore",
			"neverShowAgain",
			"fileInvalidPath",
			"fileIsDirectoryError",
			"fileNotModifiedError",
			"fileTooLargeForHeapError",
			"fileTooLargeError",
			"fileNotFoundError",
			"fileNotFoundError",
			"fileIsDirectoryError",
			"fileTooLargeForHeapError",
			"fileTooLargeError",
			"fileBinaryError",
			"filePermission",
			"filePermission",
			"fileExists",
			"fileModifiedError",
			"fileReadOnlyError",
			"fileMoveConflict",
			"unableToMoveCopyError",
			"binFailed",
			"trashFailed",
			"deleteFailed"
		],
		"vs/workbench/services/configurationResolver/node/variableResolver": [
			"missingEnvVarName",
			"configNotFound",
			"configNoString",
			"missingConfigName",
			"noValueForCommand",
			"canNotFindFolder",
			"canNotResolveWorkspaceFolderMultiRoot",
			"canNotResolveWorkspaceFolder",
			"canNotResolveFile",
			"canNotResolveLineNumber",
			"canNotResolveSelectedText"
		],
		"vs/workbench/services/textfile/common/textFileService": [
			"files.backup.failSave"
		],
		"vs/workbench/browser/parts/notifications/notificationsActions": [
			"clearNotification",
			"clearNotifications",
			"hideNotificationsCenter",
			"expandNotification",
			"collapseNotification",
			"configureNotification",
			"copyNotification"
		],
		"vs/workbench/parts/tasks/common/taskDefinitionRegistry": [
			"TaskDefinition.description",
			"TaskDefinition.properties",
			"TaskTypeConfiguration.noType",
			"TaskDefinitionExtPoint"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon": [
			"JsonSchema.options",
			"JsonSchema.options.cwd",
			"JsonSchema.options.env",
			"JsonSchema.shellConfiguration",
			"JsonSchema.shell.executable",
			"JsonSchema.shell.args",
			"JsonSchema.command",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.taskName",
			"JsonSchema.command",
			"JsonSchema.tasks.args",
			"JsonSchema.tasks.windows",
			"JsonSchema.tasks.mac",
			"JsonSchema.tasks.linux",
			"JsonSchema.tasks.suppressTaskName",
			"JsonSchema.tasks.showOutput",
			"JsonSchema.echoCommand",
			"JsonSchema.tasks.watching.deprecation",
			"JsonSchema.tasks.watching",
			"JsonSchema.tasks.background",
			"JsonSchema.tasks.promptOnClose",
			"JsonSchema.tasks.build",
			"JsonSchema.tasks.test",
			"JsonSchema.tasks.matchers",
			"JsonSchema.command",
			"JsonSchema.args",
			"JsonSchema.showOutput",
			"JsonSchema.watching.deprecation",
			"JsonSchema.watching",
			"JsonSchema.background",
			"JsonSchema.promptOnClose",
			"JsonSchema.echoCommand",
			"JsonSchema.suppressTaskName",
			"JsonSchema.taskSelector",
			"JsonSchema.matchers",
			"JsonSchema.tasks"
		],
		"vs/editor/contrib/snippet/snippetVariables": [
			"Sunday",
			"Monday",
			"Tuesday",
			"Wednesday",
			"Thursday",
			"Friday",
			"Saturday",
			"SundayShort",
			"MondayShort",
			"TuesdayShort",
			"WednesdayShort",
			"ThursdayShort",
			"FridayShort",
			"SaturdayShort",
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December",
			"JanuaryShort",
			"FebruaryShort",
			"MarchShort",
			"AprilShort",
			"MayShort",
			"JuneShort",
			"JulyShort",
			"AugustShort",
			"SeptemberShort",
			"OctoberShort",
			"NovemberShort",
			"DecemberShort"
		],
		"vs/workbench/parts/feedback/electron-browser/feedback": [
			"sendFeedback",
			"label.sendASmile",
			"close",
			"patchedVersion1",
			"patchedVersion2",
			"sentiment",
			"smileCaption",
			"smileCaption",
			"frownCaption",
			"frownCaption",
			"other ways to contact us",
			"submit a bug",
			"request a missing feature",
			"tell us why?",
			"feedbackTextInput",
			"showFeedback",
			"tweet",
			"tweetFeedback",
			"character left",
			"characters left",
			"feedbackSending",
			"feedbackSent",
			"feedbackSendingError"
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesEditor": [
			"releaseNotesInputName",
			"unassigned"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"debugAdapterBinNotFound",
			{
				"key": "debugAdapterCannotDetermineExecutable",
				"comment": [
					"Adapter executable file not found"
				]
			},
			"unableToLaunchDebugAdapter",
			"unableToLaunchDebugAdapterNoArgs"
		],
		"vs/workbench/services/extensions/electron-browser/extensionService": [
			"extensionsDisabled",
			"Reload",
			"extensionHostProcess.crash",
			"extensionHostProcess.unresponsiveCrash",
			"devTools",
			"restart",
			"overwritingExtension",
			"extensionUnderDevelopment",
			"overwritingExtension",
			"extensionCache.invalid",
			"reloadWindow"
		],
		"vs/workbench/electron-browser/window": [
			"undo",
			"redo",
			"cut",
			"copy",
			"paste",
			"selectAll",
			"runningAsRoot"
		],
		"vs/editor/common/services/modelServiceImpl": [
			"diagAndSourceMultiline",
			"diagAndSource"
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"integrity.prompt",
			"integrity.moreInformation",
			"integrity.dontShowAgain"
		],
		"vs/workbench/services/crashReporter/electron-browser/crashReporterService": [
			"telemetryConfigurationTitle",
			"telemetry.enableCrashReporting"
		],
		"vs/platform/extensionManagement/common/extensionEnablementService": [
			"noWorkspace"
		],
		"vs/workbench/services/themes/electron-browser/workbenchThemeService": [
			"error.cannotloadtheme",
			"colorTheme",
			"colorThemeError",
			"iconTheme",
			"noIconThemeDesc",
			"iconThemeError",
			"workbenchColors",
			"editorColors.comments",
			"editorColors.strings",
			"editorColors.keywords",
			"editorColors.numbers",
			"editorColors.types",
			"editorColors.functions",
			"editorColors.variables",
			"editorColors.textMateRules",
			"editorColors"
		],
		"vs/workbench/services/textMate/electron-browser/TMSyntax": [
			"invalid.language",
			"invalid.scopeName",
			"invalid.path.0",
			"invalid.injectTo",
			"invalid.embeddedLanguages",
			"invalid.tokenTypes",
			"invalid.path.1",
			"no-tm-grammar",
			"too many characters"
		],
		"vs/workbench/services/dialogs/electron-browser/dialogService": [
			{
				"key": "yesButton",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"cancelButton"
		],
		"vs/editor/contrib/documentSymbols/outlineTree": [
			"title.template",
			"provider",
			"1.problem",
			"N.problem",
			"deep.problem",
			"Array",
			"Boolean",
			"Class",
			"Constant",
			"Constructor",
			"Enum",
			"EnumMember",
			"Event",
			"Field",
			"File",
			"Function",
			"Interface",
			"Key",
			"Method",
			"Module",
			"Namespace",
			"Null",
			"Number",
			"Object",
			"Operator",
			"Package",
			"Property",
			"String",
			"Struct",
			"TypeParameter",
			"Variable"
		],
		"vs/code/electron-main/menubar": [
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mEdit",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miRecent",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mSelection",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mView",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mLayout",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mGoto",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mDebug",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mTask",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mWindow",
			{
				"key": "mPreferences",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "mHelp",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mAbout",
			"mServices",
			"mHide",
			"mHideOthers",
			"mShowAll",
			"miQuit",
			{
				"key": "miNewFile",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miNewWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenWorkspace",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReopenClosedEditor",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miMore",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miClearRecentOpen",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miTwitter",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miUserVoice",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miReportIssue",
				"comment": [
					"&& denotes a mnemonic",
					"Translate this to \"Report Issue in English\" in all languages please!"
				]
			},
			{
				"key": "miLicense",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miPrivacyStatement",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			{
				"key": "miOpenProcessExplorerer",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mMinimize",
			"mZoom",
			"mBringToFront",
			{
				"key": "miSwitchWindow",
				"comment": [
					"&& denotes a mnemonic"
				]
			},
			"mShowPreviousTab",
			"mShowNextTab",
			"mMoveTabToNewWindow",
			"mMergeAllWindows",
			"miCheckForUpdates",
			"miCheckingForUpdates",
			"miDownloadUpdate",
			"miDownloadingUpdate",
			"miInstallUpdate",
			"miInstallingUpdate",
			"miRestartToUpdate"
		],
		"vs/workbench/browser/parts/editor/resourceViewer": [
			"sizeB",
			"sizeKB",
			"sizeMB",
			"sizeGB",
			"sizeTB",
			"largeImageError",
			"resourceOpenExternalButton",
			"nativeFileTooLargeError",
			"nativeBinaryError",
			"openAsText",
			"zoom.action.fit.label",
			"imgMeta"
		],
		"vs/base/browser/ui/selectBox/selectBoxCustom": [
			"selectAriaOption"
		],
		"vs/workbench/parts/debug/node/debugger": [
			"launch.config.comment1",
			"launch.config.comment2",
			"launch.config.comment3",
			"debugType",
			"debugTypeNotRecognised",
			"node2NotSupported",
			"debugName",
			"debugRequest",
			"debugServer",
			"debugPrelaunchTask",
			"debugPostDebugTask",
			"debugWindowsConfiguration",
			"debugOSXConfiguration",
			"debugLinuxConfiguration",
			"deprecatedVariables"
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debug.terminal.title"
		],
		"vs/workbench/parts/debug/common/debugSchemas": [
			"vscode.extension.contributes.debuggers",
			"vscode.extension.contributes.debuggers.type",
			"vscode.extension.contributes.debuggers.label",
			"vscode.extension.contributes.debuggers.program",
			"vscode.extension.contributes.debuggers.args",
			"vscode.extension.contributes.debuggers.runtime",
			"vscode.extension.contributes.debuggers.runtimeArgs",
			"vscode.extension.contributes.debuggers.variables",
			"vscode.extension.contributes.debuggers.initialConfigurations",
			"vscode.extension.contributes.debuggers.languages",
			"vscode.extension.contributes.debuggers.adapterExecutableCommand",
			"vscode.extension.contributes.debuggers.configurationSnippets",
			"vscode.extension.contributes.debuggers.configurationAttributes",
			"vscode.extension.contributes.debuggers.windows",
			"vscode.extension.contributes.debuggers.windows.runtime",
			"vscode.extension.contributes.debuggers.osx",
			"vscode.extension.contributes.debuggers.osx.runtime",
			"vscode.extension.contributes.debuggers.linux",
			"vscode.extension.contributes.debuggers.linux.runtime",
			"vscode.extension.contributes.breakpoints",
			"vscode.extension.contributes.breakpoints.language",
			"app.launch.json.title",
			"app.launch.json.version",
			"app.launch.json.configurations",
			"app.launch.json.compounds",
			"app.launch.json.compound.name",
			"useUniqueNames",
			"app.launch.json.compound.name",
			"app.launch.json.compound.folder",
			"app.launch.json.compounds.configurations"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler": [
			"terminalLinkHandler.followLinkAlt",
			"terminalLinkHandler.followLinkCmd",
			"terminalLinkHandler.followLinkCtrl"
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"araLabelTabActions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"metadataDiff"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"singleSelectionRange",
			"singleSelection",
			"multiSelectionRange",
			"multiSelection",
			"endOfLineLineFeed",
			"endOfLineCarriageReturnLineFeed",
			"tabFocusModeEnabled",
			"screenReaderDetected",
			"screenReaderDetectedExtra",
			"disableTabMode",
			"gotoLine",
			"selectIndentation",
			"selectEncoding",
			"selectEOL",
			"selectLanguageMode",
			"fileInfo",
			"spacesSize",
			{
				"key": "tabSize",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"showLanguageExtensions",
			"changeMode",
			"noEditor",
			"languageDescription",
			"languageDescriptionConfigured",
			"languagesPicks",
			"configureModeSettings",
			"configureAssociationsExt",
			"autoDetect",
			"pickLanguage",
			"currentAssociation",
			"pickLanguageToConfigure",
			"changeIndentation",
			"noEditor",
			"noWritableCodeEditor",
			"indentView",
			"indentConvert",
			"pickAction",
			"changeEndOfLine",
			"noEditor",
			"noWritableCodeEditor",
			"pickEndOfLine",
			"changeEncoding",
			"noEditor",
			"noFileEditor",
			"saveWithEncoding",
			"reopenWithEncoding",
			"saveWithEncoding",
			"reopenWithEncoding",
			"pickAction",
			"guessedEncoding",
			"pickEncodingForReopen",
			"pickEncodingForSave",
			"screenReaderDetectedExplanation.title",
			"screenReaderDetectedExplanation.question",
			"screenReaderDetectedExplanation.answerYes",
			"screenReaderDetectedExplanation.answerNo",
			"screenReaderDetectedExplanation.body1",
			"screenReaderDetectedExplanation.body2"
		],
		"vs/workbench/browser/parts/notifications/notificationsViewer": [
			"notificationActions",
			"notificationSource"
		],
		"vs/workbench/services/textMate/electron-browser/TMGrammars": [
			"vscode.extension.contributes.grammars",
			"vscode.extension.contributes.grammars.language",
			"vscode.extension.contributes.grammars.scopeName",
			"vscode.extension.contributes.grammars.path",
			"vscode.extension.contributes.grammars.embeddedLanguages",
			"vscode.extension.contributes.grammars.tokenTypes",
			"vscode.extension.contributes.grammars.injectTo"
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"jsonParseFail",
			"fileReadFail",
			"jsonsParseReportErrors",
			"missingNLSKey",
			"notSemver",
			"extensionDescription.empty",
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.main3"
		],
		"vs/workbench/services/extensions/electron-browser/extensionHost": [
			"extensionHostProcess.startupFailDebug",
			"extensionHostProcess.startupFail",
			"reloadWindow",
			"extensionHostProcess.error"
		],
		"vs/workbench/services/themes/electron-browser/colorThemeData": [
			"error.cannotparsejson",
			{
				"key": "error.invalidformat.colors",
				"comment": [
					"{0} will be replaced by a path. Values in quotes should not be translated."
				]
			},
			{
				"key": "error.invalidformat.tokenColors",
				"comment": [
					"{0} will be replaced by a path. Values in quotes should not be translated."
				]
			},
			"error.plist.invalidformat",
			"error.cannotparse",
			"error.cannotload"
		],
		"vs/workbench/services/themes/common/fileIconThemeSchema": [
			"schema.folderExpanded",
			"schema.folder",
			"schema.file",
			"schema.folderNames",
			"schema.folderName",
			"schema.folderNamesExpanded",
			"schema.folderNameExpanded",
			"schema.fileExtensions",
			"schema.fileExtension",
			"schema.fileNames",
			"schema.fileName",
			"schema.languageIds",
			"schema.languageId",
			"schema.fonts",
			"schema.id",
			"schema.src",
			"schema.font-path",
			"schema.font-format",
			"schema.font-weight",
			"schema.font-sstyle",
			"schema.font-size",
			"schema.iconDefinitions",
			"schema.iconDefinition",
			"schema.iconPath",
			"schema.fontCharacter",
			"schema.fontColor",
			"schema.fontSize",
			"schema.fontId",
			"schema.light",
			"schema.highContrast",
			"schema.hidesExplorerArrows"
		],
		"vs/workbench/services/themes/electron-browser/colorThemeStore": [
			"vscode.extension.contributes.themes",
			"vscode.extension.contributes.themes.id",
			"vscode.extension.contributes.themes.label",
			"vscode.extension.contributes.themes.uiTheme",
			"vscode.extension.contributes.themes.path",
			"reqarray",
			"reqpath",
			"invalid.path.1"
		],
		"vs/workbench/services/themes/electron-browser/fileIconThemeStore": [
			"vscode.extension.contributes.iconThemes",
			"vscode.extension.contributes.iconThemes.id",
			"vscode.extension.contributes.iconThemes.label",
			"vscode.extension.contributes.iconThemes.path",
			"reqarray",
			"reqpath",
			"reqid",
			"invalid.path.1"
		],
		"vs/workbench/services/themes/electron-browser/fileIconThemeData": [
			"error.cannotparseicontheme"
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/workbench/api/node/extHostTreeViews": [
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.duplicateElement"
		],
		"vs/workbench/api/node/extHostProgress": [
			"extensionSource"
		],
		"vs/workbench/api/node/extHostTask": [
			"task.label"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debug.terminal.title"
		],
		"vs/workbench/parts/debug/node/terminals": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"araLabelEditorActions",
			"draggedEditorGroup"
		],
		"vs/editor/contrib/indentation/indentation": [
			"indentationToSpaces",
			"indentationToTabs",
			"configuredTabSize",
			{
				"key": "selectTabWidth",
				"comment": [
					"Tab corresponds to the tab key"
				]
			},
			"indentUsingTabs",
			"indentUsingSpaces",
			"detectIndentation",
			"editor.reindentlines",
			"editor.reindentselectedlines"
		],
		"vs/base/common/jsonErrorMessages": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		]
	},
	"messages": {
		"vs/code/electron-main/main": [
			"Another instance of {0} is running but not responding",
			"Please close all other instances and try again.",
			"A second instance of {0} is already running as administrator.",
			"Please close the other instance and try again.",
			"&&Close"
		],
		"vs/code/node/cliProcessMain": [
			"Extension '{0}' not found.",
			"Extension '{0}' is not installed.",
			"Make sure you use the full extension ID, including the publisher, eg: {0}",
			"Extension '{0}' was successfully installed!",
			"Cancelled installing Extension '{0}'.",
			"Extension '{0}' is already installed.",
			"Found '{0}' in the marketplace.",
			"Installing...",
			"Extension '{0}' v{1} was successfully installed!",
			"Cancelled installing Extension '{0}'.",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled!"
		],
		"vs/code/electron-browser/issue/issueReporterMain": [
			"hide",
			"show",
			"Preview on GitHub",
			"Loading data...",
			"GitHub query limit exceeded. Please wait.",
			"Similar issues",
			"Open",
			"Closed",
			"Open",
			"Closed",
			"No similar issues found",
			"Settings Search Issue",
			"Bug Report",
			"Feature Request",
			"Performance Issue",
			"Steps to Reproduce",
			"Share the steps needed to reliably reproduce the problem. Please include actual and expected results. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"Steps to Reproduce",
			"When did this performance issue happen? Does it occur on startup or after a specific series of actions? We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"Description",
			"Please describe the feature you would like to see. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"Expected Results",
			"Please list the results that you were expecting to see when you searched with this query. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"We have written the needed data into your clipboard because it was too large to send. Please paste.",
			"Extensions are disabled"
		],
		"vs/code/electron-browser/processExplorer/processExplorerMain": [
			"CPU %",
			"Memory (MB)",
			"pid",
			"Name",
			"Kill Process",
			"Force Kill Process",
			"Copy",
			"Copy All",
			"Copy All"
		],
		"vs/workbench/services/configuration/common/configurationExtensionPoint": [
			"A summary of the settings. This label will be used in the settings file as separating comment.",
			"Description of the configuration properties.",
			"Application specific configuration, which can be configured only in User settings.",
			"Window specific configuration, which can be configured in the User or Workspace settings.",
			"Resource specific configuration, which can be configured in the User, Workspace or Folder settings.",
			"Scope in which the configuration is applicable. Available scopes are `window` and `resource`.",
			"Contributes default editor configuration settings by language.",
			"Contributes configuration settings.",
			"'configuration.title' must be a string",
			"'configuration.properties' must be an object",
			"'configuration.property' must be an object",
			"'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point.",
			"List of folders to be loaded in the workspace.",
			"A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.",
			"An optional name for the folder. ",
			"URI of the folder",
			"An optional name for the folder. ",
			"Workspace settings",
			"Workspace launch configurations",
			"Workspace extensions",
			"Unknown workspace configuration property"
		],
		"vs/workbench/services/actions/electron-browser/menusExtensionPoint": [
			"menu items must be an array",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to execute. The command must be declared in the 'commands'-section",
			"Identifier of an alternative command to execute. The command must be declared in the 'commands'-section",
			"Condition which must be true to show this item",
			"Group into which this command belongs",
			"Contributes menu items to the editor",
			"The Command Palette",
			"The touch bar (macOS only)",
			"The editor title menu",
			"The editor context menu",
			"The file explorer context menu",
			"The editor tabs context menu",
			"The debug callstack context menu",
			"The Source Control title menu",
			"The Source Control menu",
			"The Source Control resource group context menu",
			"The Source Control resource state context menu",
			"The contributed view title menu",
			"The contributed view item context menu",
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `icon` can be omitted or must be either a string or a literal like `{dark, light}`",
			"property `{0}` is mandatory and must be of type `string` or `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"properties `{0}` and `{1}` are mandatory and must be of type `string`",
			"Identifier of the command to execute",
			"Title by which the command is represented in the UI",
			"(Optional) Category string by the command is grouped in the UI",
			"(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration",
			"Icon path when a light theme is used",
			"Icon path when a dark theme is used",
			"Contributes commands to the command palette.",
			"Command `{0}` appears multiple times in the `commands` section.",
			"`{0}` is not a valid menu identifier",
			"Menu item references a command `{0}` which is not defined in the 'commands' section.",
			"Menu item references an alt-command `{0}` which is not defined in the 'commands' section.",
			"Menu item references the same command as default and alt-command"
		],
		"vs/workbench/api/browser/viewsContainersExtensionPoint": [
			"Unique id used to identify the container in which views can be contributed using 'views' contribution point",
			"Human readable string used to render the container",
			"Path to the container icon. Icons are 24x24 centered on a 50x40 block and have a fill color of 'rgb(215, 218, 224)' or '#d7dae0'. It is recommended that icons be in SVG, though any image file type is accepted.",
			"Contributes views containers to the editor",
			"Contribute views containers to Activity Bar",
			"Test",
			"views containers must be an array",
			"property `{0}` is mandatory and must be of type `string`. Only alphanumeric characters, '_', and '-' are allowed.",
			"property `{0}` is mandatory and must be of type `string`. Only alphanumeric characters, '_', and '-' are allowed.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"Show {0}",
			"View"
		],
		"vs/workbench/api/browser/viewsExtensionPoint": [
			"Identifier of the view. Use this to register a data provider through `vscode.window.registerTreeDataProviderForView` API. Also to trigger activating your extension by registering `onView:${id}` event to `activationEvents`.",
			"The human-readable name of the view. Will be shown",
			"Condition which must be true to show this view",
			"Contributes views to the editor",
			"Contributes views to Explorer container in the Activity bar",
			"Contributes views to Debug container in the Activity bar",
			"Contributes views to SCM container in the Activity bar",
			"Contributes views to Test container in the Activity bar",
			"Contributes views to contributed views container",
			"View container '{0}' does not exist and all views registered to it will be added to 'Explorer'.",
			"Cannot register multiple views with same id `{0}` in the view container `{1}`",
			"A view with id `{0}` is already registered in the view container `{1}`",
			"views must be an array",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`"
		],
		"vs/workbench/parts/localizations/electron-browser/localizations.contribution": [
			"Would you like to change VS Code's UI language to {0} and restart?",
			"Would you like to restart VS Code to activate the language pack that was just installed?",
			"Yes",
			"No",
			"Don't Show Again",
			"In the near future, VS Code will only support language packs in the form of Marketplace extensions. Please install the '{0}' extension in order to continue to use the currently configured language. ",
			"Install",
			"More Information...",
			"Don't Show Again",
			"The UI Language to use.",
			"Contributes localizations to the editor",
			"Id of the language into which the display strings are translated.",
			"Name of the language in English.",
			"Name of the language in contributed language.",
			"List of translations associated to the language.",
			"Id of VS Code or Extension for which this translation is contributed to. Id of VS Code is always `vscode` and of extension should be in format `publisherId.extensionName`.",
			"Id should be `vscode` or in format `publisherId.extensionName` for translating VS code or an extension respectively.",
			"A relative path to a file containing translations for the language."
		],
		"vs/workbench/browser/actions/toggleActivityBarVisibility": [
			"Toggle Activity Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleStatusbarVisibility": [
			"Toggle Status Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarVisibility": [
			"Toggle Side Bar Visibility",
			"View"
		],
		"vs/workbench/browser/actions/toggleSidebarPosition": [
			"Toggle Side Bar Position",
			"View"
		],
		"vs/workbench/browser/actions/toggleEditorLayout": [
			"Toggle Vertical/Horizontal Editor Layout",
			"View"
		],
		"vs/workbench/browser/actions/toggleZenMode": [
			"Toggle Zen Mode",
			"View"
		],
		"vs/workbench/browser/actions/toggleCenteredLayout": [
			"Toggle Centered Layout",
			"View"
		],
		"vs/workbench/browser/actions/toggleTabsVisibility": [
			"Toggle Tab Visibility",
			"View"
		],
		"vs/workbench/parts/preferences/electron-browser/preferences.contribution": [
			"Default Preferences Editor",
			"Settings Editor 2",
			"Keybindings Editor",
			"Preferences"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditorContribution": [
			"Define Keybinding",
			"You won't be able to produce this key combination under your current keyboard layout.",
			"**{0}** for your current keyboard layout (**{1}** for US standard).",
			"**{0}** for your current keyboard layout."
		],
		"vs/workbench/parts/logs/electron-browser/logs.contribution": [
			"Log (Main)",
			"Log (Shared)",
			"Log (Window)",
			"Log (Extension Host)",
			"Developer"
		],
		"vs/workbench/parts/quickopen/browser/quickopen.contribution": [
			"View",
			"Show and Run Commands",
			"Go to Line",
			"Go to Line",
			"Go to Symbol in File",
			"Go to Symbol in File by Category",
			"Show Help",
			"Open View"
		],
		"vs/workbench/browser/parts/editor/editorPicker": [
			"{0}, editor group picker",
			"No matching opened editor found in group",
			"List of opened editors is currently empty in group",
			"No matching opened editor found",
			"List of opened editors is currently empty"
		],
		"vs/workbench/parts/files/electron-browser/fileActions.contribution": [
			"File",
			"Reveal in Side Bar",
			"Use your changes and overwrite disk contents",
			"Discard your changes and revert to content on disk",
			"Copy Path of Active File",
			"Save All in Group",
			"Save All Files",
			"Revert File",
			"Compare Active File with Saved",
			"Close Editor",
			"View",
			"Open to the Side",
			"Reveal in Explorer",
			"Reveal in Finder",
			"Open Containing Folder",
			"Copy Path",
			"Revert File",
			"Save All",
			"Compare with Saved",
			"Compare with Selected",
			"Select for Compare",
			"Compare Selected",
			"Close",
			"Close Others",
			"Close Saved",
			"Close All",
			"Delete Permanently",
			"New File",
			"Open File..."
		],
		"vs/workbench/parts/files/electron-browser/explorerViewlet": [
			"Folders"
		],
		"vs/workbench/parts/files/electron-browser/files.contribution": [
			"Show Explorer",
			"Explorer",
			"View",
			"Text File Editor",
			"Binary File Editor",
			"Files",
			"Configure glob patterns for excluding files and folders. For example, the files explorer decides which files and folders to show or hide based on this setting.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Configure file associations to languages (e.g. \"*.extension\": \"html\"). These have precedence over the default associations of the languages installed.",
			"The default character set encoding to use when reading and writing files. This setting can be configured per language too.",
			"When enabled, will attempt to guess the character set encoding when opening files. This setting can be configured per language too.",
			"The default end of line character. Use \\n for LF and \\r\\n for CRLF.",
			"When enabled, will trim trailing whitespace when saving a file.",
			"When enabled, insert a final new line at the end of the file when saving it.",
			"When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
			"A dirty file is never automatically saved.",
			"A dirty file is automatically saved after the configured 'files.autoSaveDelay'.",
			"A dirty file is automatically saved when the editor loses focus.",
			"A dirty file is automatically saved when the window loses focus.",
			"Controls auto save of dirty files. Accepted values:  '{0}', '{1}', '{2}' (editor loses focus), '{3}' (window loses focus). If set to '{4}', you can configure the delay in 'files.autoSaveDelay'.",
			"Controls the delay in ms after which a dirty file is saved automatically. Only applies when 'files.autoSave' is set to '{0}'",
			"Configure glob patterns of file paths to exclude from file watching. Patterns must match on absolute paths (i.e. prefix with ** or the full path to match properly). Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.",
			"Disable hot exit.",
			"Hot exit will be triggered when the application is closed, that is when the last window is closed on Windows/Linux or when the workbench.action.quit command is triggered (command palette, keybinding, menu). All windows with backups will be restored upon next launch.",
			"Hot exit will be triggered when the application is closed, that is when the last window is closed on Windows/Linux or when the workbench.action.quit command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. To restore folder windows as they were before shutdown set \"window.restoreWindows\" to \"all\".",
			"Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",
			"Use the new experimental file watcher.",
			"The default language mode that is assigned to new files.",
			"Controls the memory available to VS Code after restart when trying to open large files. Same effect as specifying --max-memory=NEWSIZE on the command line.",
			"Editor",
			"Format a file on save. A formatter must be available, the file must not be auto-saved, and editor must not be shutting down.",
			"Format on save timeout. Specifies a time limit in milliseconds for formatOnSave-commands. Commands taking longer than the specified timeout will be cancelled.",
			"File Explorer",
			"Number of editors shown in the Open Editors pane.",
			"Controls if the explorer should automatically reveal and select files when opening them.",
			"Controls if the explorer should allow to move files and folders via drag and drop.",
			"Controls if the explorer should ask for confirmation to move files and folders via drag and drop.",
			"Controls if the explorer should ask for confirmation when deleting a file via the trash.",
			"Files and folders are sorted by their names, in alphabetical order. Folders are displayed before files.",
			"Files and folders are sorted by their names, in alphabetical order. Files are interwoven with folders.",
			"Files and folders are sorted by their names, in alphabetical order. Files are displayed before folders.",
			"Files and folders are sorted by their extensions, in alphabetical order. Folders are displayed before files.",
			"Files and folders are sorted by last modified date, in descending order. Folders are displayed before files.",
			"Controls sorting order of files and folders in the explorer. In addition to the default sorting, you can set the order to 'mixed' (files and folders sorted combined), 'type' (by file type), 'modified' (by last modified date) or 'filesFirst' (sort files before folders).",
			"Controls if file decorations should use colors.",
			"Controls if file decorations should use badges."
		],
		"vs/workbench/parts/search/electron-browser/search.contribution": [
			"Search",
			"Copy",
			"Copy Path",
			"Copy All",
			"Clear Search History",
			"Toggle Search View Position",
			"Find in Folder...",
			"Find in Workspace...",
			"Go to Symbol in Workspace...",
			"Search",
			"Search",
			"Show Search",
			"View",
			"Find in Files",
			"Go to File",
			"Go to Symbol in Workspace",
			"Search",
			"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.",
			"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"Controls whether to use ripgrep in text and file search",
			"Controls whether to use .gitignore and .ignore files when searching for files.",
			"Configure to include results from a global symbol search in the file results for Quick Open.",
			"Controls whether to follow symlinks while searching.",
			"Searches case-insensitively if the pattern is all lowercase, otherwise, searches case-sensitively",
			"Controls if the search view should read or modify the shared find clipboard on macOS",
			"Controls if the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space."
		],
		"vs/workbench/parts/search/browser/searchView": [
			"Toggle Search Details",
			"files to include",
			"Search Include Patterns",
			"files to exclude",
			"Search Exclude Patterns",
			"Replace All",
			"&&Replace",
			"Replaced {0} occurrence across {1} file with '{2}'.",
			"Replaced {0} occurrence across {1} file'.",
			"Replaced {0} occurrence across {1} files with '{2}'.",
			"Replaced {0} occurrence across {1} files.",
			"Replaced {0} occurrences across {1} file with '{2}'.",
			"Replaced {0} occurrences across {1} file'.",
			"Replaced {0} occurrences across {1} files with '{2}'.",
			"Replaced {0} occurrences across {1} files.",
			"Replace {0} occurrence across {1} file with '{2}'?",
			"Replace {0} occurrence across {1} file'?",
			"Replace {0} occurrence across {1} files with '{2}'?",
			"Replace {0} occurrence across {1} files?",
			"Replace {0} occurrences across {1} file with '{2}'?",
			"Replace {0} occurrences across {1} file'?",
			"Replace {0} occurrences across {1} files with '{2}'?",
			"Replace {0} occurrences across {1} files?",
			"Search Results",
			"Search path not found: {0}",
			"The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.",
			"Search was canceled before any results could be found - ",
			"No results found in '{0}' excluding '{1}' - ",
			"No results found in '{0}' - ",
			"No results found excluding '{0}' - ",
			"No results found. Review your settings for configured exclusions and ignore files - ",
			"Search again",
			"Search again in all files",
			"Open Settings",
			"Learn More",
			"Search returned {0} results in {1} files",
			"{0} result in {1} file",
			"{0} result in {1} files",
			"{0} results in {1} file",
			"{0} results in {1} files",
			"You have not yet opened a folder. Only open files are currently searched - ",
			"Open Folder"
		],
		"vs/workbench/parts/search/browser/openAnythingHandler": [
			"file and symbol results",
			"file results"
		],
		"vs/workbench/parts/scm/electron-browser/scm.contribution": [
			"Show Git",
			"Source Control",
			"Show SCM",
			"View",
			"SCM",
			"Whether to always show the Source Control Provider section.",
			"Controls diff decorations in the editor.",
			"Controls the width(px) of diff decorations in gutter (added & modified)."
		],
		"vs/workbench/parts/scm/electron-browser/scmViewlet": [
			"Source Control Providers",
			"Hide",
			"There are no active source control providers.",
			"Source Control",
			"{0}: {1}",
			"Hide"
		],
		"vs/workbench/parts/debug/electron-browser/debug.contribution": [
			"Show Debug",
			"Debug Console",
			"Debug",
			"Debug Console",
			"Variables",
			"Watch",
			"Call Stack",
			"Breakpoints",
			"View",
			"View",
			"Debug",
			"Debug Configuration",
			"Debug",
			"Allows setting breakpoint in any file",
			"Automatically open explorer view on the end of a debug session",
			"Show variable values inline in editor while debugging",
			"Controls the location of the debug toolbar. Either \"floating\" in all views, \"docked\" in the debug view, or \"hidden\"",
			"Never show debug in status bar",
			"Always show debug in status bar",
			"Show debug in status bar only after debug was started for the first time",
			"Controls when the debug status bar should be visible",
			"Controls whether debug view should be open on debugging session start.",
			"Controls if the non debug hovers should be enabled while debugging. If true the hover providers will be called to provide a hover. Regular hovers will not be shown even if this setting is true.",
			"Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces"
		],
		"vs/workbench/parts/debug/browser/debugQuickOpen": [
			"{0}, debug",
			"{0}, debug",
			"Type a name of a launch configuration to run.",
			"Add Config ({0})...",
			"Add Configuration...",
			"No debug configurations matching",
			"No debug configurations found. Please create a 'launch.json' file."
		],
		"vs/workbench/parts/debug/electron-browser/repl": [
			"Read Eval Print Loop Panel",
			"REPL Accept Input",
			"Debug: Console Copy All"
		],
		"vs/workbench/parts/debug/browser/debugEditorActions": [
			"Debug: Toggle Breakpoint",
			"Debug: Add Conditional Breakpoint...",
			"Debug: Add Logpoint...",
			"Run to Cursor",
			"Debug: Evaluate",
			"Debug: Add to Watch",
			"Debug: Show Hover",
			"Debug: Go To Next Breakpoint",
			"Debug: Go To Previous Breakpoint"
		],
		"vs/workbench/parts/debug/browser/debugViewlet": [
			"Start Additional Session",
			"Focus Variables",
			"Focus Watch",
			"Focus Call Stack",
			"Focus Breakpoints"
		],
		"vs/workbench/parts/markers/electron-browser/markers.contribution": [
			"Copy",
			"Copy Message",
			"Copy Message"
		],
		"vs/workbench/parts/html/electron-browser/html.contribution": [
			"Html Preview"
		],
		"vs/workbench/parts/url/electron-browser/url.contribution": [
			"Open URL",
			"Developer"
		],
		"vs/workbench/parts/webview/electron-browser/webview.contribution": [
			"webview editor",
			"Developer"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution": [
			"Interactive Playground",
			"Help"
		],
		"vs/workbench/parts/extensions/electron-browser/extensions.contribution": [
			"Manage Extensions",
			"Install Gallery Extensions",
			"Extension",
			"Running Extensions",
			"Extensions",
			"View",
			"Developer",
			"Developer",
			"Extensions",
			"Automatically update extensions",
			"If set to true, the notifications for extension recommendations will stop showing up.",
			"If set to true, recommendations will not be fetched or shown unless specifically requested by the user.",
			"If set to true, editors with extension details will be automatically closed upon navigating away from the Extensions View."
		],
		"vs/workbench/parts/extensions/browser/extensionsQuickOpen": [
			"Press Enter to manage your extensions.",
			"Extension '{0}' not found in the Marketplace.",
			"Press Enter to install '{0}' from the Marketplace.",
			"Press Enter to search for '{0}' in the Marketplace.",
			"Type an extension name"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViewlet": [
			"Marketplace",
			"Enabled",
			"Disabled",
			"Installed",
			"Recommended",
			"Other Recommendations",
			"Workspace Recommendations",
			"Features",
			"Themes",
			"Programming Languages",
			"Search Extensions in Marketplace",
			"Group By: Server",
			"Sort By: Install Count",
			"Sort By: Rating",
			"Sort By: Name",
			"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting.",
			"Extensions",
			"{0} Outdated Extensions",
			"We have uninstalled '{0}' which was reported to be problematic.",
			"Reload Now"
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution": [
			"Workbench",
			"Start without an editor.",
			"Open the Welcome page (default).",
			"Open a new untitled file.",
			"Controls which editor is shown at startup, if none is restored from the previous session. Select 'none' to start without an editor, 'welcomePage' to open the Welcome page (default), 'newUntitledFile' to open a new untitled file (only opening an empty workspace).",
			"Help"
		],
		"vs/workbench/parts/output/electron-browser/output.contribution": [
			"Output",
			"Log Viewer",
			"View",
			"View",
			"Clear Output",
			"View: Open Active Log Output File"
		],
		"vs/workbench/parts/output/browser/outputPanel": [
			"Output",
			"{0}, Output panel",
			"Output panel"
		],
		"vs/workbench/parts/terminal/electron-browser/terminal.contribution": [
			"Show All Opened Terminals",
			"Terminal",
			"Integrated Terminal",
			"The path of the shell that the terminal uses on Linux.",
			"The command line arguments to use when on the Linux terminal.",
			"The path of the shell that the terminal uses on OS X.",
			"The command line arguments to use when on the OS X terminal.",
			"The path of the shell that the terminal uses on Windows. When using shells shipped with Windows (cmd, PowerShell or Bash on Ubuntu).",
			"The command line arguments to use when on the Windows terminal.",
			"Treat the option key as the meta key in the terminal on macOS.",
			"When set, text selected in the terminal will be copied to the clipboard.",
			"When set, bold text in the terminal will always use the \"bright\" ANSI color variant.",
			"Controls the font family of the terminal, this defaults to editor.fontFamily's value.",
			"Controls the font size in pixels of the terminal.",
			"Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.",
			"Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.",
			"The font weight to use within the terminal for non-bold text.",
			"The font weight to use within the terminal for bold text.",
			"Controls whether the terminal cursor blinks.",
			"Controls the style of terminal cursor.",
			"Controls the maximum amount of lines the terminal keeps in its buffer.",
			"Controls whether locale variables are set at startup of the terminal, this defaults to true on OS X, false on other platforms.",
			"Controls how the terminal is rendered, the options are \"canvas\" for the standard (fast) canvas renderer, \"dom\" for the fallback DOM-based renderer or \"auto\" which lets VS Code guess which will be best. This setting needs VS Code to reload in order to take effect.",
			"Controls how terminal reacts to right click, possibilities are \"default\", \"copyPaste\", and \"selectWord\". \"default\" will show the context menu, \"copyPaste\" will copy when there is a selection otherwise paste, \"selectWord\" will select the word under the cursor and show the context menu.",
			"An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
			"Whether to confirm on exit if there are active terminal sessions.",
			"Whether the terminal bell is enabled or not.",
			"A set of command IDs whose keybindings will not be sent to the shell and instead always be handled by Code. This allows the use of keybindings that would normally be consumed by the shell to act the same as when the terminal is not focused, for example ctrl+p to launch Quick Open.",
			"Object with environment variables that will be added to the VS Code process to be used by the terminal on OS X",
			"Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux",
			"Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows",
			"Show alert `The terminal process terminated with exit code` when exit code is non-zero.",
			"Whether to restore terminal sessions for the workspace automatically when launching VS Code. This is an experimental setting; it may be buggy and could change in the future.",
			"Controls how the terminal stores glyph textures. `static` is the default and uses a fixed texture to draw the characters from. `dynamic` will draw the characters to the texture as they are needed, this should boost overall performance at the cost of slightly increased draw time the first time a character is drawn. `dynamic` will eventually become the default and this setting will be removed. Changes to this setting will only apply to new terminals.",
			"Terminal",
			"Terminal",
			"View"
		],
		"vs/workbench/parts/terminal/browser/terminalQuickOpen": [
			"{0}, terminal picker",
			"{0}, create new terminal",
			"$(plus) Create New Integrated Terminal",
			"No terminals matching",
			"No terminals open"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalPanel": [
			"Use 'monospace'",
			"The terminal only supports monospace fonts.",
			"Copy",
			"Split",
			"Paste",
			"Select All",
			"Clear"
		],
		"vs/workbench/electron-browser/workbench": [
			"Developer",
			"File"
		],
		"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution": [
			"A setting has changed that requires a restart to take effect.",
			"Press the restart button to restart {0} and enable the setting.",
			"&&Restart"
		],
		"vs/workbench/parts/tasks/electron-browser/task.contribution": [
			"Tasks",
			"Configure Task",
			"{0} Errors",
			"{0} Warnings",
			"{0} Infos",
			"Problems",
			"Building...",
			"10K+",
			"Show Running Tasks",
			"Tasks",
			"Changing the task execution engine with an active task running requires to reload the Window",
			"Reload Window",
			"The folder {0} is ignored since it uses task version 0.1.0",
			"No build task defined. Mark a task with 'isBuildCommand' in the tasks.json file.",
			"No build task defined. Mark a task with as a 'build' group in the tasks.json file.",
			"No test task defined. Mark a task with 'isTestCommand' in the tasks.json file.",
			"No test task defined. Mark a task with as a 'test' group in the tasks.json file.",
			"Requested task {0} to execute not found.",
			"associate",
			"Continue without scanning the task output",
			"Never scan the task output",
			"Learn more about scanning the task output",
			"Select for which kind of errors and warnings to scan the task output",
			"The current task configuration has errors. Please fix the errors first before customizing a task.",
			"There are many build tasks defined in the tasks.json. Executing the first one.\n",
			"The task '{0}' is already active and in background mode.",
			"The task '{0}' is already active.",
			"Terminate Task",
			"Restart Task",
			"There is already a task running. Terminate it first before executing another task.",
			"Failed to terminate and restart task {0}",
			"Error: The {0} task detection didn't contribute a task for the following configuration:\n{1}\nThe task will be ignored.\n",
			"Error: the provided task configuration has validation errors and can't not be used. Please correct the errors first.",
			"Ignoring task configurations for workspace folder {0}. Multi folder workspace task support requires that all folders use task version 2.0.0\n",
			"Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\n",
			"There is a task running. Do you want to terminate it?",
			"&&Terminate Task",
			"The launched task doesn't exist anymore. If the task spawned background processes exiting VS Code might result in orphaned processes. To avoid this start the last background process with a wait flag.",
			"&&Exit Anyways",
			"Terminate Task",
			"An error has occurred while running a task. See task log for details.",
			"Tasks are only available on a workspace folder.",
			"recently used tasks",
			"configured tasks",
			"detected tasks",
			"The following workspace folders are ignored since they use task version 0.1.0: {0}",
			"Don't Show Again",
			"Select the task to run",
			"No task to run found. Configure Tasks...",
			"Fetching build tasks...",
			"Select the build task to run",
			"No build task to run found. Configure Build Task...",
			"Fetching test tasks...",
			"Select the test task to run",
			"No test task to run found. Configure Tasks...",
			"Select task to terminate",
			"No task is currently running",
			"The launched process doesn't exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.",
			"Failed to terminate running task",
			"Select the task to restart",
			"No task to restart",
			"Select a Task Template",
			"Create tasks.json file from template",
			"Open tasks.json file",
			"Select a task to configure",
			"{0} is already marked as the default build task",
			"Select the task to be used as the default build task",
			"{0} is already marked as the default test task.",
			"Select the task to be used as the default test task",
			"Select the task to show its output",
			"No task is running",
			"Show Task Log",
			"Run Task",
			"Restart Running Task",
			"Show Running Tasks",
			"Terminate Task",
			"Run Build Task",
			"Run Test Task",
			"Configure Default Build Task",
			"Configure Default Test Task",
			"Run Task"
		],
		"vs/workbench/parts/execution/electron-browser/execution.contribution": [
			"External Terminal",
			"Customizes what kind of terminal to launch.",
			"Customizes which terminal to run on Windows.",
			"Customizes which terminal application to run on OS X.",
			"Customizes which terminal to run on Linux.",
			"Open New Command Prompt",
			"Open New Terminal",
			"Open in Command Prompt",
			"Open in Terminal"
		],
		"vs/workbench/parts/snippets/electron-browser/snippets.contribution": [
			"Empty snippet",
			"User snippet configuration",
			"The prefix to used when selecting the snippet in intellisense",
			"The snippet content. Use '$1', '${1:defaultText}' to define cursor positions, use '$0' for the final cursor position. Insert variable values with '${varName}' and '${varName:defaultText}', e.g 'This is file: $TM_FILENAME'.",
			"The snippet description.",
			"Empty snippet",
			"User snippet configuration",
			"The prefix to used when selecting the snippet in intellisense",
			"A list of language names to which this snippet applies, e.g 'typescript,javascript'.",
			"The snippet content. Use '$1', '${1:defaultText}' to define cursor positions, use '$0' for the final cursor position. Insert variable values with '${varName}' and '${varName:defaultText}', e.g 'This is file: $TM_FILENAME'.",
			"The snippet description."
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsService": [
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}",
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"Contributes snippets.",
			"Language identifier for which this snippet is contributed to.",
			"Path of the snippets file. The path is relative to the extension folder and typically starts with './snippets/'.",
			"One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)",
			"The snippet file \"{0}\" could not be read.",
			"{0} ({1})",
			"{0}, {1}",
			"{0}, {1}"
		],
		"vs/workbench/parts/snippets/electron-browser/insertSnippet": [
			"Insert Snippet",
			"User Snippets",
			"Extension Snippets"
		],
		"vs/workbench/parts/snippets/electron-browser/configureSnippets": [
			"(global)",
			"({0})",
			"New Global Snippets file...",
			"Existing Snippets",
			"New Snippets",
			"New Snippets",
			"Select Snippets File or Create Snippets",
			"Configure User Snippets",
			"Preferences"
		],
		"vs/workbench/parts/snippets/electron-browser/tabCompletion": [
			"Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled."
		],
		"vs/workbench/parts/themes/electron-browser/themes.contribution": [
			"Color Theme",
			"light themes",
			"dark themes",
			"high contrast themes",
			"Install Additional Color Themes...",
			"Select Color Theme (Up/Down Keys to Preview)",
			"File Icon Theme",
			"None",
			"Disable file icons",
			"Install Additional File Icon Themes...",
			"Select File Icon Theme",
			"Generate Color Theme From Current Settings",
			"Preferences",
			"Developer"
		],
		"vs/workbench/parts/feedback/electron-browser/feedback.contribution": [
			"Workbench",
			"Controls the visibility of the Twitter feedback (smiley) in the status bar at the bottom of the workbench."
		],
		"vs/workbench/parts/surveys/electron-browser/nps.contribution": [
			"Do you mind taking a quick feedback survey?",
			"Take Survey",
			"Remind Me later",
			"Don't Show Again"
		],
		"vs/workbench/parts/surveys/electron-browser/languageSurveys.contribution": [
			"Help us improve our support for {0}",
			"Take Short Survey",
			"Remind Me later",
			"Don't Show Again"
		],
		"vs/workbench/parts/cli/electron-browser/cli.contribution": [
			"Install '{0}' command in PATH",
			"This command is not available",
			"Shell command '{0}' successfully installed in PATH.",
			"OK",
			"Cancel",
			"Code will now prompt with 'osascript' for Administrator privileges to install the shell command.",
			"Unable to create '/usr/local/bin'.",
			"Aborted",
			"Uninstall '{0}' command from PATH",
			"This command is not available",
			"Shell command '{0}' successfully uninstalled from PATH.",
			"Shell Command"
		],
		"vs/workbench/electron-browser/main.contribution": [
			"View",
			"Help",
			"File",
			"Workspaces",
			"Developer",
			"Workbench",
			"Controls if opened editors should show in tabs or not.",
			"Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguinshing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editor is active.",
			"Show the name of the file followed by it's directory name.",
			"Show the name of the file followed by it's path relative to the workspace folder.",
			"Show the name of the file followed by it's absolute path.",
			"Controls the format of the label for an editor. Changing this setting can for example make it easier to understand the location of a file:\n- short:   'parent'\n- medium:  'workspace/src/parent'\n- long:    '/home/user/workspace/src/parent'\n- default: '.../parent', when another tab shares the same title, or the relative workspace path if tabs are disabled",
			"Controls the position of the editor's tabs close buttons or disables them when set to 'off'.",
			"Controls the sizing of editor tabs. Set to 'fit' to keep tabs always large enough to show the full editor label. Set to 'shrink' to allow tabs to get smaller when the available space is not enough to show all tabs at once.",
			"Controls if opened editors should show with an icon or not. This requires an icon theme to be enabled as well.",
			"Controls if opened editors show as preview. Preview editors are reused until they are kept (e.g. via double click or editing) and show up with an italic font style.",
			"Controls if opened editors from Quick Open show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).",
			"Controls if editors showing a file should close automatically when the file is deleted or renamed by some other process. Disabling this will keep the editor open as dirty on such an event. Note that deleting from within the application will always close the editor and that dirty files will never close to preserve your data.",
			"Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the currently active one. Select 'first' or 'last' to open editors independently from the currently active one.",
			"Controls the default direction of editors that are opened side by side (e.g. from the explorer). By default, editors will open on the right hand side of the currently active one. If changed to open down, the editors will open below the currently active one.",
			"Controls the behavior of empty editor groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
			"Controls if an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, e.g. when forcing an editor to open in a specific group or to the side of the currently active group.",
			"Navigate between open files using three-finger swipe horizontally.",
			"Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
			"Controls if the last typed input to the command palette should be restored when opening it the next time.",
			"Controls if Quick Open should close automatically once it loses focus.",
			"Controls if opening settings also opens an editor showing all default settings.",
			"Controls the location of the sidebar. It can either show on the left or right of the workbench.",
			"Controls the default location of the panel (terminal, debug console, output, problems). It can either show at the bottom or on the right of the workbench.",
			"Controls the visibility of the status bar at the bottom of the workbench.",
			"Controls the visibility of the activity bar in the workbench.",
			"Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
			"Controls font aliasing method in the workbench.\n- default: Sub-pixel font smoothing. On most non-retina displays this will give the sharpest text\n- antialiased: Smooth the font on the level of the pixel, as opposed to the subpixel. Can make the font appear lighter overall\n- none: Disables font smoothing. Text will show with jagged sharp edges\n- auto: Applies `default` or `antialiased` automatically based on the DPI of displays.",
			"Sub-pixel font smoothing. On most non-retina displays this will give the sharpest text.",
			"Smooth the font on the level of the pixel, as opposed to the subpixel. Can make the font appear lighter overall.",
			"Disables font smoothing. Text will show with jagged sharp edges.",
			"Applies `default` or `antialiased` automatically based on the DPI of displays.",
			"Controls whether to enable the natural language search mode for settings.",
			"Controls the behavior of the settings editor Table of Contents while searching.",
			"Controls whether the settings editor Table of Contents is visible.",
			"Window",
			"Files will open in a new window",
			"Files will open in the window with the files' folder open or the last active window",
			"Files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder",
			"Files will open in a new window unless picked from within the application (e.g. via the File menu)",
			"Controls if files should open in a new window.\n- default: files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder\n- on: files will open in a new window\n- off: files will open in the window with the files' folder open or the last active window\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Controls if files should open in a new window.\n- default: files will open in a new window unless picked from within the application (e.g. via the File menu)\n- on: files will open in a new window\n- off: files will open in the window with the files' folder open or the last active window\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Folders will open in a new window",
			"Folders will replace the last active window",
			"Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)",
			"Controls if folders should open in a new window or replace the last active window.\n- default: folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)\n- on: folders will open in a new window\n- off: folders will replace the last active window\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Open a new empty window",
			"Focus the last active running instance",
			"Controls if a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\n- on: open a new empty window\n- off: the last active running instance will get focus\nNote that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).",
			"Reopen all windows.",
			"Reopen all folders. Empty workspaces will not be restored.",
			"Reopen the last active window.",
			"Never reopen a window. Always start with an empty one.",
			"Controls how windows are being reopened after a restart. Select 'none' to always start with an empty workspace, 'one' to reopen the last window you worked on, 'folders' to reopen all windows that had folders opened or 'all' to reopen all windows of your last session.",
			"Controls if a window should restore to full screen mode if it was exited in full screen mode.",
			"Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
			"Controls the window title based on the active editor. Variables are substituted based on the context:\n${activeEditorShort}: the file name (e.g. myFile.txt)\n${activeEditorMedium}: the path of the file relative to the workspace folder (e.g. myFolder/myFile.txt)\n${activeEditorLong}: the full path of the file (e.g. /Users/Development/myProject/myFolder/myFile.txt)\n${folderName}: name of the workspace folder the file is contained in (e.g. myFolder)\n${folderPath}: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder)\n${rootName}: name of the workspace (e.g. myFolder or myWorkspace)\n${rootPath}: file path of the workspace (e.g. /Users/Development/myWorkspace)\n${appName}: e.g. VS Code\n${dirty}: a dirty indicator if the active editor is dirty\n${separator}: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text",
			"Open new windows in the center of the screen.",
			"Open new windows with same dimension as last active one.",
			"Open new windows maximized.",
			"Open new windows in full screen mode.",
			"Controls the dimensions of opening a new window when at least one window is already opened. By default, a new window will open in the center of the screen with small dimensions. When set to 'inherit', the window will get the same dimensions as the last window that was active. When set to 'maximized', the window will open maximized and fullscreen if configured to 'fullscreen'. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.",
			"Controls if closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
			"Menu is only hidden in full screen mode.",
			"Menu is always visible even in full screen mode.",
			"Menu is hidden but can be displayed via Alt key.",
			"Menu is always hidden.",
			"Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. By default, the menu bar will be visible, unless the window is full screen.",
			"If enabled, the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editor commands instead.",
			"If enabled, will automatically change to high contrast theme if Windows is using a high contrast theme, and to dark theme when switching away from a Windows high contrast theme.",
			"Adjust the appearance of the window title bar. Changes require a full restart to apply.",
			"Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.",
			"Enable this workaround if scrolling is no longer smooth after restoring a minimized VS Code window. This is a workaround for an issue (https://github.com/Microsoft/vscode/issues/13612) where scrolling starts to lag on devices with precision trackpads like the Surface devices from Microsoft. Enabling this workaround can result in a little bit of layout flickering after restoring the window from minimized state but is otherwise harmless.",
			"If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.",
			"Zen Mode",
			"Controls if turning on Zen Mode also puts the workbench into full screen mode.",
			"Controls if turning on Zen Mode also centers the layout.",
			"Controls if turning on Zen Mode also hides workbench tabs.",
			"Controls if turning on Zen Mode also hides the status bar at the bottom of the workbench.",
			"Controls if turning on Zen Mode also hides the activity bar at the left of the workbench.",
			"Controls if a window should restore to zen mode if it was exited in zen mode."
		],
		"vs/workbench/electron-browser/main": [
			"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.",
			"Failed to load a required file. Please restart the application to try again. Details: {0}"
		],
		"vs/workbench/parts/watermark/electron-browser/watermark": [
			"Show All Commands",
			"Go to File",
			"Open File",
			"Open Folder",
			"Open File or Folder",
			"Open Recent",
			"New Untitled File",
			"Toggle Terminal",
			"Find in Files",
			"Start Debugging",
			"unbound",
			"Workbench",
			"When enabled, will show the watermark tips when no editor is open."
		],
		"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay": [
			"File explorer",
			"Search across files",
			"Source code management",
			"Launch and debug",
			"Manage extensions",
			"View errors and warnings",
			"Find and run all commands",
			"Show notifications",
			"User Interface Overview",
			"Hide Interface Overview",
			"Help",
			"Help"
		],
		"vs/workbench/parts/outline/electron-browser/outline.contribution": [
			"Outline",
			"File",
			"Focus on Outline",
			"Outline",
			"Render Outline Elements with Icons.",
			"Show Errors & Warnings on Outline Elements.",
			"Show Errors & Warnings on Outline Elements.",
			"Use colors for Errors & Warnings.",
			"Use badges for Errors & Warnings."
		],
		"vs/workbench/services/bulkEdit/electron-browser/bulkEditService": [
			"Made no edits",
			"Made {0} text edits in {1} files",
			"Made {0} text edits in one file",
			"These files have changed in the meantime: {0}"
		],
		"vs/workbench/node/extensionHostMain": [
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/platform/environment/node/argv": [
			"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.",
			"Compare two files with each other.",
			"Add folder(s) to the last active window.",
			"Open a file at the path on the specified line and character position.",
			"Force to open a new window.",
			"Force to open a file or folder in an already opened window.",
			"Wait for the files to be closed before returning.",
			"The locale to use (e.g. en-US or zh-TW).",
			"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.",
			"Print version.",
			"Print usage.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extension.",
			"Installs an extension.",
			"Uninstalls an extension.",
			"Enables proposed API features for an extension.",
			"Print verbose output (implies --wait).",
			"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.",
			"Print process usage and diagnostics information.",
			"Start with the 'Developer: Startup Performance' command enabled.",
			"Run CPU profiler during startup",
			"Disable all installed extensions.",
			"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.",
			"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.",
			"Disable GPU hardware acceleration.",
			"Uploads logs from current session to a secure endpoint.",
			"Max memory size for a window (in Mbytes).",
			"Usage",
			"options",
			"paths",
			"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')",
			"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')",
			"Options",
			"Extensions Management",
			"Troubleshooting"
		],
		"vs/platform/request/node/request": [
			"HTTP",
			"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables",
			"Whether the proxy server certificate should be verified against the list of supplied CAs.",
			"The value to send as the 'Proxy-Authorization' header for every network request."
		],
		"vs/platform/history/electron-main/historyMainService": [
			"New Window",
			"Opens a new window",
			"Recent Workspaces",
			"{0} {1}",
			"Code Workspace"
		],
		"vs/platform/workspaces/common/workspaces": [
			"Code Workspace",
			"Untitled (Workspace)",
			"{0} (Workspace)",
			"{0} (Workspace)"
		],
		"vs/code/electron-main/logUploader": [
			"Invalid log uploader endpoint",
			"Uploading...",
			"Upload successful! Log file ID: {0}",
			"You are about to upload your session logs to a secure Microsoft endpoint that only Microsoft's members of the VS Code team can access.",
			"Session logs may contain personal information such as full paths or file contents. Please review and redact your session log files here: '{0}'",
			"By continuing you confirm that you have reviewed and redacted your session log files and that you agree to Microsoft using them to debug VS Code.",
			"Please run code with '--upload-logs={0}' to proceed with upload",
			"Error posting logs: {0}",
			"Error posting logs. Got {0} — {1}",
			"Error parsing response",
			"Error zipping logs: {0}"
		],
		"vs/platform/dialogs/common/dialogs": [
			"...1 additional file not shown",
			"...{0} additional files not shown"
		],
		"vs/platform/dialogs/node/dialogService": [
			"Cancel"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions",
			"Preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Extension invalid: package.json is not a JSON file.",
			"Unable to install Extension '{0}' as it is not compatible with Code '{1}'.",
			"Please restart Code before reinstalling {0}.",
			"A newer version of this extension is already installed. Would you like to override this with the older version?",
			"Override",
			"Cancel",
			"Error while installing dependencies. {0}",
			"Marketplace is not enabled",
			"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.",
			"Only Marketplace Extensions can be reinstalled",
			"Unable to install '{0}'; there is no available version compatible with VS Code '{1}'.",
			"Can't install extension since it was reported to be problematic.",
			"Unable to install because, the depending extension '{0}' compatible with current version '{1}' of VS Code is not found.",
			"Unable to install the extension. Please Quit and Start VS Code before reinstalling.",
			"Unable to install the extension. Please Exit and Start VS Code before reinstalling.",
			"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again",
			"Unknown error while renaming {0} to {1}",
			"Would you like to uninstall '{0}' only or its dependencies also?",
			"Extension Only",
			"Uninstall All",
			"Cancel",
			"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Could not find extension"
		],
		"vs/platform/extensionManagement/node/extensionGalleryService": [
			"Unable to download because the extension compatible with current version '{0}' of VS Code is not found."
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Telemetry",
			"Enable usage data and errors to be sent to Microsoft."
		],
		"vs/code/electron-browser/issue/issueReporterPage": [
			"Please complete the form in English.",
			"This is a",
			"File on",
			"Visual Studio Code",
			"An Extension",
			"Try to reproduce the problem after {0}. If the problem only reproduces when extensions are active, it is likely an issue with an extension.",
			"disabling all extensions and reloading the window",
			"Extension",
			"Title",
			"Please enter a title.",
			"The title is too long.",
			"Please enter details.",
			"Include my system information ({0})",
			"show",
			"Include my currently running processes ({0})",
			"show",
			"Include my workspace metadata ({0})",
			"show",
			"Include my enabled extensions ({0})",
			"show",
			"Send searched extensions ({0})",
			"show",
			"Send settings search details ({0})",
			"show"
		],
		"vs/editor/browser/widget/codeEditorWidget": [
			"The number of cursors has been limited to {0}."
		],
		"vs/editor/browser/widget/diffEditorWidget": [
			"Cannot compare files because one file is too large."
		],
		"vs/editor/contrib/bracketMatching/bracketMatching": [
			"Overview ruler marker color for matching brackets.",
			"Go to Bracket",
			"Select to Bracket"
		],
		"vs/editor/contrib/caretOperations/caretOperations": [
			"Move Caret Left",
			"Move Caret Right"
		],
		"vs/editor/contrib/caretOperations/transpose": [
			"Transpose Letters"
		],
		"vs/editor/contrib/clipboard/clipboard": [
			"Cut",
			"Copy",
			"Paste",
			"Copy With Syntax Highlighting"
		],
		"vs/editor/contrib/comment/comment": [
			"Toggle Line Comment",
			"Add Line Comment",
			"Remove Line Comment",
			"Toggle Block Comment"
		],
		"vs/editor/contrib/contextmenu/contextmenu": [
			"Show Editor Context Menu"
		],
		"vs/editor/contrib/cursorUndo/cursorUndo": [
			"Soft Undo"
		],
		"vs/editor/contrib/find/findController": [
			"Find",
			"Find With Selection",
			"Find Next",
			"Find Previous",
			"Find Next Selection",
			"Find Previous Selection",
			"Replace"
		],
		"vs/editor/contrib/folding/folding": [
			"Unfold",
			"Unfold Recursively",
			"Fold",
			"Fold Recursively",
			"Fold All Block Comments",
			"Fold All Regions",
			"Unfold All Regions",
			"Fold All",
			"Unfold All",
			"Fold Level {0}"
		],
		"vs/editor/contrib/fontZoom/fontZoom": [
			"Editor Font Zoom In",
			"Editor Font Zoom Out",
			"Editor Font Zoom Reset"
		],
		"vs/editor/contrib/format/formatActions": [
			"Made 1 formatting edit on line {0}",
			"Made {0} formatting edits on line {1}",
			"Made 1 formatting edit between lines {0} and {1}",
			"Made {0} formatting edits between lines {1} and {2}",
			"There is no formatter for '{0}'-files installed.",
			"Format Document",
			"There is no document formatter for '{0}'-files installed.",
			"Format Selection",
			"There is no selection formatter for '{0}'-files installed."
		],
		"vs/editor/contrib/goToDefinition/goToDefinitionCommands": [
			"No definition found for '{0}'",
			"No definition found",
			" – {0} definitions",
			"Go to Definition",
			"Open Definition to the Side",
			"Peek Definition",
			"No implementation found for '{0}'",
			"No implementation found",
			" – {0} implementations",
			"Go to Implementation",
			"Peek Implementation",
			"No type definition found for '{0}'",
			"No type definition found",
			" – {0} type definitions",
			"Go to Type Definition",
			"Peek Type Definition"
		],
		"vs/editor/contrib/goToDefinition/goToDefinitionMouse": [
			"Click to show {0} definitions."
		],
		"vs/editor/contrib/gotoError/gotoError": [
			"Go to Next Problem (Error, Warning, Info)",
			"Go to Previous Problem (Error, Warning, Info)",
			"Go to Next Problem in Files (Error, Warning, Info)",
			"Go to Previous Problem in Files (Error, Warning, Info)"
		],
		"vs/editor/contrib/hover/hover": [
			"Show Hover"
		],
		"vs/editor/contrib/inPlaceReplace/inPlaceReplace": [
			"Replace with Previous Value",
			"Replace with Next Value"
		],
		"vs/editor/contrib/linesOperations/linesOperations": [
			"Copy Line Up",
			"Copy Line Down",
			"Move Line Up",
			"Move Line Down",
			"Sort Lines Ascending",
			"Sort Lines Descending",
			"Trim Trailing Whitespace",
			"Delete Line",
			"Indent Line",
			"Outdent Line",
			"Insert Line Above",
			"Insert Line Below",
			"Delete All Left",
			"Delete All Right",
			"Join Lines",
			"Transpose characters around the cursor",
			"Transform to Uppercase",
			"Transform to Lowercase"
		],
		"vs/editor/contrib/links/links": [
			"Cmd + click to follow link",
			"Ctrl + click to follow link",
			"Cmd + click to execute command",
			"Ctrl + click to execute command",
			"Option + click to follow link",
			"Alt + click to follow link",
			"Option + click to execute command",
			"Alt + click to execute command",
			"Failed to open this link because it is not well-formed: {0}",
			"Failed to open this link because its target is missing.",
			"Open Link"
		],
		"vs/editor/contrib/multicursor/multicursor": [
			"Add Cursor Above",
			"Add Cursor Below",
			"Add Cursors to Line Ends",
			"Add Selection To Next Find Match",
			"Add Selection To Previous Find Match",
			"Move Last Selection To Next Find Match",
			"Move Last Selection To Previous Find Match",
			"Select All Occurrences of Find Match",
			"Change All Occurrences"
		],
		"vs/editor/contrib/parameterHints/parameterHints": [
			"Trigger Parameter Hints"
		],
		"vs/editor/contrib/referenceSearch/referenceSearch": [
			" – {0} references",
			"Find All References"
		],
		"vs/editor/contrib/rename/rename": [
			"No result.",
			"Successfully renamed '{0}' to '{1}'. Summary: {2}",
			"Rename failed to execute.",
			"Rename Symbol"
		],
		"vs/editor/contrib/smartSelect/smartSelect": [
			"Expand Select",
			"Shrink Select"
		],
		"vs/editor/contrib/suggest/suggestController": [
			"Accepting '{0}' did insert the following text: {1}",
			"Trigger Suggest"
		],
		"vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode": [
			"Toggle Tab Key Moves Focus"
		],
		"vs/editor/contrib/wordHighlighter/wordHighlighter": [
			"Background color of a symbol during read-access, like reading a variable. The color must not be opaque to not hide underlying decorations.",
			"Background color of a symbol during write-access, like writing to a variable. The color must not be opaque to not hide underlying decorations.",
			"Border color of a symbol during read-access, like reading a variable.",
			"Border color of a symbol during write-access, like writing to a variable.",
			"Overview ruler marker color for symbol highlights. The color must not be opaque to not hide underlying decorations.",
			"Overview ruler marker color for write-access symbol highlights. The color must not be opaque to not hide underlying decorations.",
			"Go to Next Symbol Highlight",
			"Go to Previous Symbol Highlight"
		],
		"vs/workbench/services/extensions/common/extensionsRegistry": [
			"Engine compatibility.",
			"For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.",
			"The publisher of the VS Code extension.",
			"The display name for the extension used in the VS Code gallery.",
			"The categories used by the VS Code gallery to categorize the extension.",
			"Use 'Programming  Languages' instead",
			"Banner used in the VS Code marketplace.",
			"The banner color on the VS Code marketplace page header.",
			"The color theme for the font used in the banner.",
			"All contributions of the VS Code extension represented by this package.",
			"Sets the extension to be flagged as a Preview in the Marketplace.",
			"Activation events for the VS Code extension.",
			"An activation event emitted whenever a file that resolves to the specified language gets opened.",
			"An activation event emitted whenever the specified command gets invoked.",
			"An activation event emitted whenever a user is about to start debugging or about to setup debug configurations.",
			"An activation event emitted whenever a \"launch.json\" needs to be created (and all provideDebugConfigurations methods need to be called).",
			"An activation event emitted whenever a debug session with the specific type is about to be launched (and a corresponding resolveDebugConfiguration method needs to be called).",
			"An activation event emitted whenever a folder is opened that contains at least a file matching the specified glob pattern.",
			"An activation event emitted whenever the specified view is expanded.",
			"An activation event emitted whenever a system-wide Uri directed towards this extension is open.",
			"An activation event emitted on VS Code startup. To ensure a great end user experience, please use this activation event in your extension only when no other activation events combination works in your use-case.",
			"Array of badges to display in the sidebar of the Marketplace's extension page.",
			"Badge image URL.",
			"Badge link.",
			"Badge description.",
			"Controls the Markdown rendering engine used in the Marketplace. Either github (default) or standard.",
			"Controls the Q&A link in the Marketplace. Set to marketplace to enable the default Marketplace Q & A site. Set to a string to provide the URL of a custom Q & A site. Set to false to disable Q & A altogether.",
			"Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"Script executed before the package is published as a VS Code extension.",
			"Uninstall hook for VS Code extension. Script that gets executed when the extension is completely uninstalled from VS Code which is when VS Code is restarted (shutdown and start) after the extension is uninstalled. Only Node scripts are supported.",
			"The path to a 128x128 pixel icon."
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Configuration Overrides",
			"Configure editor settings to be overridden for {0} language.",
			"Configure editor settings to be overridden for a language.",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered."
		],
		"vs/base/browser/ui/inputbox/inputBox": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}"
		],
		"vs/base/browser/ui/findinput/findInput": [
			"input"
		],
		"vs/workbench/browser/viewlet": [
			"Hide Side Bar",
			"Collapse All"
		],
		"vs/workbench/common/views": [
			"A view with id '{0}' is already registered in the container '{1}'"
		],
		"vs/workbench/browser/parts/views/viewsViewlet": [
			"Hide"
		],
		"vs/workbench/parts/debug/common/debug": [
			"Controls behavior of the internal debug console."
		],
		"vs/workbench/parts/localizations/electron-browser/localizationsActions": [
			"Configure Display Language",
			"Defines VS Code's display language.",
			"See {0} for a list of supported languages.",
			"Changes will not take effect until VS Code has been restarted.",
			"Unable to create '{0}' ({1})."
		],
		"vs/base/common/severity": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/platform/node/minimalTranslations": [
			"Search language packs in the Marketplace to change the display language to {0}.",
			"Search Marketplace",
			"Install language pack to change the display language to {0}.",
			"Install and Restart"
		],
		"vs/workbench/parts/preferences/browser/preferencesEditor": [
			"Try a preview of our ",
			"new settings editor",
			"Search settings",
			"Search Settings",
			"No Results",
			"1 Setting Found",
			"{0} Settings Found",
			"Total {0} Settings",
			"Natural Language Results",
			"Filtered Results",
			"Default Settings",
			"Default User Settings",
			"Default Workspace Settings",
			"Default Folder Settings",
			"Edit in the right hand side editor to override defaults.",
			"Default preferences. Readonly text editor."
		],
		"vs/workbench/parts/preferences/browser/settingsEditor2": [
			"Preview",
			"This is a preview of our new settings editor",
			"Search settings",
			"Search settings",
			"For advanced customizations open and edit",
			"settings.json",
			"Show modified only",
			"Settings",
			"Provide Feedback"
		],
		"vs/workbench/services/preferences/common/preferencesEditorInput": [
			"Default Settings",
			"Keyboard Shortcuts",
			"Settings (Preview)"
		],
		"vs/workbench/parts/preferences/browser/keybindingsEditor": [
			"Show Default Keybindings",
			"Show User Keybindings",
			"Search keybindings",
			"Search keybindings",
			"Sort by Precedence",
			"For advanced customizations open and edit",
			"keybindings.json",
			"Keybindings",
			"Change Keybinding",
			"Add Keybinding",
			"Remove Keybinding",
			"Reset Keybinding",
			"Show Same Keybindings",
			"Copy",
			"Copy Command",
			"Error '{0}' while editing the keybinding. Please open 'keybindings.json' file and check for errors.",
			"Command",
			"Keybinding",
			"Source",
			"When",
			"Change Keybinding {0}",
			"Change Keybinding",
			"Add Keybinding {0}",
			"Add Keybinding",
			"{0} ({1})",
			"Command is {0}.",
			"Keybinding is {0}.",
			"No Keybinding assigned.",
			"Source is {0}.",
			"When is {0}.",
			"No when context."
		],
		"vs/workbench/parts/preferences/browser/preferencesActions": [
			"Open Raw Default Settings",
			"Open Settings (Preview)",
			"Open Settings",
			"Open User Settings",
			"Open Keyboard Shortcuts",
			"Open Keyboard Shortcuts File",
			"Open Workspace Settings",
			"Open Folder Settings",
			"Configure Language Specific Settings...",
			"({0})",
			"Select Language"
		],
		"vs/workbench/services/preferences/common/preferences": [
			"User Settings",
			"Workspace Settings"
		],
		"vs/workbench/parts/preferences/browser/keybindingWidgets": [
			"1 existing command has this keybinding",
			"{0} existing commands have this keybinding",
			"Press desired key combination and then press ENTER.",
			"chord to"
		],
		"vs/workbench/parts/preferences/browser/preferencesWidgets": [
			"Place your settings in the right hand side editor to override.",
			"No Settings Found.",
			"Settings Switcher",
			"User Settings",
			"Workspace Settings",
			"Folder Settings",
			"Workspace Settings",
			"User Settings"
		],
		"vs/editor/common/view/editorColorRegistry": [
			"Background color for the highlight of line at the cursor position.",
			"Background color for the border around the line at the cursor position.",
			"Background color of highlighted ranges, like by quick open and find features. The color must not be opaque to not hide underlying decorations.",
			"Background color of the border around highlighted ranges.",
			"Color of the editor cursor.",
			"The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.",
			"Color of whitespace characters in the editor.",
			"Color of the editor indentation guides.",
			"Color of the active editor indentation guides.",
			"Color of editor line numbers.",
			"Color of editor active line number",
			"Id is deprecated. Use 'editorLineNumber.activeForeground' instead.",
			"Color of editor active line number",
			"Color of the editor rulers.",
			"Foreground color of editor code lenses",
			"Background color behind matching brackets",
			"Color for matching brackets boxes",
			"Color of the overview ruler border.",
			"Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.",
			"Foreground color of error squigglies in the editor.",
			"Border color of error squigglies in the editor.",
			"Foreground color of warning squigglies in the editor.",
			"Border color of warning squigglies in the editor.",
			"Foreground color of info squigglies in the editor.",
			"Border color of info squigglies in the editor.",
			"Foreground color of hint squigglies in the editor.",
			"Border color of hint squigglies in the editor.",
			"Border of unnecessary code in the editor.",
			"Opacity of unnecessary code in the editor.",
			"Overview ruler marker color for range highlights. The color must not be opaque to not hide underlying decorations.",
			"Overview ruler marker color for errors.",
			"Overview ruler marker color for warnings.",
			"Overview ruler marker color for infos."
		],
		"vs/workbench/parts/logs/electron-browser/logsActions": [
			"Open Logs Folder",
			"Show Logs...",
			"Window ({0})",
			"Window",
			"Extension Host",
			"Shared",
			"Main",
			"Select Log for Process",
			"Open Log File...",
			"Window ({0})",
			"Window",
			"Extension Host",
			"Shared",
			"Main",
			"Select Log for Process",
			"Set Log Level...",
			"Trace",
			"Debug",
			"Info",
			"Warning",
			"Error",
			"Critical",
			"Off",
			"Select log level",
			"Default & Current",
			"Default",
			"Current"
		],
		"vs/workbench/browser/parts/quickopen/quickOpenController": [
			"There are no entries to pick from",
			"Type '?' to get help on the actions you can take from here",
			"recently opened",
			"recently opened",
			"No results found",
			"This quick open handler can not be used in the current context",
			"{0}, recently opened",
			"Remove From History",
			"Select an editor entry to remove from history"
		],
		"vs/workbench/browser/parts/quickopen/quickopen": [
			"Go to File...",
			"Navigate Next in Quick Open",
			"Navigate Previous in Quick Open",
			"Select Next in Quick Open",
			"Select Previous in Quick Open"
		],
		"vs/workbench/parts/quickopen/browser/gotoSymbolHandler": [
			"Go to Symbol in File...",
			"symbols ({0})",
			"methods ({0})",
			"functions ({0})",
			"constructors ({0})",
			"variables ({0})",
			"classes ({0})",
			"interfaces ({0})",
			"namespaces ({0})",
			"packages ({0})",
			"modules ({0})",
			"properties ({0})",
			"enumerations ({0})",
			"strings ({0})",
			"rules ({0})",
			"files ({0})",
			"arrays ({0})",
			"numbers ({0})",
			"booleans ({0})",
			"objects ({0})",
			"keys ({0})",
			"{0}, symbols",
			"No symbols matching",
			"No symbols found",
			"Type to narrow down symbols of the currently active editor.",
			"No symbol information for the file",
			"Open a text file first to go to a symbol"
		],
		"vs/workbench/browser/quickopen": [
			"No results matching",
			"No results found"
		],
		"vs/workbench/parts/quickopen/browser/commandsHandler": [
			"Show All Commands",
			"Clear Command History",
			"Command Palette...",
			"{0}, {1}, commands",
			"{0}, commands",
			"Command '{0}' is not enabled in the current context.",
			"Command '{0}' resulted in an error.",
			"recently used",
			"other commands",
			"{0}: {1}",
			"No commands matching"
		],
		"vs/workbench/parts/quickopen/browser/gotoLineHandler": [
			"Go to Line...",
			"Type a line number between 1 and {0} to navigate to",
			"Type a line number to navigate to",
			"Go to line {0} and character {1}",
			"Go to line {0}",
			"Type a line number to navigate to.",
			"Open a text file first to go to a line"
		],
		"vs/workbench/parts/quickopen/browser/helpHandler": [
			"{0}, picker help",
			"global commands",
			"editor commands"
		],
		"vs/workbench/parts/quickopen/browser/viewPickerHandler": [
			"{0}, view picker",
			"Views",
			"Panels",
			"Terminal",
			"{0}: {1}",
			"Output",
			"Open View",
			"Quick Open View"
		],
		"vs/base/parts/quickopen/browser/quickOpenModel": [
			"{0}, picker",
			"picker"
		],
		"vs/workbench/browser/parts/quickinput/quickInput": [
			"Back",
			"{0}/{1}",
			"Press 'Enter' to confirm your input or 'Escape' to cancel",
			"{0} (Press 'Enter' to confirm or 'Escape' to cancel)",
			"{0} Selected",
			"OK",
			"Back ({0})",
			"Back",
			"Back"
		],
		"vs/workbench/parts/files/electron-browser/fileActions": [
			"New File",
			"New Folder",
			"Rename",
			"Delete",
			"Copy",
			"Paste",
			"Retry",
			"Please use the 'New Folder' or 'New File' command to add children to an existing folder",
			"Rename",
			"New Untitled File",
			"New File",
			"New Folder",
			"&&Move to Recycle Bin",
			"&&Move to Trash",
			"&&Delete",
			"You are deleting files with unsaved changes. Do you want to continue?",
			"You are deleting a folder with unsaved changes in 1 file. Do you want to continue?",
			"You are deleting a folder with unsaved changes in {0} files. Do you want to continue?",
			"You are deleting a file with unsaved changes. Do you want to continue?",
			"Your changes will be lost if you don't save them.",
			"You can restore from the Recycle Bin.",
			"You can restore from the Trash.",
			"Do not ask me again",
			"This action is irreversible!",
			"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?",
			"Failed to delete using the Trash. Do you want to permanently delete instead?",
			"This action is irreversible!",
			"&&Delete Permanently",
			"&&Retry",
			"Are you sure you want to delete the following {0} files/directories and their contents?",
			"Are you sure you want to delete the following {0} directories and their contents?",
			"Are you sure you want to delete the following {0} files?",
			"Are you sure you want to delete '{0}' and its contents?",
			"Are you sure you want to delete '{0}'?",
			"Are you sure you want to permanently delete the following {0} files/directories and their contents?",
			"Are you sure you want to permanently delete the following {0} directories and their contents?",
			"Are you sure you want to permanently delete the following {0} files?",
			"Are you sure you want to permanently delete '{0}' and its contents?",
			"Are you sure you want to permanently delete '{0}'?",
			"Add Files",
			"A file or folder with the same name already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace",
			"File to paste is an ancestor of the destination folder",
			"File to paste was deleted or moved meanwhile",
			"Duplicate",
			"Compare Active File With...",
			"Open a file first to compare it with another file.",
			"Refresh",
			"Toggle Auto Save",
			"Save All in Group",
			"Close Group",
			"Focus on Open Editors View",
			"Focus on Files Explorer",
			"Reveal Active File in Side Bar",
			"Open a file first to show it in the explorer",
			"Collapse Folders in Explorer",
			"Refresh Explorer",
			"Open Active File in New Window",
			"Open a file first to open in new window",
			"Copy Path",
			"A file or folder name must be provided.",
			"A file or folder name cannot start with a slash.",
			"A file or folder **{0}** already exists at this location. Please choose a different name.",
			"The name **{0}** is not valid as a file or folder name. Please choose a different name.",
			"The name **{0}** results in a path that is too long. Please choose a shorter name.",
			"Compare Active File with Clipboard",
			"Clipboard ↔ {0}"
		],
		"vs/workbench/parts/files/electron-browser/saveErrorHandler": [
			"Use the actions in the editor tool bar to either undo your changes or overwrite the content on disk with your changes.",
			"Failed to save '{0}': The content on disk is newer. Please compare your version with the one on disk.",
			"Retry",
			"Discard",
			"Failed to save '{0}': File is write protected. Select 'Overwrite as Admin' to retry as administrator.",
			"Failed to save '{0}': File is write protected. Select 'Overwrite' to attempt to remove protection.",
			"Failed to save '{0}': Insufficient permissions. Select 'Retry as Admin' to retry as administrator.",
			"Failed to save '{0}': {1}",
			"Learn More",
			"Don't Show Again",
			"Compare",
			"{0} (on disk) ↔ {1} (in {2}) - Resolve save conflict",
			"Overwrite as Admin...",
			"Retry as Admin...",
			"Overwrite"
		],
		"vs/workbench/parts/files/electron-browser/fileCommands": [
			"Reveal in Explorer",
			"Reveal in Finder",
			"Open Containing Folder",
			"Save As...",
			"Save",
			"Save All",
			"Remove Folder from Workspace",
			"Failed to revert '{0}': {1}",
			"{0} (on disk) ↔ {1}",
			"Open a file first to reveal",
			"Open a file first to copy its path"
		],
		"vs/workbench/browser/actions/workspaceCommands": [
			"Add Folder to Workspace...",
			"&&Add",
			"Add Folder to Workspace",
			"Select workspace folder"
		],
		"vs/workbench/browser/parts/editor/editorCommands": [
			"Move the active editor by tabs or groups",
			"Active editor move argument",
			"Argument Properties:\n\t* 'to': String value providing where to move.\n\t* 'by': String value providing the unit for move (by tab or by group).\n\t* 'value': Number value providing how many positions or an absolute position to move."
		],
		"vs/platform/list/browser/listService": [
			"Workbench",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). `ctrlCmd` maps to `Control` on Windows and Linux and to `Command` on macOS. The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
			"Opens items on mouse single click.",
			"Open items on mouse double click.",
			"Controls how to open items in trees and lists using the mouse (if supported). Set to `singleClick` to open items with a single mouse click and `doubleClick` to only open via mouse double click. For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. ",
			"Controls whether trees support horizontal scrolling in the workbench."
		],
		"vs/workbench/parts/files/electron-browser/views/explorerViewer": [
			"Type file name. Press Enter to confirm or Escape to cancel.",
			"Create file **{0}** in **{1}**",
			"Move and rename to **{0}**",
			"Create folder **{0}** in **{1}**",
			"Leading or trailing whitespace detected",
			"{0}, Files Explorer",
			"Do you want to add the folders to the workspace?",
			"Do you want to add the folder to the workspace?",
			"&&Add Folders",
			"&&Add Folder",
			"Are you sure you want to change the order of multiple root folders in your workspace?",
			"Are you sure you want to move the following {0} files?",
			"Are you sure you want to change the order of root folder '{0}' in your workspace?",
			"Are you sure you want to move '{0}'?",
			"Do not ask me again",
			"&&Move",
			"'{0}' already exists in the destination folder. Do you want to replace it?",
			"This action is irreversible!",
			"&&Replace"
		],
		"vs/workbench/parts/files/electron-browser/views/explorerView": [
			"Files Explorer Section",
			"Files Explorer"
		],
		"vs/workbench/parts/files/electron-browser/views/emptyView": [
			"No Folder Opened",
			"Files Explorer Section",
			"You have not yet added a folder to the workspace.",
			"Add Folder",
			"You have not yet opened a folder.",
			"Open Folder"
		],
		"vs/workbench/parts/files/electron-browser/views/openEditorsView": [
			"Open Editors",
			"Open Editors Section",
			"{0} unsaved"
		],
		"vs/workbench/services/editor/browser/editorService": [
			"{0} ↔ {1}"
		],
		"vs/workbench/parts/files/common/editors/fileEditorInput": [
			"{0} (deleted from disk)"
		],
		"vs/workbench/parts/files/browser/editors/textFileEditor": [
			"Text File Editor",
			"Create File",
			"Restart with {0} MB",
			"Configure Memory Limit",
			"{0}. Text file editor.",
			"Text file editor."
		],
		"vs/workbench/parts/files/browser/editors/binaryFileEditor": [
			"Binary File Viewer"
		],
		"vs/workbench/parts/files/common/dirtyFilesTracker": [
			"1 unsaved file",
			"{0} unsaved files"
		],
		"vs/workbench/parts/search/browser/searchWidget": [
			"Replace All (Submit Search to Enable)",
			"Replace All",
			"Toggle Replace",
			"Search: Type Search Term and press Enter to search or Escape to cancel",
			"Search",
			"Replace: Type replace term and press Enter to preview or Escape to cancel",
			"Replace",
			"Expression matches everything",
			"Backreferences are not supported"
		],
		"vs/workbench/parts/search/browser/openSymbolHandler": [
			"{0}, symbols picker",
			"symbol results",
			"No symbols matching",
			"Type to search for symbols"
		],
		"vs/workbench/parts/search/browser/searchActions": [
			"Find in Files",
			"Replace in Files",
			"Refresh",
			"Collapse All",
			"Clear Search Results",
			"Cancel Search",
			"Focus Next Search Result",
			"Focus Previous Search Result",
			"Dismiss",
			"Replace All",
			"Replace All",
			"Replace"
		],
		"vs/base/browser/ui/aria/aria": [
			"{0} (occurred again)"
		],
		"vs/platform/theme/common/colorRegistry": [
			"Colors used in the workbench.",
			"Overall foreground color. This color is only used if not overridden by a component.",
			"Overall foreground color for error messages. This color is only used if not overridden by a component.",
			"Foreground color for description text providing additional information, for example for a label.",
			"Overall border color for focused elements. This color is only used if not overridden by a component.",
			"An extra border around elements to separate them from others for greater contrast.",
			"An extra border around active elements to separate them from others for greater contrast.",
			"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.",
			"Color for text separators.",
			"Foreground color for links in text.",
			"Foreground color for links in text when clicked on and on mouse hover.",
			"Foreground color for preformatted text segments.",
			"Background color for block quotes in text.",
			"Border color for block quotes in text.",
			"Background color for code blocks in text.",
			"Shadow color of widgets such as find/replace inside the editor.",
			"Input box background.",
			"Input box foreground.",
			"Input box border.",
			"Border color of activated options in input fields.",
			"Input box foreground color for placeholder text.",
			"Input validation background color for information severity.",
			"Input validation border color for information severity.",
			"Input validation background color for warning severity.",
			"Input validation border color for warning severity.",
			"Input validation background color for error severity.",
			"Input validation border color for error severity.",
			"Dropdown background.",
			"Dropdown list background.",
			"Dropdown foreground.",
			"Dropdown border.",
			"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"List/Tree background when hovering over items using the mouse.",
			"List/Tree foreground when hovering over items using the mouse.",
			"List/Tree drag and drop background when moving items around using the mouse.",
			"List/Tree foreground color of the match highlights when searching inside the list/tree.",
			"List/Tree foreground color for invalid items, for example an unresolved root in explorer.",
			"Foreground color of list items containing errors.",
			"Foreground color of list items containing warnings.",
			"Quick picker color for grouping labels.",
			"Quick picker color for grouping borders.",
			"Button foreground color.",
			"Button background color.",
			"Button background color when hovering.",
			"Badge background color. Badges are small information labels, e.g. for search results count.",
			"Badge foreground color. Badges are small information labels, e.g. for search results count.",
			"Scrollbar shadow to indicate that the view is scrolled.",
			"Scrollbar slider background color.",
			"Scrollbar slider background color when hovering.",
			"Scrollbar slider background color when clicked on.",
			"Background color of the progress bar that can show for long running operations.",
			"Editor background color.",
			"Editor default foreground color.",
			"Background color of editor widgets, such as find/replace.",
			"Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.",
			"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.",
			"Color of the editor selection.",
			"Color of the selected text for high contrast.",
			"Color of the selection in an inactive editor. The color must not be opaque to not hide underlying decorations.",
			"Color for regions with the same content as the selection. The color must not be opaque to not hide underlying decorations.",
			"Border color for regions with the same content as the selection.",
			"Color of the current search match.",
			"Color of the other search matches. The color must not be opaque to not hide underlying decorations.",
			"Color of the range limiting the search. The color must not be opaque to not hide underlying decorations.",
			"Border color of the current search match.",
			"Border color of the other search matches.",
			"Border color of the range limiting the search. The color must not be opaque to not hide underlying decorations.",
			"Highlight below the word for which a hover is shown. The color must not be opaque to not hide underlying decorations.",
			"Background color of the editor hover.",
			"Border color of the editor hover.",
			"Color of active links.",
			"Background color for text that got inserted. The color must not be opaque to not hide underlying decorations.",
			"Background color for text that got removed. The color must not be opaque to not hide underlying decorations.",
			"Outline color for the text that got inserted.",
			"Outline color for text that got removed.",
			"Current header background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Current content background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Incoming header background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Incoming content background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Common ancestor header background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Common ancestor content background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.",
			"Border color on headers and the splitter in inline merge-conflicts.",
			"Current overview ruler foreground for inline merge-conflicts.",
			"Incoming overview ruler foreground for inline merge-conflicts.",
			"Common ancestor overview ruler foreground for inline merge-conflicts.",
			"Overview ruler marker color for find matches. The color must not be opaque to not hide underlying decorations.",
			"Overview ruler marker color for selection highlights. The color must not be opaque to not hide underlying decorations."
		],
		"vs/workbench/browser/actions/workspaceActions": [
			"Open File...",
			"Open Folder...",
			"Open...",
			"Remove Folder from Workspace...",
			"Save Workspace As...",
			"&&Save",
			"Save Workspace",
			"Open Workspace...",
			"Open Workspace Configuration File",
			"Duplicate Workspace in New Window"
		],
		"vs/workbench/parts/search/browser/patternInputWidget": [
			"input",
			"Use Exclude Settings and Ignore Files"
		],
		"vs/workbench/parts/search/browser/searchResultsView": [
			"Other files",
			"{0} files found",
			"{0} file found",
			"{0} matches found",
			"{0} match found",
			"{0} matches in folder root {1}, Search result",
			"{0} matches in file {1} of folder {2}, Search result",
			"Replace term {0} with {1} at column position {2} in line with text {3}",
			"Found term {0} at column position {1} in line with text {2}"
		],
		"vs/workbench/parts/search/common/queryBuilder": [
			"No folder in workspace with name: {0}"
		],
		"vs/workbench/parts/search/browser/openFileHandler": [
			"{0}, file picker",
			"search results"
		],
		"vs/workbench/parts/scm/electron-browser/dirtydiffDecorator": [
			"{0} of {1} changes",
			"{0} of {1} change",
			"Show Previous Change",
			"Show Next Change",
			"Move to Previous Change",
			"Move to Next Change",
			"Editor gutter background color for lines that are modified.",
			"Editor gutter background color for lines that are added.",
			"Editor gutter background color for lines that are deleted.",
			"Overview ruler marker color for modified content.",
			"Overview ruler marker color for added content.",
			"Overview ruler marker color for deleted content."
		],
		"vs/workbench/parts/scm/electron-browser/scmActivity": [
			"{0} pending changes"
		],
		"vs/workbench/browser/parts/views/panelViewlet": [
			"{0} actions"
		],
		"vs/platform/actions/browser/menuItemActionItem": [
			"{0} ({1})"
		],
		"vs/base/browser/ui/actionbar/actionbar": [
			"{0} ({1})"
		],
		"vs/workbench/parts/debug/electron-browser/variablesView": [
			"Variables Section",
			"Debug Variables",
			"Type new variable value",
			"Scope {0}, variables, debug",
			"{0} value {1}, variables, debug"
		],
		"vs/workbench/parts/debug/browser/breakpointsView": [
			"Logpoint",
			"Breakpoint",
			"Edit {0}...",
			"Remove {0}",
			"Function breakpoints are not supported by this debug type",
			"Function to break on",
			"Type function breakpoint",
			"Disabled logpoint",
			"Disabled breakpoint",
			"Unverified logpoint",
			"Unverified breakpoint",
			"Function breakpoints not supported by this debug type",
			"Unverified breakpoint. File is modified, please restart debug session.",
			"Logpoints not supported by this debug type",
			"Log Message: {0}",
			"Conditional breakpoints not supported by this debug type",
			"Hit conditional breakpoints not supported by this debug type",
			"Expression: {0}",
			"Hit Count: {0}"
		],
		"vs/workbench/parts/debug/electron-browser/watchExpressionsView": [
			"Expressions Section",
			"Debug Watch Expressions",
			"Expression to watch",
			"Type watch expression",
			"{0} value {1}, watch, debug",
			"{0} value {1}, watch, debug"
		],
		"vs/workbench/parts/debug/electron-browser/callStackView": [
			"Call Stack Section",
			"Paused on {0}",
			"Debug Call Stack",
			"Session",
			"Paused",
			"Running",
			"Thread",
			"Paused on {0}",
			"Paused",
			"Running",
			"Load More Stack Frames",
			"Thread {0}, callstack, debug",
			"Stack Frame {0} line {1} {2}, callstack, debug"
		],
		"vs/workbench/parts/debug/browser/debugActions": [
			"Open {0}",
			"Configure or Fix 'launch.json'",
			"Please first open a folder in order to do advanced debug configuration.",
			"Start Debugging",
			"Start Without Debugging",
			"Select and Start Debugging",
			"Restart",
			"Reconnect",
			"Step Over",
			"Step Into",
			"Step Out",
			"Stop",
			"Disconnect",
			"Continue",
			"Pause",
			"Terminate Thread",
			"Restart Frame",
			"Remove Breakpoint",
			"Remove All Breakpoints",
			"Enable All Breakpoints",
			"Disable All Breakpoints",
			"Activate Breakpoints",
			"Deactivate Breakpoints",
			"Reapply All Breakpoints",
			"Add Function Breakpoint",
			"Set Value",
			"Add Expression",
			"Edit Expression",
			"Add to Watch",
			"Remove Expression",
			"Remove All Expressions",
			"Clear Console",
			"Debug Console",
			"New Output in Debug Console",
			"Focus Debug Console",
			"Focus Session",
			"Step Back",
			"Reverse"
		],
		"vs/workbench/parts/debug/browser/debugActionsWidget": [
			"Debug toolbar background color.",
			"Debug toolbar border color."
		],
		"vs/workbench/parts/debug/electron-browser/debugService": [
			"Only primitive values are shown for this object.",
			"Debugging paused, reason {0}, {1} {2}",
			"Debugging started.",
			"Debugging stopped.",
			"Added breakpoint, line {0}, file {1}",
			"Removed breakpoint, line {0}, file {1}",
			"Console was cleared",
			"There is already a debug configuration \"{0}\" running.",
			"Compound must have \"configurations\" attribute set in order to start multiple configurations.",
			"Could not find launch configuration '{0}' in the workspace.",
			"There are multiple launch configurations '{0}' in the workspace. Use folder name to qualify the configuration.",
			"Can not find folder with name '{0}' for configuration '{1}' in compound '{2}'.",
			"Configuration '{0}' is missing in 'launch.json'.",
			"'launch.json' does not exist.",
			"Attribute '{0}' has an unsupported value '{1}' in the chosen debug configuration.",
			"Attribute '{0}' is missing from the chosen debug configuration.",
			"Configured debug type '{0}' is not supported.",
			"Missing property 'type' for the chosen launch configuration.",
			"The active file can not be debugged. Make sure it is saved on disk and that you have a debug extension installed for that file type.",
			"Cancel",
			"Debug Anyway",
			"Build errors have been detected during preLaunchTask '{0}'.",
			"Build error has been detected during preLaunchTask '{0}'.",
			"The preLaunchTask '{0}' terminated with exit code {1}.",
			"Show Errors",
			"Could not find the task '{0}'.",
			"Could not find the specified task.",
			"The specified task cannot be tracked.",
			"The task '{0}' cannot be tracked."
		],
		"vs/workbench/parts/debug/browser/debugContentProvider": [
			"Unable to resolve the resource without a debug session",
			"Could not resolve resource {0}, no response from debug extension."
		],
		"vs/workbench/parts/debug/browser/debugCommands": [
			"Please first open a folder in order to do advanced debug configuration.",
			"Inline Breakpoint",
			"Debug",
			"Add Inline Breakpoint"
		],
		"vs/workbench/parts/debug/browser/statusbarColorProvider": [
			"Status bar background color when a program is being debugged. The status bar is shown in the bottom of the window",
			"Status bar foreground color when a program is being debugged. The status bar is shown in the bottom of the window",
			"Status bar border color separating to the sidebar and editor when a program is being debugged. The status bar is shown in the bottom of the window"
		],
		"vs/workbench/parts/debug/browser/debugStatus": [
			"Select and start debug configuration"
		],
		"vs/workbench/parts/debug/electron-browser/debugEditorContribution": [
			"Logpoint",
			"Breakpoint",
			"Remove {0}",
			"Edit {0}...",
			"Disable {0}",
			"Enable {0}",
			"Remove Breakpoints",
			"Remove Inline Breakpoint on Column {0}",
			"Remove Line Breakpoint",
			"Edit Breakpoints",
			"Edit Inline Breakpoint on Column {0}",
			"Edit Line Breakpoint",
			"Enable/Disable Breakpoints",
			"Disable Inline Breakpoint on Column {0}",
			"Disable Line Breakpoint",
			"Enable Inline Breakpoint on Column {0}",
			"Enable Line Breakpoint",
			"Add Breakpoint",
			"Add Conditional Breakpoint...",
			"Add Logpoint...",
			"Logpoint",
			"Breakpoint",
			"This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.",
			"message",
			"condition",
			"Remove {0}",
			"Disable {0}",
			"Cancel",
			"Add Configuration..."
		],
		"vs/workbench/parts/debug/electron-browser/replViewer": [
			"Object state is captured from first evaluation",
			"Variable {0} has value {1}, read eval print loop, debug",
			"Expression {0} has value {1}, read eval print loop, debug",
			"{0}, read eval print loop, debug",
			"Repl variable {0} has value {1}, read eval print loop, debug"
		],
		"vs/base/parts/tree/browser/treeDefaults": [
			"Collapse"
		],
		"vs/workbench/parts/debug/browser/debugActionItems": [
			"No Configurations",
			"Add Config ({0})...",
			"Add Configuration..."
		],
		"vs/workbench/parts/markers/electron-browser/markersPanel": [
			"Disable Files Exclude Filter.",
			"Clear Filter."
		],
		"vs/workbench/parts/markers/electron-browser/markersPanelActions": [
			"Showing {0} of {1}"
		],
		"vs/workbench/parts/markers/electron-browser/messages": [
			"View",
			"Toggle Problems (Errors, Warnings, Infos)",
			"Focus Problems (Errors, Warnings, Infos)",
			"Problems View",
			"Controls if Problems view should automatically reveal files when opening them",
			"Problems",
			"Problems grouped by files",
			"No problems have been detected in the workspace so far.",
			"No results found with provided filter criteria.",
			"All problems are hidden because files exclude filter is enabled.",
			"Filter using Files Exclude Setting",
			"Do not use Files Exclude Setting",
			"Filter Problems",
			"Filter Problems",
			"Filter. Eg: text, **/*.ts, !**/node_modules/**",
			"errors",
			"warnings",
			"infos",
			"1 Error",
			"{0} Errors",
			"1 Warning",
			"{0} Warnings",
			"1 Info",
			"{0} Infos",
			"1 Unknown",
			"{0} Unknowns",
			"({0}, {1})",
			"{0} with {1} problems",
			" This problem has references to {0} locations.",
			"Error generated by {0}: {1} at line {2} and character {3}.{4}",
			"Error: {0} at line {1} and character {2}.{3}",
			"Warning generated by {0}: {1} at line {2} and character {3}.{4}",
			"Warning: {0} at line {1} and character {2}.{3}",
			"Info generated by {0}: {1} at line {2} and character {3}.{4}",
			"Info: {0} at line {1} and character {2}.{3}",
			"Problem generated by {0}: {1} at line {2} and character {3}.{4}",
			"Problem: {0} at line {1} and character {2}.{3}",
			"{0} at line {1} and character {2} in {3}",
			"Show Errors and Warnings"
		],
		"vs/workbench/parts/markers/electron-browser/markers": [
			"Total {0} Problems"
		],
		"vs/workbench/parts/markers/electron-browser/markersFileDecorations": [
			"Problems",
			"1 problem in this file",
			"{0} problems in this file",
			"Show Errors & Warnings on files and folder."
		],
		"vs/workbench/parts/html/electron-browser/htmlPreviewPart": [
			"Invalid editor input."
		],
		"vs/workbench/parts/webview/electron-browser/webviewCommands": [
			"Open Webview Developer Tools",
			"Reload Webviews"
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart": [
			"unbound",
			"It looks like Git is not installed on your system.",
			"Background color for the embedded editors on the Interactive Playground."
		],
		"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough": [
			"Interactive Playground",
			"Interactive Playground"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionTipsService": [
			"Don't Show Again",
			"Search Marketplace",
			"This extension may interest you because it's popular among users of the {0} repository.",
			"This extension is recommended because you have {0} installed.",
			"This extension is recommended based on the files you recently opened.",
			"This extension is recommended by users of the current workspace.",
			"The '{0}' extension is recommended for this file type.",
			"The '{0}' extension pack is recommended for this file type.",
			"Install",
			"Show Recommendations",
			"Show Recommendations",
			"The Marketplace has extensions that can help with '.{0}' files",
			"This workspace has extension recommendations.",
			"Install All",
			"Install All",
			"Show Recommendations",
			"Show Recommendations",
			"Do you want to ignore all extension recommendations?",
			"Yes, Ignore All",
			"No"
		],
		"vs/workbench/parts/extensions/node/extensionsWorkbenchService": [
			"Installing extension from VSIX...",
			"This extension is reported to be problematic.",
			"Installing extension from Marketplace....",
			"Uninstalling extension....",
			"Enabling an extension also enables its dependencies. Would you like to continue?",
			"Yes",
			"No",
			"Would you like to disable the dependencies of the extensions also?",
			"Yes",
			"No",
			"Cancel",
			"Cannot disable extension '{0}'. Extension '{1}' depends on this.",
			"Cannot disable extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot disable extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Would you like to install the '{0}' extension?",
			"Install"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsActions": [
			"Download Manually",
			"Once downloaded, please manually install the downloaded VSIX of '{0}'.",
			"Install",
			"Installing",
			"Failed to install '{0}'.",
			"Uninstall",
			"Uninstalling",
			"Failed to update '{0}'.",
			"Update to {0}",
			"Update",
			"Failed to install '{0}'.",
			"Update to {0} ({1})",
			"Update ({0})",
			"Failed to install '{0}'.",
			"Install",
			"Installing",
			"{0}",
			"{0}",
			"{0} (Recommended)",
			"Update",
			"{0}",
			"Uninstall",
			"Uninstalling",
			"Uninstalling",
			"Enable (Workspace)",
			"Enable",
			"Enable",
			"Disable (Workspace)",
			"Disable",
			"Disable",
			"Check for Updates",
			"Enable Auto Updating Extensions",
			"Disable Auto Updating Extensions",
			"Update All Extensions",
			"Failed to update '{0}'.",
			"Reload",
			"Reload to update",
			"Reload this window to activate the updated extension '{0}'?",
			"Reload to deactivate",
			"Reload this window to deactivate the extension '{0}'?",
			"Reload to activate",
			"Reload this window to activate the extension '{0}'?",
			"Reload to deactivate",
			"Reload this window to deactivate the uninstalled extension '{0}'?",
			"Show Extensions",
			"Install Extensions",
			"Show Enabled Extensions",
			"Show Installed Extensions",
			"Show Disabled Extensions",
			"Clear Extensions Input",
			"Show Built-in Extensions",
			"Show Outdated Extensions",
			"Show Popular Extensions",
			"Show Recommended Extensions",
			"Install All Workspace Recommended Extensions",
			"The recommended extension has already been installed",
			"Failed to install '{0}'.",
			"Install Recommended Extension",
			"Do not recommend this extension again",
			"Undo",
			"Keymaps",
			"Language Extensions",
			"Azure Extensions",
			"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).",
			"Configure Recommended Extensions (Workspace)",
			"Configure Recommended Extensions (Workspace Folder)",
			"Add to Recommended Extensions (Workspace Folder)",
			"Ignore Recommended Extension (Workspace Folder)",
			"There are no workspace folders open to add recommendations.",
			"This extension is already present in this workspace folder's recommendations.",
			"The extension was successfully added to this workspace folder's recommendations.",
			"Failed to write to extensions.json. {0}",
			"This extension is already present in this workspace folder's unwanted recommendations.",
			"The extension was successfully added to this workspace folder's unwanted recommendations.",
			"Failed to write to extensions.json. {0}",
			"Add to Recommended Extensions (Workspace)",
			"Ignore Recommended Extension (Workspace)",
			"This extension is already present in workspace recommendations.",
			"The extension was successfully added to this workspace's recommendations.",
			"Failed to write. {0}",
			"This extension is already present in workspace unwanted recommendations.",
			"The extension was successfully added to this workspace's unwanted recommendations.",
			"Failed to write. {0}",
			"This extension was reported to be problematic.",
			"Malicious",
			"This extension was reported to be problematic.",
			"Disabled",
			"Disabled",
			"Disabled for this Workspace",
			"Disable All Installed Extensions",
			"Disable All Installed Extensions for this Workspace",
			"Enable All Extensions",
			"Enable All Extensions for this Workspace",
			"Open Extensions Folder",
			"Install from VSIX...",
			"Install from VSIX",
			"&&Install",
			"Successfully installed the extension. Reload to enable it.",
			"Reload Now",
			"Reinstall Extension...",
			"Select Extension to Reinstall",
			"Successfully reinstalled the extension.",
			"Reload Now",
			"Button background color for actions extension that stand out (e.g. install button).",
			"Button foreground color for actions extension that stand out (e.g. install button).",
			"Button background hover color for actions extension that stand out (e.g. install button)."
		],
		"vs/workbench/parts/extensions/common/extensionsInput": [
			"Extension: {0}"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionEditor": [
			"Extension name",
			"Extension identifier",
			"Preview",
			"Preview",
			"Built-in",
			"Publisher name",
			"Install count",
			"Rating",
			"Repository",
			"License",
			"You have chosen not to receive recommendations for this extension.",
			"You have chosen not to receive recommendations for this extension.",
			"Details",
			"Extension details, rendered from the extension's 'README.md' file",
			"Contributions",
			"Lists contributions to VS Code by this extension",
			"Changelog",
			"Extension update history, rendered from the extension's 'CHANGELOG.md' file",
			"Dependencies",
			"Lists extensions this extension depends on",
			"No README available.",
			"No Changelog available.",
			"No Contributions",
			"No Contributions",
			"No Dependencies",
			"Settings ({0})",
			"Name",
			"Description",
			"Default",
			"Debuggers ({0})",
			"Name",
			"Type",
			"View Containers ({0})",
			"ID",
			"Title",
			"Where",
			"Views ({0})",
			"ID",
			"Name",
			"Where",
			"Localizations ({0})",
			"Language Id",
			"Language Name",
			"Language Name (Localized)",
			"Color Themes ({0})",
			"Icon Themes ({0})",
			"Colors ({0})",
			"Id",
			"Description",
			"Dark Default",
			"Light Default",
			"High Contrast Default",
			"JSON Validation ({0})",
			"File Match",
			"Schema",
			"Commands ({0})",
			"Name",
			"Description",
			"Keyboard Shortcuts",
			"Menu Contexts",
			"Languages ({0})",
			"ID",
			"Name",
			"File Extensions",
			"Grammar",
			"Snippets"
		],
		"vs/workbench/parts/extensions/common/extensionsFileTemplate": [
			"Extensions",
			"List of extensions which should be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.",
			"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.",
			"List of extensions recommended by VS Code that should not be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.",
			"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsUtils": [
			"Disable other keymaps ({0}) to avoid conflicts between keybindings?",
			"Yes",
			"No"
		],
		"vs/workbench/parts/extensions/electron-browser/runtimeExtensionsEditor": [
			"Activated on start-up",
			"Activated because a file matching {0} exists in your workspace",
			"Activated because file {0} exists in your workspace",
			"Activated because you opened a {0} file",
			"Activated on {0}",
			"{0} uncaught errors",
			"Running Extensions",
			"Show Running Extensions",
			"Report Issue",
			"Start Extension Host Profile",
			"Stop Extension Host Profile",
			"Save Extension Host Profile"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionProfileService": [
			"Profile Extensions",
			"In order to profile extensions a restart is required. Do you want to restart '{0}' now?",
			"Restart",
			"Cancel",
			"Click to stop profiling."
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsViews": [
			"Extensions",
			"No extensions found.",
			"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting."
		],
		"vs/workbench/parts/welcome/page/electron-browser/welcomePage": [
			"Welcome",
			"JavaScript",
			"TypeScript",
			"Python",
			"PHP",
			"Azure",
			"Show Azure extensions",
			"Docker",
			"Vim",
			"Sublime",
			"Atom",
			"Support for {0} is already installed.",
			"The window will reload after installing additional support for {0}.",
			"Installing additional support for {0}...",
			"Support for {0} with id {1} could not be found.",
			"The {0} keyboard shortcuts are already installed.",
			"The window will reload after installing the {0} keyboard shortcuts.",
			"Installing the {0} keyboard shortcuts...",
			"The {0} keyboard shortcuts with id {1} could not be found.",
			"Welcome",
			"Open folder {0} with path {1}",
			", ",
			"Install {0} keymap",
			"Install additional support for {0}",
			"{0} keymap is already installed",
			"{0} support is already installed",
			"OK",
			"Details",
			"Background color for the buttons on the Welcome page.",
			"Hover background color for the buttons on the Welcome page."
		],
		"vs/editor/common/modes/modesRegistry": [
			"Plain Text"
		],
		"vs/workbench/parts/output/electron-browser/outputServices": [
			"{0} - Output",
			"Output channel for '{0}'"
		],
		"vs/workbench/parts/output/browser/outputActions": [
			"Toggle Output",
			"Clear Output",
			"Toggle Output Scroll Lock",
			"Switch to Output",
			"Open Log File"
		],
		"vs/workbench/browser/parts/editor/textResourceEditor": [
			"Text Editor",
			"{0}. Readonly text editor.",
			"Readonly text editor.",
			"{0}. Untitled file text editor.",
			"Untitled file text editor."
		],
		"vs/workbench/parts/terminal/electron-browser/terminalActions": [
			"Toggle Integrated Terminal",
			"Kill the Active Terminal Instance",
			"Kill Terminal",
			"Kill Terminal Instance",
			"Copy Selection",
			"Select All",
			"Delete Word Left",
			"Delete Word Right",
			"Move To Line Start",
			"Move To Line End",
			"Create New Integrated Terminal",
			"New Terminal",
			"Select current working directory for new terminal",
			"Create New Integrated Terminal (In Active Workspace)",
			"Split Terminal",
			"Select current working directory for new terminal",
			"Split Terminal (In Active Workspace)",
			"Focus Previous Pane",
			"Focus Next Pane",
			"Resize Pane Left",
			"Resize Pane Right",
			"Resize Pane Up",
			"Resize Pane Down",
			"Focus Terminal",
			"Focus Next Terminal",
			"Focus Previous Terminal",
			"Paste into Active Terminal",
			"Select Default Shell",
			"Run Selected Text In Active Terminal",
			"Run Active File In Active Terminal",
			"Only files on disk can be run in the terminal",
			"Switch Terminal",
			"Scroll Down (Line)",
			"Scroll Down (Page)",
			"Scroll to Bottom",
			"Scroll Up (Line)",
			"Scroll Up (Page)",
			"Scroll to Top",
			"Clear",
			"Clear Selection",
			"Allow Workspace Shell Configuration",
			"Disallow Workspace Shell Configuration",
			"Rename",
			"Enter terminal name",
			"Focus Find Widget",
			"Hide Find Widget",
			"Switch Active Terminal",
			"Scroll To Previous Command",
			"Scroll To Next Command",
			"Select To Previous Command",
			"Select To Next Command",
			"Select To Previous Line",
			"Select To Next Line"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalService": [
			"You can change the default terminal shell by selecting the customize button.",
			"Customize",
			"Don't Show Again",
			"Select your preferred terminal shell, you can change this later in your settings",
			"There is an active terminal session, do you want to kill it?",
			"There are {0} active terminal sessions, do you want to kill them?"
		],
		"vs/workbench/browser/parts/editor/editorActions": [
			"Split Editor",
			"Split Editor Orthogonal",
			"Split Editor Left",
			"Split Editor Right",
			"Split Editor Up",
			"Split Editor Down",
			"Join Editor Group with Next Group",
			"Join All Editor Groups",
			"Navigate Between Editor Groups",
			"Focus Active Editor Group",
			"Focus First Editor Group",
			"Focus Last Editor Group",
			"Focus Next Editor Group",
			"Focus Previous Editor Group",
			"Focus Left Editor Group",
			"Focus Right Editor Group",
			"Focus Above Editor Group",
			"Focus Below Editor Group",
			"Open to the Side",
			"Close Editor",
			"Close",
			"Revert and Close Editor",
			"Close Editors to the Left in Group",
			"Close All Editors",
			"Close All Editor Groups",
			"Close Editors in Other Groups",
			"Move Editor Group Left",
			"Move Editor Group Right",
			"Move Editor Group Up",
			"Move Editor Group Down",
			"Maximize Editor Group",
			"Reset Editor Group Sizes",
			"Maximize Editor Group and Hide Sidebar",
			"Open Next Editor",
			"Open Previous Editor",
			"Open Next Editor in Group",
			"Open Previous Editor in Group",
			"Open First Editor in Group",
			"Open Last Editor in Group",
			"Go Forward",
			"Go Back",
			"Go Last",
			"Reopen Closed Editor",
			"Clear Recently Opened",
			"Show Editors in Active Group",
			"Show All Editors",
			"Open Previous Recently Used Editor in Group",
			"Open Next Recently Used Editor in Group",
			"Open Previous Editor from History",
			"Open Next Recently Used Editor",
			"Open Previous Recently Used Editor",
			"Clear Editor History",
			"Move Editor Left",
			"Move Editor Right",
			"Move Editor into Previous Group",
			"Move Editor into Next Group",
			"Move Editor into Above Group",
			"Move Editor into Below Group",
			"Move Editor into Left Group",
			"Move Editor into Right Group",
			"Move Editor into First Group",
			"Move Editor into Last Group",
			"Single Column Editor Layout",
			"Two Columns Editor Layout",
			"Three Columns Editor Layout",
			"Two Rows Editor Layout",
			"Three Rows Editor Layout",
			"Grid Editor Layout (2x2)",
			"Two Columns Bottom Editor Layout",
			"Two Columns Right Editor Layout",
			"New Editor Group to the Left",
			"New Editor Group to the Right",
			"New Editor Group Above",
			"New Editor Group Below"
		],
		"vs/editor/common/config/editorOptions": [
			"The editor is not accessible at this time. Press Alt+F1 for options.",
			"Editor content"
		],
		"vs/workbench/parts/terminal/common/terminalColorRegistry": [
			"The background color of the terminal, this allows coloring the terminal differently to the panel.",
			"The foreground color of the terminal.",
			"The foreground color of the terminal cursor.",
			"The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.",
			"The selection background color of the terminal.",
			"The color of the border that separates split panes within the terminal. This defaults to panel.border.",
			"'{0}' ANSI color in the terminal."
		],
		"vs/workbench/electron-browser/actions": [
			"Close Window",
			"Close Workspace",
			"There is currently no workspace opened in this instance to close.",
			"New Window",
			"Toggle Full Screen",
			"Toggle Menu Bar",
			"Toggle Developer Tools",
			"Zoom In",
			"Zoom Out",
			"Reset Zoom",
			"Startup Performance",
			"Reload Window",
			"Reload Window With Extensions Disabled",
			"Select a window to switch to",
			"Current Window",
			"Close Window",
			"Switch Window...",
			"Quick Switch Window...",
			"workspaces",
			"files",
			"Select to open (hold Cmd-key to open in new window)",
			"Select to open (hold Ctrl-key to open in new window)",
			"Remove from Recently Opened",
			"Open Recent...",
			"Quick Open Recent...",
			"Report Issue",
			"Open Process Explorer",
			"Report Performance Issue",
			"Report Performance Issue",
			"Keyboard Shortcuts Reference",
			"Documentation",
			"Introductory Videos",
			"Tips and Tricks",
			"Toggle Shared Process",
			"Navigate to the View on the Left",
			"Navigate to the View on the Right",
			"Navigate to the View Above",
			"Navigate to the View Below",
			"Increase Current View Size",
			"Decrease Current View Size",
			"Show Previous Window Tab",
			"Show Next Window Tab",
			"Move Window Tab to New Window",
			"Merge All Windows",
			"Toggle Window Tabs Bar",
			"Join us on Twitter",
			"Search Feature Requests",
			"View License",
			"Privacy Statement",
			"Accessibility Options",
			"About {0}",
			"Inspect Context Keys"
		],
		"vs/workbench/browser/parts/panel/panelActions": [
			"Close Panel",
			"Toggle Panel",
			"Focus into Panel",
			"Toggle Panel Position",
			"Move to Right",
			"Move to Bottom",
			"Toggle Maximized Panel",
			"Maximize Panel Size",
			"Restore Panel Size",
			"View",
			"View",
			"View",
			"View",
			"View",
			"View"
		],
		"vs/workbench/common/theme": [
			"Active tab background color. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Inactive tab background color. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Tab background color when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Tab background color in an unfocused group when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to separate tabs from each other. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border on the bottom of an active tab. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to the top of an active tab. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border on the bottom of an active tab in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to the top of an active tab in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to highlight tabs when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Border to highlight tabs in an unfocused group when hovering. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Active tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Inactive tab foreground color in an active group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Active tab foreground color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Inactive tab foreground color in an unfocused group. Tabs are the containers for editors in the editor area. Multiple tabs can be opened in one editor group. There can be multiple editor groups.",
			"Deprecated background color of an editor group.",
			"Deprecated: Background color of an editor group is no longer being supported with the introduction of the grid editor layout. You can use editorGroup.emptyBackground to set the background color of empty editor groups.",
			"Background color of an empty editor group. Editor groups are the containers of editors.",
			"Border color of an empty editor group that is focused. Editor groups are the containers of editors.",
			"Background color of the editor group title header when tabs are enabled. Editor groups are the containers of editors.",
			"Border color of the editor group title header when tabs are enabled. Editor groups are the containers of editors.",
			"Background color of the editor group title header when tabs are disabled (`\"workbench.editor.showTabs\": false`). Editor groups are the containers of editors.",
			"Color to separate multiple editor groups from each other. Editor groups are the containers of editors.",
			"Background color when dragging editors around. The color should have transparency so that the editor contents can still shine through.",
			"Panel background color. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Panel border color to separate the panel from the editor. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Title color for the active panel. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Title color for the inactive panel. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Border color for the active panel title. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Drag and drop feedback color for the panel title items. The color should have transparency so that the panel entries can still shine through. Panels are shown below the editor area and contain views like output and integrated terminal.",
			"Status bar foreground color when a workspace is opened. The status bar is shown in the bottom of the window.",
			"Status bar foreground color when no folder is opened. The status bar is shown in the bottom of the window.",
			"Status bar background color when a workspace is opened. The status bar is shown in the bottom of the window.",
			"Status bar background color when no folder is opened. The status bar is shown in the bottom of the window.",
			"Status bar border color separating to the sidebar and editor. The status bar is shown in the bottom of the window.",
			"Status bar border color separating to the sidebar and editor when no folder is opened. The status bar is shown in the bottom of the window.",
			"Status bar item background color when clicking. The status bar is shown in the bottom of the window.",
			"Status bar item background color when hovering. The status bar is shown in the bottom of the window.",
			"Status bar prominent items background color. Prominent items stand out from other status bar entries to indicate importance. Change mode `Toggle Tab Key Moves Focus` from command palette to see an example. The status bar is shown in the bottom of the window.",
			"Status bar prominent items background color when hovering. Prominent items stand out from other status bar entries to indicate importance. Change mode `Toggle Tab Key Moves Focus` from command palette to see an example. The status bar is shown in the bottom of the window.",
			"Activity bar background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity bar foreground color (e.g. used for the icons). The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity bar border color separating to the side bar. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Drag and drop feedback color for the activity bar items. The color should have transparency so that the activity bar entries can still shine through. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity notification badge background color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Activity notification badge foreground color. The activity bar is showing on the far left or right and allows to switch between views of the side bar.",
			"Side bar background color. The side bar is the container for views like explorer and search.",
			"Side bar foreground color. The side bar is the container for views like explorer and search.",
			"Side bar border color on the side separating to the editor. The side bar is the container for views like explorer and search.",
			"Side bar title foreground color. The side bar is the container for views like explorer and search.",
			"Drag and drop feedback color for the side bar sections. The color should have transparency so that the side bar sections can still shine through. The side bar is the container for views like explorer and search.",
			"Side bar section header background color. The side bar is the container for views like explorer and search.",
			"Side bar section header foreground color. The side bar is the container for views like explorer and search.",
			"Title bar foreground when the window is active. Note that this color is currently only supported on macOS.",
			"Title bar foreground when the window is inactive. Note that this color is currently only supported on macOS.",
			"Title bar background when the window is active. Note that this color is currently only supported on macOS.",
			"Title bar background when the window is inactive. Note that this color is currently only supported on macOS.",
			"Title bar border color. Note that this color is currently only supported on macOS.",
			"Notifications center border color. Notifications slide in from the bottom right of the window.",
			"Notification toast border color. Notifications slide in from the bottom right of the window.",
			"Notifications foreground color. Notifications slide in from the bottom right of the window.",
			"Notifications background color. Notifications slide in from the bottom right of the window.",
			"Notification links foreground color. Notifications slide in from the bottom right of the window.",
			"Notifications center header foreground color. Notifications slide in from the bottom right of the window.",
			"Notifications center header background color. Notifications slide in from the bottom right of the window.",
			"Notifications border color separating from other notifications in the notifications center. Notifications slide in from the bottom right of the window."
		],
		"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper": [
			"Do you allow {0} (defined as a workspace setting) to be launched in the terminal?",
			"Allow",
			"Disallow"
		],
		"vs/workbench/browser/parts/activitybar/activitybarPart": [
			"Hide Activity Bar",
			"Global Actions"
		],
		"vs/workbench/browser/parts/sidebar/sidebarPart": [
			"Focus into Side Bar",
			"View"
		],
		"vs/workbench/browser/parts/panel/panelPart": [
			"Hide Panel"
		],
		"vs/workbench/browser/parts/statusbar/statusbarPart": [
			"Manage Extension"
		],
		"vs/workbench/browser/parts/titlebar/titlebarPart": [
			"[Unsupported]",
			"[Administrator]",
			"[Superuser]",
			"[Extension Development Host]"
		],
		"vs/workbench/browser/parts/menubar/menubarPart": [
			"&&File",
			"&&Edit",
			"&&Selection",
			"&&View",
			"&&Go",
			"&&Debug",
			"&&Tasks",
			"&&Help",
			"Switch to Alt+Click for Multi-Cursor",
			"Switch to Cmd+Click for Multi-Cursor",
			"Switch to Ctrl+Click for Multi-Cursor",
			"&&Move Side Bar Right",
			"&&Move Side Bar Left",
			"&&Hide Status Bar",
			"&&Show Status Bar",
			"Hide &&Activity Bar",
			"Show &&Activity Bar"
		],
		"vs/workbench/browser/parts/editor/editorPart": [
			"Background color of the editor pane visible on the left and right side of the centered editor layout.",
			"Group {0}"
		],
		"vs/workbench/services/keybinding/electron-browser/keybindingService": [
			"expected non-empty value.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"property `{0}` can be omitted or must be of type `string`",
			"Identifier of the command to run when keybinding is triggered.",
			"Key or key sequence (separate keys with plus-sign and sequences with space, e.g Ctrl+O and Ctrl+L L for a chord).",
			"Mac specific key or key sequence.",
			"Linux specific key or key sequence.",
			"Windows specific key or key sequence.",
			"Condition when the key is active.",
			"Contributes keybindings.",
			"Invalid `contributes.{0}`: {1}",
			"Here are other available commands: ",
			"Keybindings configuration",
			"Key or key sequence (separated by space)",
			"Name of the command to execute",
			"Condition when the key is active.",
			"Arguments to pass to the command to execute.",
			"Keyboard",
			"Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`.",
			"Enables the macOS touchbar buttons on the keyboard if available."
		],
		"vs/workbench/services/configuration/node/configurationService": [
			"This setting can be applied only in User Settings",
			"This setting cannot be applied now. It will be applied when you open this folder directly."
		],
		"vs/workbench/services/configuration/node/jsonEditingService": [
			"Unable to write into the file. Please open the file to correct errors/warnings in the file and try again.",
			"Unable to write into the file because the file is dirty. Please save the file and try again."
		],
		"vs/workbench/services/keybinding/common/keybindingEditing": [
			"Unable to write because the keybindings configuration file is dirty. Please save it first and then try again.",
			"Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.",
			"Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.",
			"Place your key bindings in this file to overwrite the defaults"
		],
		"vs/workbench/services/files/electron-browser/remoteFileService": [
			"The path of resource '{0}' must be absolute",
			"File not found ({0})",
			"File is directory",
			"File not modified since",
			"File seems to be binary and cannot be opened as text",
			"Resource can not be modified.",
			"Failed to create file {0}",
			"Unable to move/copy. File already exists at destination.",
			"Unable to move/copy. File already exists at destination.",
			"Unable to move/copy. File already exists at destination."
		],
		"vs/workbench/services/configurationResolver/electron-browser/configurationResolverService": [
			"Command '{0}' did not return a string result. Only strings are supported as results for commands used for variable substitution."
		],
		"vs/workbench/services/textfile/electron-browser/textFileService": [
			"Do you want to save the changes you made to {0}?",
			"Do you want to save the changes to the following {0} files?",
			"&&Save All",
			"&&Save",
			"Do&&n't Save",
			"Cancel",
			"Your changes will be lost if you don't save them.",
			"All Files",
			"No Extension"
		],
		"vs/workbench/services/progress/browser/progressService2": [
			"{0}: {1}",
			"[{0}] {1}: {2}",
			"[{0}]: {1}",
			"[{0}]: {1}",
			"Cancel"
		],
		"vs/workbench/services/workspace/node/workspaceEditingService": [
			"Unable to write into workspace configuration file. Please open the file to correct errors/warnings in it and try again.",
			"Unable to write into workspace configuration file because the file is dirty. Please save it and try again.",
			"Open Workspace Configuration"
		],
		"vs/workbench/services/decorations/browser/decorationsService": [
			"Contains emphasized items"
		],
		"vs/workbench/browser/parts/notifications/notificationsCenter": [
			"No new notifications",
			"Notifications",
			"Notification Center Actions",
			"Notifications List"
		],
		"vs/workbench/browser/parts/notifications/notificationsAlerts": [
			"Error: {0}",
			"Warning: {0}",
			"Info: {0}"
		],
		"vs/workbench/browser/parts/notifications/notificationsStatus": [
			"Hide Notifications",
			"No Notifications",
			"No New Notifications",
			"1 New Notification",
			"{0} New Notifications"
		],
		"vs/workbench/browser/parts/notifications/notificationsCommands": [
			"Notifications",
			"Show Notifications",
			"Hide Notifications",
			"Clear All Notifications"
		],
		"vs/workbench/browser/parts/notifications/notificationsToasts": [
			"Notification Toast"
		],
		"vs/workbench/services/preferences/browser/preferencesService": [
			"Open a folder first to create workspace settings",
			"Place your key bindings in this file to overwrite the defaults",
			"Default Keybindings",
			"{0} (Folder Settings)",
			"Unable to create '{0}' ({1})."
		],
		"vs/platform/url/electron-browser/inactiveExtensionUrlHandler": [
			"Allow an extension to open this URL?"
		],
		"vs/workbench/parts/tasks/browser/taskQuickOpen": [
			"Type the name of a task to run",
			"No tasks matching",
			"No tasks found"
		],
		"vs/platform/markers/common/markers": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/workbench/parts/tasks/common/problemMatcher": [
			"The loop property is only supported on the last line matcher.",
			"The problem pattern is invalid. The kind property must be provided only in the first element",
			"The problem pattern is missing a regular expression.",
			"The problem pattern is invalid. It must have at least have a file and a message.",
			"The problem pattern is invalid. It must either have kind: \"file\" or have a line or location match group.",
			"Error: The string {0} is not a valid regular expression.\n",
			"The regular expression to find an error, warning or info in the output.",
			"whether the pattern matches a location (file and line) or only a file.",
			"The match group index of the filename. If omitted 1 is used.",
			"The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted (line,column) is assumed.",
			"The match group index of the problem's line. Defaults to 2",
			"The match group index of the problem's line character. Defaults to 3",
			"The match group index of the problem's end line. Defaults to undefined",
			"The match group index of the problem's end line character. Defaults to undefined",
			"The match group index of the problem's severity. Defaults to undefined",
			"The match group index of the problem's code. Defaults to undefined",
			"The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.",
			"In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.",
			"The name of the problem pattern.",
			"The name of the problem multi line problem pattern.",
			"The actual patterns.",
			"Contributes problem patterns",
			"Invalid problem pattern. The pattern will be ignored.",
			"Invalid problem pattern. The pattern will be ignored.",
			"Error: the description can't be converted into a problem matcher:\n{0}\n",
			"Error: the description doesn't define a valid problem pattern:\n{0}\n",
			"Error: the description doesn't define an owner:\n{0}\n",
			"Error: the description doesn't define a file location:\n{0}\n",
			"Info: unknown severity {0}. Valid values are error, warning and info.\n",
			"Error: the pattern with the identifier {0} doesn't exist.",
			"Error: the pattern property refers to an empty identifier.",
			"Error: the pattern property {0} is not a valid pattern variable name.",
			"A problem matcher must define both a begin pattern and an end pattern for watching.",
			"Error: The string {0} is not a valid regular expression.\n",
			"The regular expression to detect the begin or end of a background task.",
			"The match group index of the filename. Can be omitted.",
			"The name of a contributed or predefined pattern",
			"A problem pattern or the name of a contributed or predefined problem pattern. Can be omitted if base is specified.",
			"The name of a base problem matcher to use.",
			"The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.",
			"A human-readable string describing the source of this diagnostic, e.g. 'typescript' or 'super lint'.",
			"The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.",
			"Controls if a problem reported on a text document is applied only to open, closed or all documents.",
			"Defines how file names reported in a problem pattern should be interpreted.",
			"Patterns to track the begin and end of a matcher active on a background task.",
			"If set to true the background monitor is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern",
			"If matched in the output the start of a background task is signaled.",
			"If matched in the output the end of a background task is signaled.",
			"The watching property is deprecated. Use background instead.",
			"Patterns to track the begin and end of a watching matcher.",
			"If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern",
			"If matched in the output the start of a watching task is signaled.",
			"If matched in the output the end of a watching task is signaled.",
			"This property is deprecated. Use the watching property instead.",
			"A regular expression signaling that a watched tasks begins executing triggered through file watching.",
			"This property is deprecated. Use the watching property instead.",
			"A regular expression signaling that a watched tasks ends executing.",
			"The name of the problem matcher used to refer to it.",
			"A human readable label of the problem matcher.",
			"Contributes problem matchers",
			"Microsoft compiler problems",
			"Less problems",
			"Gulp TSC Problems",
			"JSHint problems",
			"JSHint stylish problems",
			"ESLint compact problems",
			"ESLint stylish problems",
			"Go problems"
		],
		"vs/workbench/parts/tasks/common/taskTemplates": [
			"Executes .NET Core build command",
			"Executes the build target",
			"Example to run an arbitrary external command",
			"Executes common maven commands"
		],
		"vs/workbench/parts/tasks/node/tasks": [
			"Error: the task identifier '{0}' is missing the required property '{1}'. The task identifier will be ignored."
		],
		"vs/workbench/parts/tasks/node/taskConfiguration": [
			"Warning: options.cwd must be of type string. Ignoring value {0}\n",
			"Error: command argument must either be a string or a quoted string. Provided value is:\n{0}",
			"Error: command arguments must be an array of strings. Provided value is:\n{0}",
			"Warning: shell configuration is only supported when executing tasks in the terminal.",
			"Error: Problem Matcher in declare scope must have a name:\n{0}\n",
			"Warning: the defined problem matcher is unknown. Supported types are string | ProblemMatcher | (string | ProblemMatcher)[].\n{0}\n",
			"Error: Invalid problemMatcher reference: {0}\n",
			"Error: tasks configuration must have a type property. The configuration will be ignored.\n{0}\n",
			"Error: there is no registered task type '{0}'. Did you miss to install an extension that provides a corresponding task provider?",
			"Error: the task configuration '{0}' is missing the required property 'type'. The task configuration will be ignored.",
			"Error: the task configuration '{0}' is using an unknown type. The task configuration will be ignored.",
			"Error: tasks is not declared as a custom task. The configuration will be ignored.\n{0}\n",
			"Error: a task must provide a label property. The task will be ignored.\n{0}\n",
			"Error: the task '{0}' neither specifies a command nor a dependsOn property. The task will be ignored. Its definition is:\n{1}",
			"Error: the task '{0}' doesn't define a command. The task will be ignored. Its definition is:\n{1}",
			"Task version 2.0.0 doesn't support global OS specific tasks. Convert them to a task with a OS specific command. Affected tasks are:\n{0}"
		],
		"vs/workbench/parts/tasks/node/processTaskSystem": [
			"A unknown error has occurred while executing a task. See task output log for details.",
			"\nWatching build tasks has finished.",
			"Failed to launch external program {0} {1}.",
			"\nThe task '{0}' was terminated per user request.",
			"Problem matcher {0} can't be resolved. The matcher will be ignored"
		],
		"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem": [
			"A unknown error has occurred while executing a task. See task output log for details.",
			"Couldn't resolve dependent task '{0}' in workspace folder '{1}'",
			"Task - {0}",
			"Press any key to close the terminal.",
			"Terminal will be reused by tasks, press any key to close it.",
			"Can't execute a shell command on an UNC drive using cmd.exe.",
			"Problem matcher {0} can't be resolved. The matcher will be ignored"
		],
		"vs/workbench/parts/tasks/node/processRunnerDetector": [
			"Running gulp --tasks-simple didn't list any tasks. Did you run npm install?",
			"Running jake --tasks didn't list any tasks. Did you run npm install?",
			"Gulp is not installed on your system. Run npm install -g gulp to install it.",
			"Jake is not installed on your system. Run npm install -g jake to install it.",
			"Grunt is not installed on your system. Run npm install -g grunt to install it.",
			"Program {0} was not found. Message is {1}",
			"Build task named '{0}' detected.",
			"Test task named '{0}' detected."
		],
		"vs/workbench/parts/tasks/browser/quickOpen": [
			"{0}, tasks",
			"recently used tasks",
			"configured tasks",
			"detected tasks",
			"Configure Task"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1": [
			"The config's version number",
			"The runner has graduated. Use the offical runner property",
			"Defines whether the task is executed as a process and the output is shown in the output window or inside the terminal.",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration",
			"Specifies whether the command is a shell command or an external program. Defaults to false if omitted."
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2": [
			"Specifies whether the command is a shell command or an external program. Defaults to false if omitted.",
			"The property isShellCommand is deprecated. Use the type property of the task and the shell property in the options instead. See also the 1.14 release notes.",
			"The task indentifier.",
			"Another task this task depends on.",
			"The other tasks this task depends on.",
			"Configures the panel that is used to present the task's ouput and reads its input.",
			"Controls whether the executed command is echoed to the panel. Default is true.",
			"Controls whether the panel takes focus. Default is false. If set to true the panel is revealed as well.",
			"Always reveals the terminal when this task is executed.",
			"Only reveals the terminal if no problem matcher is associated with the task and an errors occurs executing it.",
			"Never reveals the terminal when this task is executed.",
			"Controls whether the panel running the task is revealed or not. Default is \"always\".",
			"Controls if the panel is shared between tasks, dedicated to this task or a new one is created on every run.",
			"Controls whether to show the `Terminal will be reused by tasks, press any key to close it` message.",
			"The terminal property is deprecated. Use presentation instead",
			"The task's execution group.",
			"Defines if this task is the default task in the group.",
			"Marks the task as the default build task.",
			"Marks the task as the default test task.",
			"Marks the task as a build task accesible through the 'Run Build Task' command.",
			"Marks the task as a test task accesible through the 'Run Test Task' command.",
			"Assigns the task to no group",
			"Defines to which execution group this task belongs to. It supports \"build\" to add it to the build group and \"test\" to add it to the test group.",
			"Defines whether the task is run as a process or as a command inside a shell.",
			"The shell command to be executed. Array items will be joined using a space character",
			"The shell command to be executed. Array items will be joined using a space character",
			"The actual command value",
			"Escapes characters using the shell's escape character (e.g. ` under PowerShell and \\ under bash).",
			"Quotes the argument using the shell's strong quote character (e.g. \" under PowerShell and bash).",
			"Quotes the argument using the shell's weak quote character (e.g. ' under PowerShell and bash).",
			"How the command value should be quoted.",
			"The command to be executed. Can be an external program or a shell command.",
			"The actual argument value",
			"Escapes characters using the shell's escape character (e.g. ` under PowerShell and \\ under bash).",
			"Quotes the argument using the shell's strong quote character (e.g. \" under PowerShell and bash).",
			"Quotes the argument using the shell's weak quote character (e.g. ' under PowerShell and bash).",
			"How the argument value should be quoted.",
			"Arguments passed to the command when this task is invoked.",
			"The task's user interface label",
			"The config's version number.",
			"A user defined identifier to reference the task in launch.json or a dependsOn clause.",
			"The task's label",
			"The task's name",
			"The task's name property is deprecated. Use the label property instead.",
			"Whether the executed task is kept alive and is running in the background.",
			"Whether the user is prompted when VS Code closes with a running task.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The task type to customize",
			"The customize property is deprecated. See the 1.14 release notes on how to migrate to the new task customization approach",
			"The task's name property is deprecated. Use the label property instead.",
			"The property showOutput is deprecated. Use the reveal property inside the presentation property instead. See also the 1.14 release notes.",
			"The property echoCommand is deprecated. Use the echo property inside the presentation property instead. See also the 1.14 release notes.",
			"The property suppressTaskName is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.",
			"The property isBuildCommand is deprecated. Use the group property instead. See also the 1.14 release notes.",
			"The property isTestCommand is deprecated. Use the group property instead. See also the 1.14 release notes.",
			"The property suppressTaskName is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.",
			"The property taskSelector is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration"
		],
		"vs/workbench/parts/emmet/browser/actions/showEmmetCommands": [
			"Show Emmet Commands"
		],
		"vs/workbench/parts/emmet/electron-browser/actions/expandAbbreviation": [
			"Emmet: Expand Abbreviation"
		],
		"vs/workbench/parts/codeEditor/electron-browser/accessibility": [
			"Now changing the setting `editor.accessibilitySupport` to 'on'.",
			"Now opening the VS Code Accessibility documentation page.",
			"Thank you for trying out VS Code's accessibility options.",
			"Status:",
			"To configure the editor to be permanently optimized for usage with a Screen Reader press Command+E now.",
			"To configure the editor to be permanently optimized for usage with a Screen Reader press Control+E now.",
			"The editor is configured to use platform APIs to detect when a Screen Reader is attached, but the current runtime does not support this.",
			"The editor has automatically detected a Screen Reader is attached.",
			"The editor is configured to automatically detect when a Screen Reader is attached, which is not the case at this time.",
			"The editor is configured to be permanently optimized for usage with a Screen Reader - you can change this by editing the setting `editor.accessibilitySupport`.",
			"The editor is configured to never be optimized for usage with a Screen Reader.",
			"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
			"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.",
			"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.",
			"Press Command+H now to open a browser window with more VS Code information related to Accessibility.",
			"Press Control+H now to open a browser window with more VS Code information related to Accessibility.",
			"You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.",
			"Show Accessibility Help"
		],
		"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings": [
			"Developer: Inspect Key Mappings"
		],
		"vs/workbench/parts/codeEditor/electron-browser/largeFileOptimizations": [
			"{0}: tokenization, wrapping and folding have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.",
			"OK. Never show again",
			"Forcefully enable features",
			"Please reopen file in order for this setting to take effect."
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleMinimap": [
			"View: Toggle Minimap"
		],
		"vs/workbench/parts/codeEditor/electron-browser/textMate/inspectTMScopes": [
			"Developer: Inspect TM Scopes",
			"Loading..."
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleMultiCursorModifier": [
			"Toggle Multi-Cursor Modifier"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter": [
			"View: Toggle Control Characters"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace": [
			"View: Toggle Render Whitespace"
		],
		"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap": [
			"View: Toggle Word Wrap",
			"Cannot toggle word wrap in a diff editor.",
			"Disable wrapping for this file",
			"Enable wrapping for this file"
		],
		"vs/workbench/parts/execution/electron-browser/terminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}"
		],
		"vs/workbench/parts/snippets/electron-browser/snippetsFile": [
			"Global User Snippet",
			"User Snippet"
		],
		"vs/workbench/services/mode/common/workbenchModeService": [
			"Contributes language declarations.",
			"ID of the language.",
			"Name aliases for the language.",
			"File extensions associated to the language.",
			"File names associated to the language.",
			"File name glob patterns associated to the language.",
			"Mime types associated to the language.",
			"A regular expression matching the first line of a file of the language.",
			"A relative path to a file containing configuration options for the language.",
			"Invalid `contributes.{0}`. Expected an array.",
			"Empty value for `contributes.{0}`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string`",
			"property `{0}` can be omitted and must be of type `string[]`",
			"property `{0}` can be omitted and must be of type `string[]`"
		],
		"vs/workbench/services/themes/common/colorThemeSchema": [
			"Colors and styles for the token.",
			"Foreground color for the token.",
			"Token background colors are currently not supported.",
			"Font style of the rule: 'italic', 'bold' or 'underline' or a combination. The empty string unsets inherited settings.",
			"Font style must be 'italic', 'bold' or 'underline' or a combination or the empty string.",
			"None (clear inherited style)",
			"Description of the rule.",
			"Scope selector against which this rule matches.",
			"Path to a tmTheme file (relative to the current file).",
			"Colors for syntax highlighting"
		],
		"vs/workbench/parts/feedback/electron-browser/feedbackStatusbarItem": [
			"Hide"
		],
		"vs/workbench/parts/welcome/gettingStarted/electron-browser/telemetryOptOut": [
			"Help improve VS Code by allowing Microsoft to collect usage data. Read our [privacy statement]({0}) and learn how to [opt out]({1}).",
			"Help improve VS Code by allowing Microsoft to collect usage data. Read our [privacy statement]({0}) and learn how to [opt in]({1}).",
			"Read More"
		],
		"vs/workbench/parts/update/electron-browser/update": [
			"Release Notes",
			"Release Notes",
			"Show Release Notes",
			"Welcome to {0} v{1}! Would you like to read the Release Notes?",
			"Release Notes",
			"Our license terms have changed, please click [here]({0}) to go through them.",
			"Don't Show Again",
			"{0} for 64-bit Windows is now available! Click [here]({1}) to learn more.",
			"Don't Show Again",
			"New {0} update available.",
			"New {0} update available.",
			"There are currently no updates available.",
			"OK",
			"There is an available update.",
			"Download Now",
			"Later",
			"Release Notes",
			"There's an update available: {0} {1}",
			"Install Update",
			"Later",
			"Release Notes",
			"{0} {1} is being installed in the background; we'll let you know when it's done.",
			"Don't Show Again",
			"Restart {0} to apply the latest update.",
			"Update Now",
			"Later",
			"Release Notes",
			"Command Palette...",
			"Settings",
			"Keyboard Shortcuts",
			"Manage Extensions",
			"User Snippets",
			"Color Theme",
			"File Icon Theme",
			"Check for Updates...",
			"Checking For Updates...",
			"Download Now",
			"Downloading Update...",
			"Install Update...",
			"Installing Update...",
			"Restart to Update..."
		],
		"vs/platform/update/node/update.config.contribution": [
			"Update",
			"Configure whether you receive automatic updates from an update channel. Requires a restart after change.",
			"Enables Windows background updates.",
			"Show Release Notes after an update."
		],
		"vs/workbench/services/jsonschemas/common/jsonValidationExtensionPoint": [
			"Contributes json schema configuration.",
			"The file pattern to match, for example \"package.json\" or \"*.launch\".",
			"A schema URL ('http:', 'https:') or relative path to the extension folder ('./').",
			"'configuration.jsonValidation' must be a array",
			"'configuration.jsonValidation.fileMatch' must be defined",
			"'configuration.jsonValidation.url' must be a URL or relative path",
			"Expected `contributes.{0}.url` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"'configuration.jsonValidation.url' is an invalid relative URL: {0}",
			"'configuration.jsonValidation.url' must start with 'http:', 'https:' or './' to reference schemas located in the extension"
		],
		"vs/workbench/services/themes/common/colorExtensionPoint": [
			"Contributes extension defined themable colors",
			"The identifier of the themable color",
			"Identifiers should be in the form aa[.bb]*",
			"The description of the themable color",
			"The default color for light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.",
			"The default color for dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.",
			"The default color for high contrast themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.",
			"'configuration.colors' must be a array",
			"{0} must be either a color value in hex (#RRGGBB[AA] or #RGB[A]) or the identifier of a themable color which provides the default.",
			"'configuration.colors.id' must be defined and can not be empty",
			"'configuration.colors.id' must follow the word[.word]*",
			"'configuration.colors.description' must be defined and can not be empty",
			"'configuration.colors.defaults' must be defined and must contain 'light', 'dark' and 'highContrast'"
		],
		"vs/workbench/parts/codeEditor/electron-browser/languageConfiguration/languageConfigurationExtensionPoint": [
			"Errors parsing {0}: {1}",
			"The opening bracket character or string sequence.",
			"The closing bracket character or string sequence.",
			"Defines the comment symbols",
			"Defines how block comments are marked.",
			"The character sequence that starts a block comment.",
			"The character sequence that ends a block comment.",
			"The character sequence that starts a line comment.",
			"Defines the bracket symbols that increase or decrease the indentation.",
			"Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.",
			"Defines a list of scopes where the auto pairs are disabled.",
			"Defines the bracket pairs that can be used to surround a selected string.",
			"The word definition for the language.",
			"The RegExp pattern used to match words.",
			"The RegExp flags used to match words.",
			"Must match the pattern `/^([gimuy]+)$/`.",
			"The language's indentation settings.",
			"If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).",
			"The RegExp pattern for increaseIndentPattern.",
			"The RegExp flags for increaseIndentPattern.",
			"Must match the pattern `/^([gimuy]+)$/`.",
			"If a line matches this pattern, then all the lines after it should be unindendented once (until another rule matches).",
			"The RegExp pattern for decreaseIndentPattern.",
			"The RegExp flags for decreaseIndentPattern.",
			"Must match the pattern `/^([gimuy]+)$/`.",
			"If a line matches this pattern, then **only the next line** after it should be indented once.",
			"The RegExp pattern for indentNextLinePattern.",
			"The RegExp flags for indentNextLinePattern.",
			"Must match the pattern `/^([gimuy]+)$/`.",
			"If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.",
			"The RegExp pattern for unIndentedLinePattern.",
			"The RegExp flags for unIndentedLinePattern.",
			"Must match the pattern `/^([gimuy]+)$/`.",
			"The language's folding settings.",
			"A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.",
			"Language specific folding markers such as '#region' and '#endregion'. The start and end regexes will be tested against the contents of all lines and must be designed efficiently",
			"The RegExp pattern for the start marker. The regexp must start with '^'.",
			"The RegExp pattern for the end marker. The regexp must start with '^'."
		],
		"vs/workbench/api/electron-browser/mainThreadEditors": [
			"{0} ⟷ {1}"
		],
		"vs/workbench/api/electron-browser/mainThreadMessageService": [
			"{0} (Extension)",
			"Extension",
			"Manage Extension",
			"Cancel",
			"OK"
		],
		"vs/workbench/api/electron-browser/mainThreadSaveParticipant": [
			"Aborted format on save after {0}ms",
			"Aborted codeActionsOnSave after {0}ms",
			"Aborted onWillSaveTextDocument-event after 1750ms",
			"Running Save Participants..."
		],
		"vs/workbench/api/electron-browser/mainThreadTask": [
			"{0}: {1}"
		],
		"vs/workbench/api/electron-browser/mainThreadWebview": [
			"An error occurred while restoring view:{0}"
		],
		"vs/workbench/api/electron-browser/mainThreadWorkspace": [
			"Extension '{0}' added 1 folder to the workspace",
			"Extension '{0}' added {1} folders to the workspace",
			"Extension '{0}' removed 1 folder from the workspace",
			"Extension '{0}' removed {1} folders from the workspace",
			"Extension '{0}' changed folders of the workspace"
		],
		"vs/workbench/parts/performance/electron-browser/startupProfiler": [
			"Successfully created profiles.",
			"Please create an issue and manually attach the following files:\n{0}",
			"Create Issue and Restart",
			"Restart",
			"Thanks for helping us.",
			"A final restart is required to continue to use '{0}'. Again, thank you for your contribution.",
			"Restart"
		],
		"vs/workbench/electron-browser/removedKeybindingsContribution": [
			"History navigation commands have changed. Please update your keybindings to use following new commands: 'history.showPrevious' and 'history.showNext'",
			"Open Keybindings File",
			"More Information...",
			"Don't show again"
		],
		"vs/workbench/parts/outline/electron-browser/outlinePanel": [
			"Filter",
			"Find",
			"Collapse All",
			"Sort By: Position",
			"Sort By: Name",
			"Sort By: Type",
			"Follow Cursor",
			"Filter on Type",
			"There are no editors open that can provide outline information.",
			"Loading document symbols for '{0}'...",
			"We are sorry, but this file is too large for showing an outline.",
			"Filter",
			"Find"
		],
		"vs/base/node/processes": [
			"Can't execute a shell command on a UNC drive."
		],
		"vs/workbench/api/node/extHostWorkspace": [
			"Extension '{0}' failed to update workspace folders: {1}"
		],
		"vs/workbench/api/node/extHostExtensionActivator": [
			"Extension '{1}' failed to activate. Reason: unknown dependency '{0}'.",
			"Extension '{1}' failed to activate. Reason: dependency '{0}' failed to activate.",
			"Extension '{0}' failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).",
			"Activating extension '{0}' failed: {1}."
		],
		"vs/code/electron-main/windows": [
			"OK",
			"Path does not exist",
			"The path '{0}' does not seem to exist anymore on disk.",
			"&&Reopen",
			"&&Keep Waiting",
			"&&Close",
			"The window is no longer responding",
			"You can reopen or close the window or keep waiting.",
			"&&Reopen",
			"&&Close",
			"The window has crashed",
			"We are sorry for the inconvenience! You can reopen the window to continue where you left off.",
			"Open",
			"Open Folder",
			"Open File",
			"OK",
			"Unable to save workspace '{0}'",
			"The workspace is already opened in another window. Please close that window first and then try again.",
			"&&Open",
			"Open Workspace",
			"&&Save",
			"Do&&n't Save",
			"Cancel",
			"Do you want to save your workspace configuration as a file?",
			"Save your workspace if you plan to open it again.",
			"&&Save",
			"Save Workspace"
		],
		"vs/platform/windows/electron-main/windowsService": [
			"Accessibility Options",
			"Version: {0}\nCommit: {1}\nDate: {2}\nElectron: {3}\nChrome: {4}\nNode.js: {5}\nV8: {6}\nArchitecture: {7}",
			"OK",
			"&&Copy"
		],
		"vs/code/electron-main/auth": [
			"Proxy Authentication Required",
			"The proxy {0} requires authentication."
		],
		"vs/code/electron-main/window": [
			"You can still access the menu bar by pressing the Alt-key."
		],
		"vs/platform/issue/electron-main/issueService": [
			"Issue Reporter",
			"Process Explorer"
		],
		"vs/code/electron-main/menus": [
			"&&File",
			"&&Edit",
			"&&Selection",
			"&&View",
			"&&Go",
			"&&Debug",
			"Window",
			"&&Help",
			"&&Tasks",
			"New &&Window",
			"About {0}",
			"Services",
			"Hide {0}",
			"Hide Others",
			"Show All",
			"Quit {0}",
			"&&New File",
			"&&New File",
			"&&Open...",
			"&&Open...",
			"Open Wor&&kspace...",
			"Open Wor&&kspace...",
			"Open &&Folder...",
			"Open &&Folder...",
			"&&Open File...",
			"&&Open File...",
			"Open &&Recent",
			"Save Workspace As...",
			"A&&dd Folder to Workspace...",
			"&&Save",
			"Save &&As...",
			"Save A&&ll",
			"Auto Save",
			"New &&Window",
			"Re&&vert File",
			"Clos&&e Window",
			"Close &&Workspace",
			"Close &&Folder",
			"&&Close Editor",
			"E&&xit",
			"&&Settings",
			"&&Keyboard Shortcuts",
			"&&Keymap Extensions",
			"User &&Snippets",
			"&&Color Theme",
			"File &&Icon Theme",
			"&&Preferences",
			"&&Reopen Closed Editor",
			"&&More...",
			"&&Clear Recently Opened",
			"&&Undo",
			"&&Redo",
			"Cu&&t",
			"&&Copy",
			"&&Paste",
			"&&Undo",
			"&&Redo",
			"Cu&&t",
			"&&Copy",
			"&&Paste",
			"&&Find",
			"&&Replace",
			"Find &&in Files",
			"Replace &&in Files",
			"Emmet: E&&xpand Abbreviation",
			"E&&mmet...",
			"&&Toggle Line Comment",
			"Toggle &&Block Comment",
			"Switch to Alt+Click for Multi-Cursor",
			"Switch to Cmd+Click for Multi-Cursor",
			"Switch to Ctrl+Click for Multi-Cursor",
			"&&Add Cursor Above",
			"A&&dd Cursor Below",
			"Add C&&ursors to Line Ends",
			"Add &&Next Occurrence",
			"Add P&&revious Occurrence",
			"Select All &&Occurrences",
			"&&Copy Line Up",
			"Co&&py Line Down",
			"Mo&&ve Line Up",
			"Move &&Line Down",
			"&&Select All",
			"&&Select All",
			"&&Expand Selection",
			"&&Shrink Selection",
			"&&Command Palette...",
			"&&Open View...",
			"&&Explorer",
			"&&Search",
			"S&&CM",
			"&&Debug",
			"E&&xtensions",
			"&&Output",
			"De&&bug Console",
			"&&Integrated Terminal",
			"&&Problems",
			"Toggle &&Full Screen",
			"Toggle Zen Mode",
			"Toggle Centered Layout",
			"Toggle Menu &&Bar",
			"Split &&Up",
			"Split &&Down",
			"Split &&Left",
			"Split &&Right",
			"&&Single",
			"&&Two Columns",
			"T&&hree Columns",
			"T&&wo Rows",
			"Three &&Rows",
			"&&Grid (2x2)",
			"Two C&&olumns Right",
			"Two &&Columns Bottom",
			"Toggle Vertical/Horizontal &&Layout",
			"Editor &&Layout",
			"&&Toggle Side Bar",
			"&&Move Side Bar Right",
			"&&Move Side Bar Left",
			"Toggle &&Panel",
			"&&Hide Status Bar",
			"&&Show Status Bar",
			"Hide &&Activity Bar",
			"Show &&Activity Bar",
			"Toggle &&Word Wrap",
			"Toggle &&Minimap",
			"Toggle &&Render Whitespace",
			"Toggle &&Control Characters",
			"&&Zoom In",
			"Zoom O&&ut",
			"&&Reset Zoom",
			"&&Back",
			"&&Forward",
			"&&Next Editor",
			"&&Previous Editor",
			"&&Next Used Editor in Group",
			"&&Previous Used Editor in Group",
			"Switch &&Editor",
			"Group &&1",
			"Group &&2",
			"Group &&3",
			"Group &&4",
			"Group &&5",
			"&&Next Group",
			"&&Previous Group",
			"Group &&Left",
			"Group &&Right",
			"Group &&Above",
			"Group &&Below",
			"Switch &&Group",
			"Go to &&File...",
			"Go to &&Symbol in File...",
			"Go to Symbol in &&Workspace...",
			"Go to &&Definition",
			"Go to &&Type Definition",
			"Go to &&Implementation",
			"Go to &&Line...",
			"&&Start Debugging",
			"Start &&Without Debugging",
			"&&Stop Debugging",
			"&&Restart Debugging",
			"Open &&Configurations",
			"Add Configuration...",
			"Step &&Over",
			"Step &&Into",
			"Step O&&ut",
			"&&Continue",
			"Toggle &&Breakpoint",
			"&&Conditional Breakpoint...",
			"Inline Breakp&&oint",
			"&&Function Breakpoint...",
			"&&Logpoint...",
			"&&New Breakpoint",
			"Enable All Breakpoints",
			"Disable A&&ll Breakpoints",
			"Remove &&All Breakpoints",
			"&&Install Additional Debuggers...",
			"Minimize",
			"Zoom",
			"Bring All to Front",
			"Switch &&Window...",
			"Show Previous Tab",
			"Show Next Tab",
			"Move Tab to New Window",
			"Merge All Windows",
			"&&Toggle Developer Tools",
			"Accessibility &&Options",
			"Open &&Process Explorer",
			"Report &&Issue",
			"&&Welcome",
			"&&Interactive Playground",
			"&&Documentation",
			"&&Release Notes",
			"&&Keyboard Shortcuts Reference",
			"Introductory &&Videos",
			"&&Tips and Tricks",
			"&&Join us on Twitter",
			"&&Search Feature Requests",
			"View &&License",
			"&&Privacy Statement",
			"&&About",
			"&&Run Task...",
			"Run &&Build Task...",
			"Show Runnin&&g Tasks...",
			"R&&estart Running Task...",
			"&&Terminate Task...",
			"&&Configure Tasks...",
			"Configure De&&fault Build Task...",
			"Accessibility Options",
			"Check for Updates...",
			"Checking For Updates...",
			"Download Available Update",
			"Downloading Update...",
			"Install Update...",
			"Installing Update...",
			"Restart to Update..."
		],
		"vs/base/node/zip": [
			"Error extracting {0}. Invalid file.",
			"Incomplete. Found {0} of {1} entries",
			"{0} not found inside zip."
		],
		"vs/base/common/errorMessage": [
			"{0}: {1}",
			"An unknown error occurred. Please consult the log for more details.",
			"A system error occurred ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/platform/extensions/node/extensionValidator": [
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}."
		],
		"vs/editor/common/controller/cursor": [
			"Unexpected exception while executing command."
		],
		"vs/editor/browser/widget/diffReview": [
			"Close",
			"no lines",
			"1 line",
			"{0} lines",
			"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}",
			"blank",
			"original {0}, modified {1}: {2}",
			"+ modified {0}: {1}",
			"- original {0}: {1}",
			"Go to Next Difference",
			"Go to Previous Difference"
		],
		"vs/editor/contrib/find/findWidget": [
			"Find",
			"Find",
			"Previous match",
			"Next match",
			"Find in selection",
			"Close",
			"Replace",
			"Replace",
			"Replace",
			"Replace All",
			"Toggle Replace mode",
			"Only the first {0} results are highlighted, but all find operations work on the entire text.",
			"{0} of {1}",
			"No Results"
		],
		"vs/editor/contrib/referenceSearch/referencesController": [
			"Loading..."
		],
		"vs/editor/contrib/referenceSearch/referencesModel": [
			"symbol in {0} on line {1} at column {2}",
			"1 symbol in {0}, full path {1}",
			"{0} symbols in {1}, full path {2}",
			"No results found",
			"Found 1 symbol in {0}",
			"Found {0} symbols in {1}",
			"Found {0} symbols in {1} files"
		],
		"vs/editor/contrib/message/messageController": [
			"Cannot edit in read-only editor"
		],
		"vs/editor/contrib/referenceSearch/peekViewWidget": [
			"Close"
		],
		"vs/editor/contrib/gotoError/gotoErrorWidget": [
			"({0}/{1})",
			"Editor marker navigation widget error color.",
			"Editor marker navigation widget warning color.",
			"Editor marker navigation widget info color.",
			"Editor marker navigation widget background."
		],
		"vs/editor/contrib/hover/modesContentHover": [
			"Loading..."
		],
		"vs/editor/contrib/parameterHints/parameterHintsWidget": [
			"{0}, hint"
		],
		"vs/editor/contrib/codeAction/codeActionCommands": [
			"Show Fixes ({0})",
			"Show Fixes",
			"Quick Fix...",
			"No code actions available",
			"No code actions available",
			"Refactor...",
			"No refactorings available",
			"Source Action...",
			"No source actions available",
			"Organize Imports",
			"No organize imports action available"
		],
		"vs/editor/contrib/referenceSearch/referencesWidget": [
			"Failed to resolve file.",
			"{0} references",
			"{0} reference",
			"no preview available",
			"References",
			"No results",
			"References",
			"Background color of the peek view title area.",
			"Color of the peek view title.",
			"Color of the peek view title info.",
			"Color of the peek view borders and arrow.",
			"Background color of the peek view result list.",
			"Foreground color for line nodes in the peek view result list.",
			"Foreground color for file nodes in the peek view result list.",
			"Background color of the selected entry in the peek view result list.",
			"Foreground color of the selected entry in the peek view result list.",
			"Background color of the peek view editor.",
			"Background color of the gutter in the peek view editor.",
			"Match highlight color in the peek view result list.",
			"Match highlight color in the peek view editor.",
			"Match highlight border in the peek view editor."
		],
		"vs/editor/contrib/rename/renameInputField": [
			"Rename input. Type new name and press Enter to commit."
		],
		"vs/editor/contrib/suggest/suggestWidget": [
			"Background color of the suggest widget.",
			"Border color of the suggest widget.",
			"Foreground color of the suggest widget.",
			"Background color of the selected entry in the suggest widget.",
			"Color of the match highlights in the suggest widget.",
			"Read More...{0}",
			"{0}, suggestion, has details",
			"{0}, suggestion",
			"Read less...{0}",
			"Loading...",
			"No suggestions.",
			"{0}, accepted",
			"{0}, suggestion, has details",
			"{0}, suggestion"
		],
		"vs/editor/common/config/commonEditorConfig": [
			"Editor",
			"Controls the font family.",
			"Controls the font weight.",
			"Controls the font size in pixels.",
			"Controls the line height. Use 0 to compute the lineHeight from the fontSize.",
			"Controls the letter spacing in pixels.",
			"Line numbers are not rendered.",
			"Line numbers are rendered as absolute number.",
			"Line numbers are rendered as distance in lines to cursor position.",
			"Line numbers are rendered every 10 lines.",
			"Controls the display of line numbers.",
			"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty",
			"Characters that will be used as word separators when doing word related navigations or operations",
			"The number of spaces a tab is equal to. This setting is overridden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'number'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"Insert spaces when pressing Tab. This setting is overridden based on the file contents when `editor.detectIndentation` is on.",
			"Expected 'boolean'. Note that the value \"auto\" has been replaced by the `editor.detectIndentation` setting.",
			"When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.",
			"Controls if selections have rounded corners",
			"Controls if the editor will scroll beyond the last line",
			"Controls the number of extra characters beyond which the editor will scroll horizontally",
			"Controls if the editor will scroll using an animation",
			"Controls if the minimap is shown",
			"Controls the side where to render the minimap.",
			"Controls whether the minimap slider is automatically hidden.",
			"Render the actual characters on a line (as opposed to color blocks)",
			"Limit the width of the minimap to render at most a certain number of columns",
			"Controls if the hover is shown",
			"Controls the delay after which to show the hover",
			"Controls if the hover should remain visible when mouse is moved over it",
			"Controls if we seed the search string in Find Widget from editor selection",
			"Controls if Find in Selection flag is turned on when multiple characters or lines of text are selected in the editor",
			"Controls if the Find Widget should read or modify the shared find clipboard on macOS",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `editor.wordWrapColumn`.",
			"Lines will wrap at the minimum of viewport and `editor.wordWrapColumn`.",
			"Controls how lines should wrap. Can be:\n - 'off' (disable wrapping),\n - 'on' (viewport wrapping),\n - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or\n - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).",
			"Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.",
			"Controls the indentation of wrapped lines. Can be one of 'none', 'same', 'indent' or 'deepIndent'.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add multiple cursors with the mouse. `ctrlCmd` maps to `Control` on Windows and Linux and to `Command` on macOS. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier.",
			"Merge multiple cursors when they are overlapping.",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls if suggestions should automatically show up while typing",
			"Controls the delay in ms after which quick suggestions will show up",
			"Enables pop-up that shows parameter documentation and type information as you type",
			"Controls if the editor should automatically close brackets after opening them",
			"Controls if the editor should automatically format the line after typing",
			"Controls if the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls if the editor should automatically adjust the indentation when users type, paste or move lines. Indentation rules of the language must be available.",
			"Controls if suggestions should automatically show up when typing trigger characters",
			"Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change",
			"Controls if suggestions should be accepted on commit characters. For instance in JavaScript the semi-colon (';') can be a commit character that accepts a suggestion and types that character.",
			"Show snippet suggestions on top of other suggestions.",
			"Show snippet suggestions below other suggestions.",
			"Show snippets suggestions with other suggestions.",
			"Do not show snippet suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether completions should be computed based on words in the document.",
			"Always select the first suggestion.",
			"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"Controls how suggestions are pre-selected when showing the suggest list.",
			"Font size for the suggest widget",
			"Line height for the suggest widget",
			"Controls whether the editor should highlight similar matches to the selection",
			"Controls whether the editor should highlight semantic symbol occurrences",
			"Controls the number of decorations that can show up at the same position in the overview ruler",
			"Controls if a border should be drawn around the overview ruler.",
			"Control the cursor animation style.",
			"Zoom the font of the editor when using mouse wheel and holding Ctrl",
			"Controls the cursor style, accepted values are 'block', 'block-outline', 'line', 'line-thin', 'underline' and 'underline-thin'",
			"Controls the width of the cursor when editor.cursorStyle is set to 'line'",
			"Enables font ligatures",
			"Controls if the cursor should be hidden in the overview ruler.",
			"Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.",
			"Controls whether the editor should render control characters",
			"Controls whether the editor should render indent guides",
			"Controls whether the editor should highlight the active indent guide",
			"Controls how the editor should render the current line highlight, possibilities are 'none', 'gutter', 'line', and 'all'.",
			"Controls if the editor shows CodeLens",
			"Controls whether the editor has code folding enabled",
			"If available, use a language specific folding strategy, otherwise falls back to the indentation based strategy.",
			"Always use the indentation based folding strategy",
			"Controls the way folding ranges are computed. 'auto' picks uses a language specific folding strategy, if available. 'indentation' forces that the indentation based folding strategy is used.",
			"Controls whether the fold controls on the gutter are automatically hidden.",
			"Highlight matching brackets when one of them is selected.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Inserting and deleting whitespace follows tab stops",
			"Remove trailing auto inserted whitespace",
			"Keep peek editors open even when double clicking their content or when hitting Escape.",
			"Controls if the editor should allow to move selections via drag and drop.",
			"The editor will use platform APIs to detect when a Screen Reader is attached.",
			"The editor will be permanently optimized for usage with a Screen Reader.",
			"The editor will never be optimized for usage with a Screen Reader.",
			"Controls whether the editor should run in a mode where it is optimized for screen readers.",
			"Controls fading out of unused code.",
			"Controls whether the editor should detect links and make them clickable",
			"Controls whether the editor should render the inline color decorators and color picker.",
			"Enables the code action lightbulb",
			"Run organize imports on save?",
			"Code action kinds to be run on save.",
			"Timeout for code actions run on save.",
			"Controls if the Linux primary clipboard should be supported.",
			"Controls if the diff editor shows the diff side by side or inline",
			"Controls if the diff editor shows changes in leading or trailing whitespace as diffs",
			"Special handling for large files to disable certain memory intensive features.",
			"Controls if the diff editor shows +/- indicators for added/removed changes"
		],
		"vs/base/browser/ui/findinput/findInputCheckboxes": [
			"Match Case",
			"Match Whole Word",
			"Use Regular Expression"
		],
		"vs/workbench/browser/parts/editor/textEditor": [
			"{0}, {1}."
		],
		"vs/workbench/parts/preferences/browser/preferencesRenderers": [
			"Place your settings here to overwrite the Default Settings.",
			"Place your settings here to overwrite the User Settings.",
			"Place your folder settings here to overwrite those from the Workspace Settings.",
			"Report Issue",
			"Show Extension \"{0}\"",
			"Edit",
			"Replace in Settings",
			"Copy to Settings"
		],
		"vs/workbench/services/preferences/common/preferencesModels": [
			"Commonly Used",
			"Overwrite key bindings by placing them into your key bindings file."
		],
		"vs/workbench/parts/preferences/browser/settingsLayout": [
			"Commonly Used",
			"Text Editor",
			"Cursor",
			"Find",
			"Font",
			"Format",
			"Diff Editor",
			"Minimap",
			"Suggestions",
			"Files",
			"Text Editor",
			"Workbench",
			"Appearance",
			"Editor Management",
			"Settings Editor",
			"Zen Mode",
			"Workbench",
			"Window",
			"New Window",
			"Window",
			"Features",
			"File Explorer",
			"Search",
			"Debug",
			"SCM",
			"Extension Viewlet",
			"Terminal",
			"Problems",
			"Application",
			"Proxy",
			"Keyboard",
			"Update",
			"Telemetry"
		],
		"vs/workbench/parts/preferences/browser/settingsTree": [
			"(For settings editor preview) The foreground color for a modified setting.",
			"Workspace",
			"User",
			"Extensions",
			"Modified",
			"Also modified in",
			"Modified in",
			"Edit in settings.json",
			"{0} {1}, Setting",
			"{0}, group"
		],
		"vs/workbench/services/preferences/common/keybindingsEditorModel": [
			"Default",
			"User",
			"meta",
			"option"
		],
		"vs/base/common/keybindingLabels": [
			"Ctrl",
			"Shift",
			"Alt",
			"Windows",
			"Control",
			"Shift",
			"Alt",
			"Command",
			"Control",
			"Shift",
			"Alt",
			"Windows"
		],
		"vs/base/parts/quickopen/browser/quickOpenWidget": [
			"Quick picker. Type to narrow down results.",
			"Quick Picker"
		],
		"vs/workbench/browser/parts/quickinput/quickInputBox": [
			"Type to narrow down results."
		],
		"vs/workbench/services/textfile/common/textFileEditorModel": [
			"The file is dirty. Please save it first before reopening it with another encoding.",
			"Failed to save '{0}': {1}"
		],
		"vs/workbench/browser/parts/editor/textDiffEditor": [
			"Text Diff Editor",
			"{0}. Readonly text compare editor.",
			"Readonly text compare editor.",
			"{0}. Text file compare editor.",
			"Text file compare editor.",
			"Next Change",
			"Previous Change",
			"Ignore Trim Whitespace"
		],
		"vs/workbench/parts/files/electron-browser/views/explorerDecorationsProvider": [
			"Explorer",
			"Can not resolve workspace folder",
			"Symbolic Link"
		],
		"vs/workbench/browser/parts/editor/binaryEditor": [
			"Binary Viewer"
		],
		"vs/workbench/parts/search/browser/replaceService": [
			"{0} ↔ {1} (Replace Preview)"
		],
		"vs/base/browser/ui/toolbar/toolbar": [
			"More"
		],
		"vs/workbench/parts/debug/common/debugModel": [
			"not available",
			"Please start a debug session to evaluate"
		],
		"vs/workbench/parts/debug/electron-browser/electronDebugActions": [
			"Copy Value",
			"Copy as Expression",
			"Copy",
			"Copy All",
			"Copy Call Stack"
		],
		"vs/workbench/parts/debug/electron-browser/rawDebugSession": [
			"More Info",
			"Debug adapter process has terminated unexpectedly"
		],
		"vs/workbench/parts/debug/electron-browser/debugConfigurationManager": [
			"Debugger 'type' can not be omitted and must be of type 'string'.",
			"Select Environment",
			"Unable to create 'launch.json' file inside the '.vscode' folder ({0}).",
			"workspace",
			"user settings"
		],
		"vs/workbench/parts/debug/common/debugSource": [
			"Unknown Source"
		],
		"vs/workbench/parts/debug/electron-browser/debugHover": [
			"Debug Hover"
		],
		"vs/workbench/parts/debug/electron-browser/breakpointWidget": [
			"Message to log when breakpoint is hit. Expressions within {} are interpolated. 'Enter' to accept, 'esc' to cancel.",
			"Break when hit count condition is met. 'Enter' to accept, 'esc' to cancel.",
			"Break when expression evaluates to true. 'Enter' to accept, 'esc' to cancel.",
			"Expression",
			"Hit Count",
			"Log Message"
		],
		"vs/workbench/parts/debug/browser/exceptionWidget": [
			"Exception widget border color.",
			"Exception widget background color.",
			"Exception has occurred: {0}",
			"Exception has occurred."
		],
		"vs/workbench/parts/debug/browser/linkDetector": [
			"Click to follow (Cmd + click opens to the side)",
			"Click to follow (Ctrl + click opens to the side)"
		],
		"vs/workbench/parts/comments/common/commentModel": [
			"There are no comments on this review."
		],
		"vs/workbench/parts/comments/electron-browser/commentThreadWidget": [
			"Expand"
		],
		"vs/workbench/parts/extensions/browser/dependenciesViewer": [
			"Error",
			"Unknown Dependency:"
		],
		"vs/workbench/parts/extensions/browser/extensionsWidgets": [
			"Rated by {0} users",
			"Rated by 1 user"
		],
		"vs/workbench/parts/extensions/electron-browser/extensionsList": [
			"Press enter for extension details."
		],
		"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page": [
			"Visual Studio Code",
			"Editing evolved",
			"Start",
			"New file",
			"Open folder...",
			"Open folder...",
			"Add workspace folder...",
			"Recent",
			"More...",
			"No recent folders",
			"Help",
			"Printable keyboard cheatsheet",
			"Introductory videos",
			"Tips and Tricks",
			"Product documentation",
			"GitHub repository",
			"Stack Overflow",
			"Show welcome page on startup",
			"Customize",
			"Tools and languages",
			"Install support for {0} and {1}",
			"more",
			"Settings and keybindings",
			"Install the settings and keyboard shortcuts of {0} and {1}",
			"others",
			"Color theme",
			"Make the editor and your code look the way you love",
			"Learn",
			"Find and run all commands",
			"Rapidly access and search commands from the Command Palette ({0})",
			"Interface overview",
			"Get a visual overlay highlighting the major components of the UI",
			"Interactive playground",
			"Try essential editor features out in a short walkthrough"
		],
		"vs/workbench/parts/terminal/electron-browser/terminalInstance": [
			"Blank line",
			"Terminal input",
			"Too much output to announce, navigate to rows manually to read",
			"Yes",
			"All newly created terminals will use the non-GPU renderer.",
			"No",
			"Don't Show Again",
			"The standard renderer for the integrated terminal appears to be slow on your computer. Would you like to switch to the alternative DOM-based renderer which may improve performance? [Read more about terminal settings](https://code.visualstudio.com/docs/editor/integrated-terminal#_changing-how-the-terminal-is-rendered).",
			"The terminal has no selection to copy",
			"The terminal process terminated with exit code: {0}",
			"Press any key to close the terminal",
			"The terminal process command '{0}{1}' failed to launch (exit code: {2})",
			"The terminal process failed to launch (exit code: {0})"
		],
		"vs/workbench/browser/parts/compositebar/compositeBarActions": [
			"10k+",
			"{0} - {1}",
			"Additional Views",
			"{0} ({1})",
			"Manage Extension",
			"{0} ({1})",
			"Hide",
			"Keep",
			"Toggle View Pinned"
		],
		"vs/editor/contrib/find/simpleFindWidget": [
			"Find",
			"Find",
			"Previous match",
			"Next match",
			"Close"
		],
		"vs/workbench/browser/parts/compositebar/compositeBar": [
			"Active View Switcher"
		],
		"vs/workbench/browser/parts/compositePart": [
			"{0} actions",
			"{0} ({1})"
		],
		"vs/workbench/browser/parts/menubar/menubar.contribution": [
			"&&New File",
			"New &&Window",
			"&&Open File...",
			"Open &&Folder...",
			"Open Wor&&kspace...",
			"Open &&Recent",
			"A&&dd Folder to Workspace...",
			"Save Workspace As...",
			"&&Save",
			"Save &&As...",
			"Save A&&ll",
			"Auto Save",
			"&&Preferences",
			"Re&&vert File",
			"&&Close Editor",
			"Close &&Folder",
			"Clos&&e Window",
			"E&&xit",
			"&&Undo",
			"&&Redo",
			"Cu&&t",
			"&&Copy",
			"&&Paste",
			"&&Find",
			"&&Replace",
			"Find &&in Files",
			"Replace &&in Files",
			"&&Toggle Line Comment",
			"Toggle &&Block Comment",
			"Emmet: E&&xpand Abbreviation",
			"E&&mmet...",
			"&&Select All",
			"&&Expand Selection",
			"&&Shrink Selection",
			"&&Copy Line Up",
			"Co&&py Line Down",
			"Mo&&ve Line Up",
			"Move &&Line Down",
			"Switch to Alt+Click for Multi-Cursor",
			"&&Add Cursor Above",
			"A&&dd Cursor Below",
			"Add C&&ursors to Line Ends",
			"Add &&Next Occurrence",
			"Add P&&revious Occurrence",
			"Select All &&Occurrences",
			"&&Reopen Closed Editor",
			"&&More...",
			"&&Clear Recently Opened",
			"&&Command Palette...",
			"&&Open View...",
			"&&Explorer",
			"&&Search",
			"S&&CM",
			"&&Debug",
			"E&&xtensions",
			"&&Output",
			"De&&bug Console",
			"&&Integrated Terminal",
			"&&Problems",
			"Toggle &&Full Screen",
			"Toggle Zen Mode",
			"Toggle Centered Layout",
			"Toggle Menu &&Bar",
			"Editor &&Layout",
			"&&Toggle Side Bar",
			"&&Move Side Bar Left/Right",
			"&&Toggle Status Bar",
			"Toggle &&Activity Bar",
			"Toggle &&Panel",
			"Toggle &&Word Wrap",
			"Toggle &&Minimap",
			"Toggle &&Render Whitespace",
			"Toggle &&Control Characters",
			"&&Zoom In",
			"&&Zoom Out",
			"&&Reset Zoom",
			"Split &&Up",
			"Split &&Down",
			"Split &&Left",
			"Split &&Right",
			"&&Single",
			"&&Centered",
			"&&Two Columns",
			"T&&hree Columns",
			"T&&wo Rows",
			"Three &&Rows",
			"&&Grid (2x2)",
			"Two C&&olumns Right",
			"Two &&Columns Bottom",
			"Flip &&Layout",
			"&&Back",
			"&&Forward",
			"&&Next Editor",
			"&&Previous Editor",
			"&&Next Used Editor in Group",
			"&&Previous Used Editor in Group",
			"&&Next Group",
			"&&Previous Group",
			"Group &&Left",
			"Group &&Right",
			"Group &&Above",
			"Group &&Below",
			"Go to &&File...",
			"Go to &&Symbol in File...",
			"Go to Symbol in &&Workspace...",
			"Go to &&Definition",
			"Go to &&Definition",
			"Go to &&Implementation",
			"Go to &&Line...",
			"&&Start Debugging",
			"Start &&Without Debugging",
			"&&Stop Debugging",
			"&&Restart Debugging",
			"Open &&Configurations",
			"Add Configuration...",
			"Step &&Over",
			"Step &&Into",
			"Step O&&ut",
			"&&Continue",
			"Toggle &&Breakpoint",
			"Toggle &&Conditional Breakpoint...",
			"Toggle Inline Breakp&&oint",
			"Toggle &&Function Breakpoint...",
			"Toggle &&Logpoint...",
			"Enable All Breakpoints",
			"Disable A&&ll Breakpoints",
			"Remove &&All Breakpoints",
			"&&Run Task...",
			"Run &&Build Task...",
			"Show Runnin&&g Tasks...",
			"R&&estart Running Task...",
			"&&Terminate Task...",
			"&&Configure Tasks...",
			"Configure De&&fault Build Task...",
			"&&Settings",
			"&&Keyboard Shortcuts",
			"&&Keymap Extensions",
			"User &&Snippets",
			"&&Color Theme",
			"File &&Icon Theme",
			"&&Welcome",
			"&&Interactive Playground",
			"&&Documentation",
			"&&Release Notes",
			"&&Keyboard Shortcuts Reference",
			"Introductory &&Videos",
			"&&Tips and Tricks",
			"&&Join us on Twitter",
			"&&Search Feature Requests",
			"Report &&Issue",
			"View &&License",
			"&&Privacy Statement",
			"&&Toggle Developer Tools",
			"Open &&Process Explorer",
			"Accessibility &&Options",
			"&&About"
		],
		"vs/workbench/browser/parts/editor/editorGroupView": [
			"Editor group actions",
			"Close",
			"{0} (empty)",
			"Unable to open '{0}': {1}."
		],
		"vs/workbench/browser/parts/editor/editor.contribution": [
			"Text Editor",
			"Text Diff Editor",
			"Binary Diff Editor",
			"Side by Side Editor",
			"Show Editors in Active Group",
			"Show All Opened Editors",
			"View",
			"File",
			"Split Up",
			"Split Down",
			"Split Left",
			"Split Right",
			"Close",
			"Close",
			"Close Others",
			"Close to the Right",
			"Close Saved",
			"Close All",
			"Keep Open",
			"Split Up",
			"Split Down",
			"Split Left",
			"Split Right",
			"Toggle Inline View",
			"Show Opened Editors",
			"Close All",
			"Close Saved",
			"Split Editor Right",
			"Split Editor Down",
			"Split Editor Down",
			"Split Editor Right",
			"Close",
			"Close All",
			"Close",
			"Close All",
			"Keep Editor",
			"Close All Editors in Group",
			"Close Saved Editors in Group",
			"Close Other Editors in Group",
			"Close Editors to the Right in Group"
		],
		"vs/platform/keybinding/common/abstractKeybindingService": [
			"({0}) was pressed. Waiting for second key of chord...",
			"The key combination ({0}, {1}) is not a command."
		],
		"vs/workbench/services/configuration/node/configurationEditingService": [
			"Open Tasks Configuration",
			"Open Launch Configuration",
			"Open Settings",
			"Open Tasks Configuration",
			"Open Launch Configuration",
			"Save and Retry",
			"Save and Retry",
			"Open Settings",
			"Unable to write to {0} because {1} is not a registered configuration.",
			"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",
			"Unable to write to Folder Settings because {0} does not support the folder resource scope.",
			"Unable to write to User Settings because {0} does not support for global scope.",
			"Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.",
			"Unable to write to Folder Settings because no resource is provided.",
			"Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.",
			"Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.",
			"Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.",
			"Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.",
			"Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.",
			"Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.",
			"Unable to write into tasks configuration file because the file is dirty. Please save it first and then try again.",
			"Unable to write into launch configuration file because the file is dirty. Please save it first and then try again.",
			"Unable to write into user settings because the file is dirty. Please save the user settings file first and then try again.",
			"Unable to write into workspace settings because the file is dirty. Please save the workspace settings file first and then try again.",
			"Unable to write into folder settings because the file is dirty. Please save the '{0}' folder settings file first and then try again.",
			"User Settings",
			"Workspace Settings",
			"Folder Settings"
		],
		"vs/workbench/services/files/electron-browser/fileService": [
			"The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.",
			"Download .NET Framework 4.5",
			"Don't Show Again",
			"{0} is unable to watch for file changes in this large workspace. Please follow the instructions link to resolve this issue.",
			"Instructions",
			"Don't Show Again",
			"Invalid file resource ({0})",
			"File is directory",
			"File not modified since",
			"To open a file of this size, you need to restart VS Code and allow it to use more memory",
			"File too large to open",
			"File not found ({0})",
			"File not found ({0})",
			"File is directory",
			"To open a file of this size, you need to restart VS Code and allow it to use more memory",
			"File too large to open",
			"File seems to be binary and cannot be opened as text",
			"Permission denied writing to file ({0})",
			"Permission denied writing to file ({0})",
			"File to create already exists ({0})",
			"File Modified Since",
			"File is Read Only",
			"Unable to move/copy. File already exists at destination.",
			"Unable to move/copy. File would replace folder it is contained in.",
			"Failed to move '{0}' to the recycle bin",
			"Failed to move '{0}' to the trash",
			"Failed to delete non-empty folder '{0}'."
		],
		"vs/workbench/services/configurationResolver/node/variableResolver": [
			"'{0}' can not be resolved because no environment variable name is given.",
			"'{0}' can not be resolved because setting '{1}' not found.",
			"'{0}' can not be resolved because '{1}' is a structured value.",
			"'{0}' can not be resolved because no settings name is given.",
			"'{0}' can not be resolved because the command has no value.",
			"'{0}' can not be resolved. No such folder '{1}'.",
			"'{0}' can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.",
			"'{0}' can not be resolved. Please open a folder.",
			"'{0}' can not be resolved. Please open an editor.",
			"'{0}' can not be resolved. Make sure to have a line selected in the active editor.",
			"'{0}' can not be resolved. Make sure to have some text selected in the active editor."
		],
		"vs/workbench/services/textfile/common/textFileService": [
			"Files that are dirty could not be written to the backup location (Error: {0}). Try saving your files first and then exit."
		],
		"vs/workbench/browser/parts/notifications/notificationsActions": [
			"Clear Notification",
			"Clear All Notifications",
			"Hide Notifications",
			"Expand Notification",
			"Collapse Notification",
			"Configure Notification",
			"Copy Text"
		],
		"vs/workbench/parts/tasks/common/taskDefinitionRegistry": [
			"The actual task type. Please note that types starting with a '$' are reserved for internal usage.",
			"Additional properties of the task type",
			"The task type configuration is missing the required 'taskType' property",
			"Contributes task kinds"
		],
		"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon": [
			"Additional command options",
			"The current working directory of the executed program or script. If omitted Code's current workspace root is used.",
			"The environment of the executed program or shell. If omitted the parent process' environment is used.",
			"Configures the shell to be used.",
			"The shell to be used.",
			"The shell arguments.",
			"The command to be executed. Can be an external program or a shell command.",
			"Arguments passed to the command when this task is invoked.",
			"The task's name",
			"The command to be executed. Can be an external program or a shell command.",
			"Arguments passed to the command when this task is invoked.",
			"Windows specific command configuration",
			"Mac specific command configuration",
			"Linux specific command configuration",
			"Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.",
			"Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Deprecated. Use isBackground instead.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Whether the executed task is kept alive and is running in the background.",
			"Whether the user is prompted when VS Code closes with a running task.",
			"Maps this task to Code's default build command.",
			"Maps this task to Code's default test command.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The command to be executed. Can be an external program or a shell command.",
			"Additional arguments passed to the command.",
			"Controls whether the output of the running task is shown or not. If omitted 'always' is used.",
			"Deprecated. Use isBackground instead.",
			"Whether the executed task is kept alive and is watching the file system.",
			"Whether the executed task is kept alive and is running in the background.",
			"Whether the user is prompted when VS Code closes with a running background task.",
			"Controls whether the executed command is echoed to the output. Default is false.",
			"Controls whether the task name is added as an argument to the command. Default is false.",
			"Prefix to indicate that an argument is task.",
			"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"The task configurations. Usually these are enrichments of task already defined in the external task runner."
		],
		"vs/editor/contrib/snippet/snippetVariables": [
			"Sunday",
			"Monday",
			"Tuesday",
			"Wednesday",
			"Thursday",
			"Friday",
			"Saturday",
			"Sun",
			"Mon",
			"Tue",
			"Wed",
			"Thu",
			"Fri",
			"Sat",
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December",
			"Jan",
			"Feb",
			"Mar",
			"Apr",
			"May",
			"Jun",
			"Jul",
			"Aug",
			"Sep",
			"Oct",
			"Nov",
			"Dec"
		],
		"vs/workbench/parts/feedback/electron-browser/feedback": [
			"Tweet Feedback",
			"Tweet us your feedback.",
			"Close",
			"Your installation is corrupt.",
			"Please specify this if you submit a bug.",
			"How was your experience?",
			"Happy Feedback Sentiment",
			"Happy Feedback Sentiment",
			"Sad Feedback Sentiment",
			"Sad Feedback Sentiment",
			"Other ways to contact us",
			"Submit a bug",
			"Request a missing feature",
			"Tell us why?",
			"Tell us your feedback",
			"Show Feedback Smiley in Status Bar",
			"Tweet",
			"Tweet Feedback",
			"character left",
			"characters left",
			"Sending",
			"Thanks",
			"Try again"
		],
		"vs/workbench/parts/update/electron-browser/releaseNotesEditor": [
			"Release Notes: {0}",
			"unassigned"
		],
		"vs/workbench/parts/debug/node/debugAdapter": [
			"Debug adapter executable '{0}' does not exist.",
			"Cannot determine executable for debug adapter '{0}'.",
			"Unable to launch debug adapter from '{0}'.",
			"Unable to launch debug adapter."
		],
		"vs/workbench/services/extensions/electron-browser/extensionService": [
			"All extensions are temporarily disabled. Reload the window to return to the previous state.",
			"Reload",
			"Extension host terminated unexpectedly.",
			"Extension host terminated because it was not responsive.",
			"Open Developer Tools",
			"Restart Extension Host",
			"Overwriting extension {0} with {1}.",
			"Loading development extension at {0}",
			"Overwriting extension {0} with {1}.",
			"Extensions have been modified on disk. Please reload the window.",
			"Reload Window"
		],
		"vs/workbench/electron-browser/window": [
			"Undo",
			"Redo",
			"Cut",
			"Copy",
			"Paste",
			"Select All",
			"It is not recommended to run {0} as root user."
		],
		"vs/editor/common/services/modelServiceImpl": [
			"[{0}]\n{1}",
			"[{0}] {1}"
		],
		"vs/platform/integrity/node/integrityServiceImpl": [
			"Your {0} installation appears to be corrupt. Please reinstall.",
			"More Information",
			"Don't Show Again"
		],
		"vs/workbench/services/crashReporter/electron-browser/crashReporterService": [
			"Telemetry",
			"Enable crash reports to be sent to Microsoft.\nThis option requires restart to take effect."
		],
		"vs/platform/extensionManagement/common/extensionEnablementService": [
			"No workspace."
		],
		"vs/workbench/services/themes/electron-browser/workbenchThemeService": [
			"Unable to load {0}: {1}",
			"Specifies the color theme used in the workbench.",
			"Theme is unknown or not installed.",
			"Specifies the icon theme used in the workbench or 'null' to not show any file icons.",
			"No file icons",
			"File icon theme is unknown or not installed.",
			"Overrides colors from the currently selected color theme.",
			"Sets the colors and styles for comments",
			"Sets the colors and styles for strings literals.",
			"Sets the colors and styles for keywords.",
			"Sets the colors and styles for number literals.",
			"Sets the colors and styles for type declarations and references.",
			"Sets the colors and styles for functions declarations and references.",
			"Sets the colors and styles for variables declarations and references.",
			"Sets colors and styles using textmate theming rules (advanced).",
			"Overrides editor colors and font style from the currently selected color theme."
		],
		"vs/workbench/services/textMate/electron-browser/TMSyntax": [
			"Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"Expected string in `contributes.{0}.scopeName`. Provided value: {1}",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}",
			"Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}",
			"Invalid value in `contributes.{0}.tokenTypes`. Must be an object map from scope name to token type. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"No TM Grammar registered for this language.",
			"Tokenization is skipped for lines longer than 20k characters for performance reasons."
		],
		"vs/workbench/services/dialogs/electron-browser/dialogService": [
			"&&Yes",
			"Cancel"
		],
		"vs/editor/contrib/documentSymbols/outlineTree": [
			"{0} ({1})",
			"Outline Provider",
			"1 problem in this element",
			"{0} problems in this element",
			"Contains elements with problems",
			"array",
			"boolean",
			"class",
			"constant",
			"constructor",
			"enumeration",
			"enumeration member",
			"event",
			"field",
			"file",
			"function",
			"interface",
			"key",
			"method",
			"module",
			"namespace",
			"null",
			"number",
			"object",
			"operator",
			"package",
			"property",
			"string",
			"struct",
			"type parameter",
			"variable"
		],
		"vs/code/electron-main/menubar": [
			"New &&Window",
			"&&File",
			"&&Edit",
			"&&Recent",
			"&&Selection",
			"&&View",
			"&&Layout",
			"&&Go",
			"&&Debug",
			"&&Tasks",
			"Window",
			"&&Preferences",
			"&&Help",
			"About {0}",
			"Services",
			"Hide {0}",
			"Hide Others",
			"Show All",
			"Quit {0}",
			"&&New File",
			"New &&Window",
			"&&Open...",
			"Open Wor&&kspace...",
			"&&Reopen Closed Editor",
			"&&More...",
			"&&Clear Recently Opened",
			"&&Join us on Twitter",
			"&&Search Feature Requests",
			"Report &&Issue",
			"View &&License",
			"&&Privacy Statement",
			"Open &&Process Explorer",
			"Minimize",
			"Zoom",
			"Bring All to Front",
			"Switch &&Window...",
			"Show Previous Tab",
			"Show Next Tab",
			"Move Tab to New Window",
			"Merge All Windows",
			"Check for Updates...",
			"Checking For Updates...",
			"Download Available Update",
			"Downloading Update...",
			"Install Update...",
			"Installing Update...",
			"Restart to Update..."
		],
		"vs/workbench/browser/parts/editor/resourceViewer": [
			"{0}B",
			"{0}KB",
			"{0}MB",
			"{0}GB",
			"{0}TB",
			"The image is not displayed in the editor because it is too large ({0}).",
			"Open image using external program?",
			"The file is not displayed in the editor because it is too large ({0}).",
			"The file is not displayed in the editor because it is either binary or uses an unsupported text encoding.",
			"Do you want to open it anyway?",
			"Whole Image",
			"{0}x{1} {2}"
		],
		"vs/base/browser/ui/selectBox/selectBoxCustom": [
			"{0}"
		],
		"vs/workbench/parts/debug/node/debugger": [
			"Use IntelliSense to learn about possible attributes.",
			"Hover to view descriptions of existing attributes.",
			"For more information, visit: {0}",
			"Type of configuration.",
			"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.",
			"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".",
			"Name of configuration; appears in the launch configuration drop down menu.",
			"Request type of configuration. Can be \"launch\" or \"attach\".",
			"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode",
			"Task to run before debug session starts.",
			"Task to run after debug session ends.",
			"Windows specific launch configuration attributes.",
			"OS X specific launch configuration attributes.",
			"Linux specific launch configuration attributes.",
			"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."
		],
		"vs/workbench/parts/debug/electron-browser/terminalSupport": [
			"debuggee"
		],
		"vs/workbench/parts/debug/common/debugSchemas": [
			"Contributes debug adapters.",
			"Unique identifier for this debug adapter.",
			"Display name for this debug adapter.",
			"Path to the debug adapter program. Path is either absolute or relative to the extension folder.",
			"Optional arguments to pass to the adapter.",
			"Optional runtime in case the program attribute is not an executable but requires a runtime.",
			"Optional runtime arguments.",
			"Mapping from interactive variables (e.g ${action.pickProcess}) in `launch.json` to a command.",
			"Configurations for generating the initial 'launch.json'.",
			"List of languages for which the debug extension could be considered the \"default debugger\".",
			"If specified VS Code will call this command to determine the executable path of the debug adapter and the arguments to pass.",
			"Snippets for adding new configurations in 'launch.json'.",
			"JSON schema configurations for validating 'launch.json'.",
			"Windows specific settings.",
			"Runtime used for Windows.",
			"macOS specific settings.",
			"Runtime used for macOS.",
			"Linux specific settings.",
			"Runtime used for Linux.",
			"Contributes breakpoints.",
			"Allow breakpoints for this language.",
			"Launch",
			"Version of this file format.",
			"List of configurations. Add new configurations or edit existing ones by using IntelliSense.",
			"List of compounds. Each compound references multiple configurations which will get launched together.",
			"Name of compound. Appears in the launch configuration drop down menu.",
			"Please use unique configuration names.",
			"Name of compound. Appears in the launch configuration drop down menu.",
			"Name of folder in which the compound is located.",
			"Names of configurations that will be started as part of this compound."
		],
		"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler": [
			"Alt + click to follow link",
			"Cmd + click to follow link",
			"Ctrl + click to follow link"
		],
		"vs/workbench/browser/parts/editor/tabsTitleControl": [
			"Tab actions"
		],
		"vs/workbench/browser/parts/editor/binaryDiffEditor": [
			"{0} ↔ {1}"
		],
		"vs/workbench/browser/parts/editor/editorStatus": [
			"Ln {0}, Col {1} ({2} selected)",
			"Ln {0}, Col {1}",
			"{0} selections ({1} characters selected)",
			"{0} selections",
			"LF",
			"CRLF",
			"Tab Moves Focus",
			"Screen Reader Optimized",
			"If you are not using a Screen Reader, please change the setting `editor.accessibilitySupport` to \"off\".",
			"Disable Accessibility Mode",
			"Go to Line",
			"Select Indentation",
			"Select Encoding",
			"Select End of Line Sequence",
			"Select Language Mode",
			"File Information",
			"Spaces: {0}",
			"Tab Size: {0}",
			"Search Marketplace Extensions for '{0}'...",
			"Change Language Mode",
			"No text editor active at this time",
			"({0}) - Configured Language",
			"({0})",
			"languages (identifier)",
			"Configure '{0}' language based settings...",
			"Configure File Association for '{0}'...",
			"Auto Detect",
			"Select Language Mode",
			"Current Association",
			"Select Language Mode to Associate with '{0}'",
			"Change Indentation",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"change view",
			"convert file",
			"Select Action",
			"Change End of Line Sequence",
			"No text editor active at this time",
			"The active code editor is read-only.",
			"Select End of Line Sequence",
			"Change File Encoding",
			"No text editor active at this time",
			"No file active at this time",
			"Save with Encoding",
			"Reopen with Encoding",
			"Save with Encoding",
			"Reopen with Encoding",
			"Select Action",
			"Guessed from content",
			"Select File Encoding to Reopen File",
			"Select File Encoding to Save with",
			"Screen Reader Optimized",
			"Are you using a screen reader to operate VS Code?",
			"Yes",
			"No",
			"VS Code is now optimized for usage with a screen reader.",
			"Some editor features will have different behaviour: e.g. word wrapping, folding, etc."
		],
		"vs/workbench/browser/parts/notifications/notificationsViewer": [
			"Notification Actions",
			"Source: {0}"
		],
		"vs/workbench/services/textMate/electron-browser/TMGrammars": [
			"Contributes textmate tokenizers.",
			"Language identifier for which this syntax is contributed to.",
			"Textmate scope name used by the tmLanguage file.",
			"Path of the tmLanguage file. The path is relative to the extension folder and typically starts with './syntaxes/'.",
			"A map of scope name to language id if this grammar contains embedded languages.",
			"A map of scope name to token types.",
			"List of language scope names to which this grammar is injected to."
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"Failed to parse {0}: {1}.",
			"Cannot read file {0}: {1}.",
			"Failed to parse {0}: {1}.",
			"Couldn't find message for key {0}.",
			"Extension version is not semver compatible.",
			"Got empty extension description",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted"
		],
		"vs/workbench/services/extensions/electron-browser/extensionHost": [
			"Extension host did not start in 10 seconds, it might be stopped on the first line and needs a debugger to continue.",
			"Extension host did not start in 10 seconds, that might be a problem.",
			"Reload Window",
			"Error from the extension host: {0}"
		],
		"vs/workbench/services/themes/electron-browser/colorThemeData": [
			"Problems parsing JSON theme file: {0}",
			"Problem parsing color theme file: {0}. Property 'colors' is not of type 'object'.",
			"Problem parsing color theme file: {0}. Property 'tokenColors' should be either an array specifying colors or a path to a TextMate theme file",
			"Problem parsing tmTheme file: {0}. 'settings' is not array.",
			"Problems parsing tmTheme file: {0}",
			"Problems loading tmTheme file {0}: {1}"
		],
		"vs/workbench/services/themes/common/fileIconThemeSchema": [
			"The folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for folder will be shown.",
			"The folder icon for collapsed folders, and if folderExpanded is not set, also for expanded folders.",
			"The default file icon, shown for all files that don't match any extension, filename or language id.",
			"Associates folder names to icons. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates folder names to icons for expanded folders. The object key is is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file extensions to icons. The object key is is the file extension name. The extension name is the last segment of a file name after the last dot (not including the dot). Extensions are compared case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates file names to icons. The object key is is the full file name, but not including any path segments. File name can include dots and a possible file extension. No patterns or wildcards are allowed. File name matching is case insensitive.",
			"The ID of the icon definition for the association.",
			"Associates languages to icons. The object key is the language id as defined in the language contribution point.",
			"The ID of the icon definition for the association.",
			"Fonts that are used in the icon definitions.",
			"The ID of the font.",
			"The location of the font.",
			"The font path, relative to the current icon theme file.",
			"The format of the font.",
			"The weight of the font.",
			"The style of the font.",
			"The default size of the font.",
			"Description of all icons that can be used when associating files to icons.",
			"An icon definition. The object key is the ID of the definition.",
			"When using a SVG or PNG: The path to the image. The path is relative to the icon set file.",
			"When using a glyph font: The character in the font to use.",
			"When using a glyph font: The color to use.",
			"When using a font: The font size in percentage to the text font. If not set, defaults to the size in the font definition.",
			"When using a font: The id of the font. If not set, defaults to the first font definition.",
			"Optional associations for file icons in light color themes.",
			"Optional associations for file icons in high contrast color themes.",
			"Configures whether the file explorer's arrows should be hidden when this theme is active."
		],
		"vs/workbench/services/themes/electron-browser/colorThemeStore": [
			"Contributes textmate color themes.",
			"Id of the icon theme as used in the user settings.",
			"Label of the color theme as shown in the UI.",
			"Base theme defining the colors around the editor: 'vs' is the light color theme, 'vs-dark' is the dark color theme. 'hc-black' is the dark high contrast theme.",
			"Path of the tmTheme file. The path is relative to the extension folder and is typically './themes/themeFile.tmTheme'.",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		],
		"vs/workbench/services/themes/electron-browser/fileIconThemeStore": [
			"Contributes file icon themes.",
			"Id of the icon theme as used in the user settings.",
			"Label of the icon theme as shown in the UI.",
			"Path of the icon theme definition file. The path is relative to the extension folder and is typically './icons/awesome-icon-theme.json'.",
			"Extension point `{0}` must be an array.",
			"Expected string in `contributes.{0}.path`. Provided value: {1}",
			"Expected string in `contributes.{0}.id`. Provided value: {1}",
			"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		],
		"vs/workbench/services/themes/electron-browser/fileIconThemeData": [
			"Problems parsing file icons file: {0}"
		],
		"vs/workbench/api/node/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/workbench/api/node/extHostTreeViews": [
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"Element with id {0} is already registered"
		],
		"vs/workbench/api/node/extHostProgress": [
			"{0} (Extension)"
		],
		"vs/workbench/api/node/extHostTask": [
			"{0}: {1}"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debuggee"
		],
		"vs/workbench/parts/debug/node/terminals": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}"
		],
		"vs/workbench/browser/parts/editor/titleControl": [
			"Editor actions",
			"{0} (+{1})"
		],
		"vs/editor/contrib/indentation/indentation": [
			"Convert Indentation to Spaces",
			"Convert Indentation to Tabs",
			"Configured Tab Size",
			"Select Tab Size for Current File",
			"Indent Using Tabs",
			"Indent Using Spaces",
			"Detect Indentation from Content",
			"Reindent Lines",
			"Reindent Selected Lines"
		],
		"vs/base/common/jsonErrorMessages": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		]
	},
	"bundles": {
		"vs/workbench/workbench.main": [
			"vs/base/browser/ui/actionbar/actionbar",
			"vs/base/browser/ui/aria/aria",
			"vs/base/browser/ui/findinput/findInput",
			"vs/base/browser/ui/findinput/findInputCheckboxes",
			"vs/base/browser/ui/inputbox/inputBox",
			"vs/base/browser/ui/selectBox/selectBoxCustom",
			"vs/base/browser/ui/toolbar/toolbar",
			"vs/base/common/errorMessage",
			"vs/base/common/jsonErrorMessages",
			"vs/base/common/keybindingLabels",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/base/parts/quickopen/browser/quickOpenModel",
			"vs/base/parts/quickopen/browser/quickOpenWidget",
			"vs/base/parts/tree/browser/treeDefaults",
			"vs/editor/browser/widget/codeEditorWidget",
			"vs/editor/browser/widget/diffEditorWidget",
			"vs/editor/browser/widget/diffReview",
			"vs/editor/common/config/commonEditorConfig",
			"vs/editor/common/config/editorOptions",
			"vs/editor/common/controller/cursor",
			"vs/editor/common/modes/modesRegistry",
			"vs/editor/common/services/modelServiceImpl",
			"vs/editor/common/view/editorColorRegistry",
			"vs/editor/contrib/bracketMatching/bracketMatching",
			"vs/editor/contrib/caretOperations/caretOperations",
			"vs/editor/contrib/caretOperations/transpose",
			"vs/editor/contrib/clipboard/clipboard",
			"vs/editor/contrib/codeAction/codeActionCommands",
			"vs/editor/contrib/comment/comment",
			"vs/editor/contrib/contextmenu/contextmenu",
			"vs/editor/contrib/cursorUndo/cursorUndo",
			"vs/editor/contrib/documentSymbols/outlineTree",
			"vs/editor/contrib/find/findController",
			"vs/editor/contrib/find/findWidget",
			"vs/editor/contrib/find/simpleFindWidget",
			"vs/editor/contrib/folding/folding",
			"vs/editor/contrib/fontZoom/fontZoom",
			"vs/editor/contrib/format/formatActions",
			"vs/editor/contrib/goToDefinition/goToDefinitionCommands",
			"vs/editor/contrib/goToDefinition/goToDefinitionMouse",
			"vs/editor/contrib/gotoError/gotoError",
			"vs/editor/contrib/gotoError/gotoErrorWidget",
			"vs/editor/contrib/hover/hover",
			"vs/editor/contrib/hover/modesContentHover",
			"vs/editor/contrib/inPlaceReplace/inPlaceReplace",
			"vs/editor/contrib/indentation/indentation",
			"vs/editor/contrib/linesOperations/linesOperations",
			"vs/editor/contrib/links/links",
			"vs/editor/contrib/message/messageController",
			"vs/editor/contrib/multicursor/multicursor",
			"vs/editor/contrib/parameterHints/parameterHints",
			"vs/editor/contrib/parameterHints/parameterHintsWidget",
			"vs/editor/contrib/referenceSearch/peekViewWidget",
			"vs/editor/contrib/referenceSearch/referenceSearch",
			"vs/editor/contrib/referenceSearch/referencesController",
			"vs/editor/contrib/referenceSearch/referencesModel",
			"vs/editor/contrib/referenceSearch/referencesWidget",
			"vs/editor/contrib/rename/rename",
			"vs/editor/contrib/rename/renameInputField",
			"vs/editor/contrib/smartSelect/smartSelect",
			"vs/editor/contrib/snippet/snippetVariables",
			"vs/editor/contrib/suggest/suggestController",
			"vs/editor/contrib/suggest/suggestWidget",
			"vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode",
			"vs/editor/contrib/wordHighlighter/wordHighlighter",
			"vs/platform/actions/browser/menuItemActionItem",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/dialogs/common/dialogs",
			"vs/platform/extensionManagement/common/extensionEnablementService",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/integrity/node/integrityServiceImpl",
			"vs/platform/keybinding/common/abstractKeybindingService",
			"vs/platform/list/browser/listService",
			"vs/platform/markers/common/markers",
			"vs/platform/node/minimalTranslations",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/platform/theme/common/colorRegistry",
			"vs/platform/update/node/update.config.contribution",
			"vs/platform/url/electron-browser/inactiveExtensionUrlHandler",
			"vs/platform/workspaces/common/workspaces",
			"vs/workbench/api/browser/viewsContainersExtensionPoint",
			"vs/workbench/api/browser/viewsExtensionPoint",
			"vs/workbench/api/electron-browser/mainThreadEditors",
			"vs/workbench/api/electron-browser/mainThreadMessageService",
			"vs/workbench/api/electron-browser/mainThreadSaveParticipant",
			"vs/workbench/api/electron-browser/mainThreadTask",
			"vs/workbench/api/electron-browser/mainThreadWebview",
			"vs/workbench/api/electron-browser/mainThreadWorkspace",
			"vs/workbench/browser/actions/toggleActivityBarVisibility",
			"vs/workbench/browser/actions/toggleCenteredLayout",
			"vs/workbench/browser/actions/toggleEditorLayout",
			"vs/workbench/browser/actions/toggleSidebarPosition",
			"vs/workbench/browser/actions/toggleSidebarVisibility",
			"vs/workbench/browser/actions/toggleStatusbarVisibility",
			"vs/workbench/browser/actions/toggleTabsVisibility",
			"vs/workbench/browser/actions/toggleZenMode",
			"vs/workbench/browser/actions/workspaceActions",
			"vs/workbench/browser/actions/workspaceCommands",
			"vs/workbench/browser/parts/activitybar/activitybarPart",
			"vs/workbench/browser/parts/compositePart",
			"vs/workbench/browser/parts/compositebar/compositeBar",
			"vs/workbench/browser/parts/compositebar/compositeBarActions",
			"vs/workbench/browser/parts/editor/binaryDiffEditor",
			"vs/workbench/browser/parts/editor/binaryEditor",
			"vs/workbench/browser/parts/editor/editor.contribution",
			"vs/workbench/browser/parts/editor/editorActions",
			"vs/workbench/browser/parts/editor/editorCommands",
			"vs/workbench/browser/parts/editor/editorGroupView",
			"vs/workbench/browser/parts/editor/editorPart",
			"vs/workbench/browser/parts/editor/editorPicker",
			"vs/workbench/browser/parts/editor/editorStatus",
			"vs/workbench/browser/parts/editor/resourceViewer",
			"vs/workbench/browser/parts/editor/tabsTitleControl",
			"vs/workbench/browser/parts/editor/textDiffEditor",
			"vs/workbench/browser/parts/editor/textEditor",
			"vs/workbench/browser/parts/editor/textResourceEditor",
			"vs/workbench/browser/parts/editor/titleControl",
			"vs/workbench/browser/parts/menubar/menubar.contribution",
			"vs/workbench/browser/parts/menubar/menubarPart",
			"vs/workbench/browser/parts/notifications/notificationsActions",
			"vs/workbench/browser/parts/notifications/notificationsAlerts",
			"vs/workbench/browser/parts/notifications/notificationsCenter",
			"vs/workbench/browser/parts/notifications/notificationsCommands",
			"vs/workbench/browser/parts/notifications/notificationsStatus",
			"vs/workbench/browser/parts/notifications/notificationsToasts",
			"vs/workbench/browser/parts/notifications/notificationsViewer",
			"vs/workbench/browser/parts/panel/panelActions",
			"vs/workbench/browser/parts/panel/panelPart",
			"vs/workbench/browser/parts/quickinput/quickInput",
			"vs/workbench/browser/parts/quickinput/quickInputBox",
			"vs/workbench/browser/parts/quickopen/quickOpenController",
			"vs/workbench/browser/parts/quickopen/quickopen",
			"vs/workbench/browser/parts/sidebar/sidebarPart",
			"vs/workbench/browser/parts/statusbar/statusbarPart",
			"vs/workbench/browser/parts/titlebar/titlebarPart",
			"vs/workbench/browser/parts/views/panelViewlet",
			"vs/workbench/browser/parts/views/viewsViewlet",
			"vs/workbench/browser/quickopen",
			"vs/workbench/browser/viewlet",
			"vs/workbench/common/theme",
			"vs/workbench/common/views",
			"vs/workbench/electron-browser/actions",
			"vs/workbench/electron-browser/main",
			"vs/workbench/electron-browser/main.contribution",
			"vs/workbench/electron-browser/removedKeybindingsContribution",
			"vs/workbench/electron-browser/window",
			"vs/workbench/electron-browser/workbench",
			"vs/workbench/parts/cli/electron-browser/cli.contribution",
			"vs/workbench/parts/codeEditor/electron-browser/accessibility",
			"vs/workbench/parts/codeEditor/electron-browser/inspectKeybindings",
			"vs/workbench/parts/codeEditor/electron-browser/languageConfiguration/languageConfigurationExtensionPoint",
			"vs/workbench/parts/codeEditor/electron-browser/largeFileOptimizations",
			"vs/workbench/parts/codeEditor/electron-browser/textMate/inspectTMScopes",
			"vs/workbench/parts/codeEditor/electron-browser/toggleMinimap",
			"vs/workbench/parts/codeEditor/electron-browser/toggleMultiCursorModifier",
			"vs/workbench/parts/codeEditor/electron-browser/toggleRenderControlCharacter",
			"vs/workbench/parts/codeEditor/electron-browser/toggleRenderWhitespace",
			"vs/workbench/parts/codeEditor/electron-browser/toggleWordWrap",
			"vs/workbench/parts/comments/common/commentModel",
			"vs/workbench/parts/comments/electron-browser/commentThreadWidget",
			"vs/workbench/parts/debug/browser/breakpointsView",
			"vs/workbench/parts/debug/browser/debugActionItems",
			"vs/workbench/parts/debug/browser/debugActions",
			"vs/workbench/parts/debug/browser/debugActionsWidget",
			"vs/workbench/parts/debug/browser/debugCommands",
			"vs/workbench/parts/debug/browser/debugContentProvider",
			"vs/workbench/parts/debug/browser/debugEditorActions",
			"vs/workbench/parts/debug/browser/debugQuickOpen",
			"vs/workbench/parts/debug/browser/debugStatus",
			"vs/workbench/parts/debug/browser/debugViewlet",
			"vs/workbench/parts/debug/browser/exceptionWidget",
			"vs/workbench/parts/debug/browser/linkDetector",
			"vs/workbench/parts/debug/browser/statusbarColorProvider",
			"vs/workbench/parts/debug/common/debug",
			"vs/workbench/parts/debug/common/debugModel",
			"vs/workbench/parts/debug/common/debugSchemas",
			"vs/workbench/parts/debug/common/debugSource",
			"vs/workbench/parts/debug/electron-browser/breakpointWidget",
			"vs/workbench/parts/debug/electron-browser/callStackView",
			"vs/workbench/parts/debug/electron-browser/debug.contribution",
			"vs/workbench/parts/debug/electron-browser/debugConfigurationManager",
			"vs/workbench/parts/debug/electron-browser/debugEditorContribution",
			"vs/workbench/parts/debug/electron-browser/debugHover",
			"vs/workbench/parts/debug/electron-browser/debugService",
			"vs/workbench/parts/debug/electron-browser/electronDebugActions",
			"vs/workbench/parts/debug/electron-browser/rawDebugSession",
			"vs/workbench/parts/debug/electron-browser/repl",
			"vs/workbench/parts/debug/electron-browser/replViewer",
			"vs/workbench/parts/debug/electron-browser/terminalSupport",
			"vs/workbench/parts/debug/electron-browser/variablesView",
			"vs/workbench/parts/debug/electron-browser/watchExpressionsView",
			"vs/workbench/parts/debug/node/debugAdapter",
			"vs/workbench/parts/debug/node/debugger",
			"vs/workbench/parts/debug/node/terminals",
			"vs/workbench/parts/emmet/browser/actions/showEmmetCommands",
			"vs/workbench/parts/emmet/electron-browser/actions/expandAbbreviation",
			"vs/workbench/parts/execution/electron-browser/execution.contribution",
			"vs/workbench/parts/execution/electron-browser/terminalService",
			"vs/workbench/parts/extensions/browser/dependenciesViewer",
			"vs/workbench/parts/extensions/browser/extensionsQuickOpen",
			"vs/workbench/parts/extensions/browser/extensionsWidgets",
			"vs/workbench/parts/extensions/common/extensionsFileTemplate",
			"vs/workbench/parts/extensions/common/extensionsInput",
			"vs/workbench/parts/extensions/electron-browser/extensionEditor",
			"vs/workbench/parts/extensions/electron-browser/extensionProfileService",
			"vs/workbench/parts/extensions/electron-browser/extensionTipsService",
			"vs/workbench/parts/extensions/electron-browser/extensions.contribution",
			"vs/workbench/parts/extensions/electron-browser/extensionsActions",
			"vs/workbench/parts/extensions/electron-browser/extensionsList",
			"vs/workbench/parts/extensions/electron-browser/extensionsUtils",
			"vs/workbench/parts/extensions/electron-browser/extensionsViewlet",
			"vs/workbench/parts/extensions/electron-browser/extensionsViews",
			"vs/workbench/parts/extensions/electron-browser/runtimeExtensionsEditor",
			"vs/workbench/parts/extensions/node/extensionsWorkbenchService",
			"vs/workbench/parts/feedback/electron-browser/feedback",
			"vs/workbench/parts/feedback/electron-browser/feedback.contribution",
			"vs/workbench/parts/feedback/electron-browser/feedbackStatusbarItem",
			"vs/workbench/parts/files/browser/editors/binaryFileEditor",
			"vs/workbench/parts/files/browser/editors/textFileEditor",
			"vs/workbench/parts/files/common/dirtyFilesTracker",
			"vs/workbench/parts/files/common/editors/fileEditorInput",
			"vs/workbench/parts/files/electron-browser/explorerViewlet",
			"vs/workbench/parts/files/electron-browser/fileActions",
			"vs/workbench/parts/files/electron-browser/fileActions.contribution",
			"vs/workbench/parts/files/electron-browser/fileCommands",
			"vs/workbench/parts/files/electron-browser/files.contribution",
			"vs/workbench/parts/files/electron-browser/saveErrorHandler",
			"vs/workbench/parts/files/electron-browser/views/emptyView",
			"vs/workbench/parts/files/electron-browser/views/explorerDecorationsProvider",
			"vs/workbench/parts/files/electron-browser/views/explorerView",
			"vs/workbench/parts/files/electron-browser/views/explorerViewer",
			"vs/workbench/parts/files/electron-browser/views/openEditorsView",
			"vs/workbench/parts/html/electron-browser/html.contribution",
			"vs/workbench/parts/html/electron-browser/htmlPreviewPart",
			"vs/workbench/parts/localizations/electron-browser/localizations.contribution",
			"vs/workbench/parts/localizations/electron-browser/localizationsActions",
			"vs/workbench/parts/logs/electron-browser/logs.contribution",
			"vs/workbench/parts/logs/electron-browser/logsActions",
			"vs/workbench/parts/markers/electron-browser/markers",
			"vs/workbench/parts/markers/electron-browser/markers.contribution",
			"vs/workbench/parts/markers/electron-browser/markersFileDecorations",
			"vs/workbench/parts/markers/electron-browser/markersPanel",
			"vs/workbench/parts/markers/electron-browser/markersPanelActions",
			"vs/workbench/parts/markers/electron-browser/messages",
			"vs/workbench/parts/outline/electron-browser/outline.contribution",
			"vs/workbench/parts/outline/electron-browser/outlinePanel",
			"vs/workbench/parts/output/browser/outputActions",
			"vs/workbench/parts/output/browser/outputPanel",
			"vs/workbench/parts/output/electron-browser/output.contribution",
			"vs/workbench/parts/output/electron-browser/outputServices",
			"vs/workbench/parts/performance/electron-browser/startupProfiler",
			"vs/workbench/parts/preferences/browser/keybindingWidgets",
			"vs/workbench/parts/preferences/browser/keybindingsEditor",
			"vs/workbench/parts/preferences/browser/keybindingsEditorContribution",
			"vs/workbench/parts/preferences/browser/preferencesActions",
			"vs/workbench/parts/preferences/browser/preferencesEditor",
			"vs/workbench/parts/preferences/browser/preferencesRenderers",
			"vs/workbench/parts/preferences/browser/preferencesWidgets",
			"vs/workbench/parts/preferences/browser/settingsEditor2",
			"vs/workbench/parts/preferences/browser/settingsLayout",
			"vs/workbench/parts/preferences/browser/settingsTree",
			"vs/workbench/parts/preferences/electron-browser/preferences.contribution",
			"vs/workbench/parts/quickopen/browser/commandsHandler",
			"vs/workbench/parts/quickopen/browser/gotoLineHandler",
			"vs/workbench/parts/quickopen/browser/gotoSymbolHandler",
			"vs/workbench/parts/quickopen/browser/helpHandler",
			"vs/workbench/parts/quickopen/browser/quickopen.contribution",
			"vs/workbench/parts/quickopen/browser/viewPickerHandler",
			"vs/workbench/parts/relauncher/electron-browser/relauncher.contribution",
			"vs/workbench/parts/scm/electron-browser/dirtydiffDecorator",
			"vs/workbench/parts/scm/electron-browser/scm.contribution",
			"vs/workbench/parts/scm/electron-browser/scmActivity",
			"vs/workbench/parts/scm/electron-browser/scmViewlet",
			"vs/workbench/parts/search/browser/openAnythingHandler",
			"vs/workbench/parts/search/browser/openFileHandler",
			"vs/workbench/parts/search/browser/openSymbolHandler",
			"vs/workbench/parts/search/browser/patternInputWidget",
			"vs/workbench/parts/search/browser/replaceService",
			"vs/workbench/parts/search/browser/searchActions",
			"vs/workbench/parts/search/browser/searchResultsView",
			"vs/workbench/parts/search/browser/searchView",
			"vs/workbench/parts/search/browser/searchWidget",
			"vs/workbench/parts/search/common/queryBuilder",
			"vs/workbench/parts/search/electron-browser/search.contribution",
			"vs/workbench/parts/snippets/electron-browser/configureSnippets",
			"vs/workbench/parts/snippets/electron-browser/insertSnippet",
			"vs/workbench/parts/snippets/electron-browser/snippets.contribution",
			"vs/workbench/parts/snippets/electron-browser/snippetsFile",
			"vs/workbench/parts/snippets/electron-browser/snippetsService",
			"vs/workbench/parts/snippets/electron-browser/tabCompletion",
			"vs/workbench/parts/surveys/electron-browser/languageSurveys.contribution",
			"vs/workbench/parts/surveys/electron-browser/nps.contribution",
			"vs/workbench/parts/tasks/browser/quickOpen",
			"vs/workbench/parts/tasks/browser/taskQuickOpen",
			"vs/workbench/parts/tasks/common/problemMatcher",
			"vs/workbench/parts/tasks/common/taskDefinitionRegistry",
			"vs/workbench/parts/tasks/common/taskTemplates",
			"vs/workbench/parts/tasks/electron-browser/jsonSchemaCommon",
			"vs/workbench/parts/tasks/electron-browser/jsonSchema_v1",
			"vs/workbench/parts/tasks/electron-browser/jsonSchema_v2",
			"vs/workbench/parts/tasks/electron-browser/task.contribution",
			"vs/workbench/parts/tasks/electron-browser/terminalTaskSystem",
			"vs/workbench/parts/tasks/node/processRunnerDetector",
			"vs/workbench/parts/tasks/node/processTaskSystem",
			"vs/workbench/parts/tasks/node/taskConfiguration",
			"vs/workbench/parts/tasks/node/tasks",
			"vs/workbench/parts/terminal/browser/terminalQuickOpen",
			"vs/workbench/parts/terminal/common/terminalColorRegistry",
			"vs/workbench/parts/terminal/electron-browser/terminal.contribution",
			"vs/workbench/parts/terminal/electron-browser/terminalActions",
			"vs/workbench/parts/terminal/electron-browser/terminalConfigHelper",
			"vs/workbench/parts/terminal/electron-browser/terminalInstance",
			"vs/workbench/parts/terminal/electron-browser/terminalLinkHandler",
			"vs/workbench/parts/terminal/electron-browser/terminalPanel",
			"vs/workbench/parts/terminal/electron-browser/terminalService",
			"vs/workbench/parts/themes/electron-browser/themes.contribution",
			"vs/workbench/parts/update/electron-browser/releaseNotesEditor",
			"vs/workbench/parts/update/electron-browser/update",
			"vs/workbench/parts/url/electron-browser/url.contribution",
			"vs/workbench/parts/watermark/electron-browser/watermark",
			"vs/workbench/parts/webview/electron-browser/webview.contribution",
			"vs/workbench/parts/webview/electron-browser/webviewCommands",
			"vs/workbench/parts/welcome/gettingStarted/electron-browser/telemetryOptOut",
			"vs/workbench/parts/welcome/overlay/browser/welcomeOverlay",
			"vs/workbench/parts/welcome/page/electron-browser/vs_code_welcome_page",
			"vs/workbench/parts/welcome/page/electron-browser/welcomePage",
			"vs/workbench/parts/welcome/page/electron-browser/welcomePage.contribution",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/editor/editorWalkThrough",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThrough.contribution",
			"vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart",
			"vs/workbench/services/actions/electron-browser/menusExtensionPoint",
			"vs/workbench/services/bulkEdit/electron-browser/bulkEditService",
			"vs/workbench/services/configuration/common/configurationExtensionPoint",
			"vs/workbench/services/configuration/node/configurationEditingService",
			"vs/workbench/services/configuration/node/configurationService",
			"vs/workbench/services/configuration/node/jsonEditingService",
			"vs/workbench/services/configurationResolver/electron-browser/configurationResolverService",
			"vs/workbench/services/configurationResolver/node/variableResolver",
			"vs/workbench/services/crashReporter/electron-browser/crashReporterService",
			"vs/workbench/services/decorations/browser/decorationsService",
			"vs/workbench/services/dialogs/electron-browser/dialogService",
			"vs/workbench/services/editor/browser/editorService",
			"vs/workbench/services/extensions/common/extensionsRegistry",
			"vs/workbench/services/extensions/electron-browser/extensionHost",
			"vs/workbench/services/extensions/electron-browser/extensionService",
			"vs/workbench/services/extensions/node/extensionPoints",
			"vs/workbench/services/files/electron-browser/fileService",
			"vs/workbench/services/files/electron-browser/remoteFileService",
			"vs/workbench/services/jsonschemas/common/jsonValidationExtensionPoint",
			"vs/workbench/services/keybinding/common/keybindingEditing",
			"vs/workbench/services/keybinding/electron-browser/keybindingService",
			"vs/workbench/services/mode/common/workbenchModeService",
			"vs/workbench/services/preferences/browser/preferencesService",
			"vs/workbench/services/preferences/common/keybindingsEditorModel",
			"vs/workbench/services/preferences/common/preferences",
			"vs/workbench/services/preferences/common/preferencesEditorInput",
			"vs/workbench/services/preferences/common/preferencesModels",
			"vs/workbench/services/progress/browser/progressService2",
			"vs/workbench/services/textMate/electron-browser/TMGrammars",
			"vs/workbench/services/textMate/electron-browser/TMSyntax",
			"vs/workbench/services/textfile/common/textFileEditorModel",
			"vs/workbench/services/textfile/common/textFileService",
			"vs/workbench/services/textfile/electron-browser/textFileService",
			"vs/workbench/services/themes/common/colorExtensionPoint",
			"vs/workbench/services/themes/common/colorThemeSchema",
			"vs/workbench/services/themes/common/fileIconThemeSchema",
			"vs/workbench/services/themes/electron-browser/colorThemeData",
			"vs/workbench/services/themes/electron-browser/colorThemeStore",
			"vs/workbench/services/themes/electron-browser/fileIconThemeData",
			"vs/workbench/services/themes/electron-browser/fileIconThemeStore",
			"vs/workbench/services/themes/electron-browser/workbenchThemeService",
			"vs/workbench/services/workspace/node/workspaceEditingService"
		],
		"vs/workbench/parts/debug/node/telemetryApp": [
			"vs/base/node/processes"
		],
		"vs/workbench/services/search/node/searchApp": [
			"vs/base/common/errorMessage",
			"vs/base/node/processes"
		],
		"vs/workbench/services/search/node/worker/searchWorkerApp": [
			"vs/base/node/processes"
		],
		"vs/workbench/services/files/node/watcher/unix/watcherApp": [
			"vs/base/node/processes"
		],
		"vs/workbench/services/files/node/watcher/nsfw/watcherApp": [
			"vs/base/node/processes"
		],
		"vs/workbench/node/extensionHostProcess": [
			"vs/base/common/errorMessage",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/editor/common/config/editorOptions",
			"vs/editor/common/modes/modesRegistry",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/markers/common/markers",
			"vs/platform/workspaces/common/workspaces",
			"vs/workbench/api/node/extHostDebugService",
			"vs/workbench/api/node/extHostDiagnostics",
			"vs/workbench/api/node/extHostExtensionActivator",
			"vs/workbench/api/node/extHostProgress",
			"vs/workbench/api/node/extHostTask",
			"vs/workbench/api/node/extHostTreeViews",
			"vs/workbench/api/node/extHostWorkspace",
			"vs/workbench/node/extensionHostMain",
			"vs/workbench/parts/debug/node/debugAdapter",
			"vs/workbench/parts/debug/node/terminals",
			"vs/workbench/services/configurationResolver/node/variableResolver"
		],
		"vs/code/electron-main/main": [
			"vs/base/common/keybindingLabels",
			"vs/base/common/severity",
			"vs/code/electron-main/auth",
			"vs/code/electron-main/logUploader",
			"vs/code/electron-main/main",
			"vs/code/electron-main/menubar",
			"vs/code/electron-main/menus",
			"vs/code/electron-main/window",
			"vs/code/electron-main/windows",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/dialogs/common/dialogs",
			"vs/platform/dialogs/node/dialogService",
			"vs/platform/environment/node/argv",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/history/electron-main/historyMainService",
			"vs/platform/issue/electron-main/issueService",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/platform/update/node/update.config.contribution",
			"vs/platform/windows/electron-main/windowsService",
			"vs/platform/workspaces/common/workspaces"
		],
		"vs/code/node/cli": [
			"vs/platform/environment/node/argv"
		],
		"vs/code/node/cliProcessMain": [
			"vs/base/common/errorMessage",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/code/node/cliProcessMain",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/dialogs/common/dialogs",
			"vs/platform/dialogs/node/dialogService",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService"
		],
		"vs/code/electron-browser/issue/issueReporterMain": [
			"vs/code/electron-browser/issue/issueReporterMain",
			"vs/code/electron-browser/issue/issueReporterPage",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/telemetry/common/telemetryService"
		],
		"vs/code/electron-browser/sharedProcess/sharedProcessMain": [
			"vs/base/common/errorMessage",
			"vs/base/common/severity",
			"vs/base/node/zip",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/dialogs/common/dialogs",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionGalleryService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensions/node/extensionValidator",
			"vs/platform/request/node/request",
			"vs/platform/telemetry/common/telemetryService"
		],
		"vs/code/electron-browser/processExplorer/processExplorerMain": [
			"vs/code/electron-browser/processExplorer/processExplorerMain"
		]
	}
}